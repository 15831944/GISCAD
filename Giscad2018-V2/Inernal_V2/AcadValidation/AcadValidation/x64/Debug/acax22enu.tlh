// Created by Microsoft (R) C/C++ Compiler Version 14.00.24215.1 (61d59a25).
//
// e:\giscad\giscad2018\inernal\acadvalidation\acadvalidation\x64\debug\acax22enu.tlh
//
// C++ source equivalent of type library acax22ENU.tlb
// compiler-generated file created 12/20/18 at 16:27:46 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace AutoCAD {

//
// Forward references and typedefs
//

struct __declspec(uuid("644614d2-93dc-48c6-a061-21abce65a4c0"))
/* LIBID */ __AutoCAD;
enum AcBoolean;
enum AcOnOff;
enum AcEntityName;
enum AcActiveSpace;
enum AcKeyboardAccelerator;
enum AcPlotOrientation;
enum AcColor;
enum AcAttachmentPoint;
enum AcDrawingDirection;
enum AcLeaderType;
enum AcAttributeMode;
enum AcHorizontalAlignment;
enum AcVerticalAlignment;
enum AcTextGenerationFlag;
enum AcSelect;
enum AcPatternType;
enum AcLoopType;
enum AcHatchStyle;
enum AcPolylineType;
enum Ac3DPolylineType;
enum AcViewportSplitType;
enum AcRegenType;
enum AcBooleanType;
enum AcExtendOption;
enum AcAngleUnits;
enum AcUnits;
enum AcCoordinateSystem;
enum AcMeasurementUnits;
enum AcXRefDemandLoad;
enum AcPreviewMode;
enum AcPolymeshType;
enum AcZoomScaleType;
enum AcDragDisplayMode;
enum AcARXDemandLoad;
enum AcTextFontStyle;
enum AcProxyImage;
enum AcKeyboardPriority;
enum AcMenuGroupType;
enum AcMenuFileType;
enum AcMenuItemType;
enum AcToolbarItemType;
enum AcToolbarDockStatus;
enum AcLineWeight;
enum AcWindowState;
enum AcPlotPaperUnits;
enum AcPlotRotation;
enum AcPlotType;
enum AcPlotScale;
enum AcAlignment;
enum AcLineSpacingStyle;
enum AcDimPrecision;
enum AcDimUnits;
enum AcDimLUnits;
enum AcDimArrowheadType;
enum AcDimCenterType;
enum AcDimFit;
enum AcDimFractionType;
enum AcDimArcLengthSymbol;
enum AcDimHorizontalJustification;
enum AcDimVerticalJustification;
enum AcDimTextMovement;
enum AcDimToleranceMethod;
enum AcDimToleranceJustify;
enum AcViewportScale;
enum AcISOPenWidth;
enum AcSaveAsType;
enum AcPrinterSpoolAlert;
enum AcPlotPolicyForNewDwgs;
enum AcPlotPolicyForLegacyDwgs;
enum AcOleQuality;
enum AcLoadPalette;
enum AcInsertUnits;
enum AcAlignmentPointAcquisition;
enum AcInsertUnitsAction;
enum AcPlotPolicy;
enum AcDrawingAreaShortCutMenu;
enum AcDrawingAreaSCMDefault;
enum AcDrawingAreaSCMEdit;
enum AcDrawingAreaSCMCommand;
enum AcLayerStateMask;
enum AcShadePlot;
enum AcHatchObjectType;
enum AcGradientPatternType;
enum AcTableDirection;
enum AcCellAlignment;
enum AcRowType;
enum AcValueDataType;
enum AcValueUnitType;
enum AcParseOption;
enum AcFormatOption;
enum AcGridLineType;
enum AcCellType;
enum AcCellEdgeMask;
enum AcRotationAngle;
enum AcMergeCellStyleOption;
enum AcSelectType;
enum AcOleType;
enum AcOlePlotQuality;
enum AcTableStyleOverrides;
enum AcMLineJustification;
enum AcBlockScaling;
enum AcDynamicBlockReferencePropertyUnitsType;
enum AcSectionState;
enum AcSectionState2;
enum AcSectionSubItem;
enum AcSectionType;
enum AcSectionGeneration;
enum AcHelixConstrainType;
enum AcShadowDisplayType;
enum AcLoftedSurfaceNormalType;
enum AcHelixTwistType;
enum AcUnderlayLayerOverrideType;
enum AcTableFlowDirection;
enum AcCellMargin;
enum AcCellContentLayout;
enum AcCellProperty;
enum AcGridLineStyle;
enum AcDataLinkUpdateDirection;
enum AcDataLinkUpdateOption;
enum AcCellContentType;
enum AcCellState;
enum AcCellOption;
enum AcTextAttachmentType;
enum AcMLeaderType;
enum AcMLeaderContentType;
enum AcTextAlignmentType;
enum AcTextAngleType;
enum AcBlockConnectionType;
enum AcPredefBlockType;
enum AcDrawLeaderOrderType;
enum AcDrawMLeaderOrderType;
enum AcSegmentAngleType;
enum AcTextAttachmentDirection;
enum AcVerticalTextAttachmentType;
enum AcMeshCreaseType;
struct __declspec(uuid("aeb8d2e2-b3e1-499b-a357-7b3f51cec147"))
/* dual interface */ IAcadObject;
struct __declspec(uuid("6bdb570e-652b-4e06-9fa3-17266bc95414"))
/* dual interface */ IAcadDatabase;
struct __declspec(uuid("dd75d714-5662-44ea-bd50-3c48aa71e248"))
/* dual interface */ IAcadModelSpace;
struct __declspec(uuid("181f4481-763e-4e58-ae89-cf4c003ef491"))
/* dual interface */ IAcadBlock;
struct __declspec(uuid("acf0aa82-ffec-402b-9b87-1568f6c24f82"))
/* dual interface */ IAcadEntity;
struct __declspec(uuid("82174a4a-973d-4fc5-b3e7-5d009936ae57"))
/* dual interface */ IAcadAcCmColor;
enum AcColorMethod;
struct __declspec(uuid("d803123c-9777-47a8-a7b4-60c09762ae0d"))
/* dual interface */ IAcadHyperlinks;
struct __declspec(uuid("b4db8063-df62-413b-a300-8847f8a1fb86"))
/* dual interface */ IAcadHyperlink;
struct __declspec(uuid("1759387a-60a3-41e5-a8c5-90a082b32bb2"))
/* dual interface */ IAcad3DFace;
struct __declspec(uuid("039b9382-f2e7-4ab6-9461-cf2e763e7a57"))
/* dual interface */ IAcadPolygonMesh;
struct __declspec(uuid("4fee5511-1bd7-4ec7-9027-a9113a016345"))
/* dual interface */ IAcad3DPolyline;
struct __declspec(uuid("64dc9029-fd27-48de-85b8-a471f654c20b"))
/* dual interface */ IAcadArc;
struct __declspec(uuid("99b991ad-2222-48dd-be16-59e40d03b561"))
/* dual interface */ IAcadAttribute;
struct __declspec(uuid("9af5dc27-d177-4810-b524-a63c9f5993c2"))
/* dual interface */ IAcad3DSolid;
struct __declspec(uuid("60f904e0-3634-4cc3-b4cd-b15940063bf1"))
/* dual interface */ IAcadRegion;
struct __declspec(uuid("4a749d26-4d00-4ea1-a121-a457c30e6f57"))
/* dual interface */ IAcadCircle;
struct __declspec(uuid("52729d26-9908-469d-a87c-b331059b94ea"))
/* dual interface */ IAcadDimAligned;
struct __declspec(uuid("397baf06-05cd-44dd-a56a-11784c4fb7b5"))
/* dual interface */ IAcadDimension;
struct __declspec(uuid("eb3c91ca-7d5a-42cd-92dc-6a78c50b2edb"))
/* dual interface */ IAcadDimAngular;
struct __declspec(uuid("896feaf5-0ad9-4414-aac8-0a1ae672ac83"))
/* dual interface */ IAcadDimDiametric;
struct __declspec(uuid("3e6efac3-4495-43de-a25f-0259ffab4015"))
/* dual interface */ IAcadDimRotated;
struct __declspec(uuid("671d6427-d2e8-4637-98cc-e5e2b60409e5"))
/* dual interface */ IAcadDimOrdinate;
struct __declspec(uuid("18da8524-1491-4cc7-afc7-26d1deccd6bf"))
/* dual interface */ IAcadDimRadial;
struct __declspec(uuid("a35236d3-c2f2-482d-b272-cce9f236fad2"))
/* dual interface */ IAcadEllipse;
struct __declspec(uuid("aa112a3d-c9da-4851-8199-a465584d9d98"))
/* dual interface */ IAcadLeader;
struct __declspec(uuid("95a24d69-4531-4083-925e-69865fbb9a03"))
/* dual interface */ IAcadMText;
struct __declspec(uuid("52485ac7-5e0d-4da4-b642-0796831aa592"))
/* dual interface */ IAcadPoint;
struct __declspec(uuid("0f3fb243-2494-4bac-bfc9-304466f12711"))
/* dual interface */ IAcadLWPolyline;
struct __declspec(uuid("bbc9e18d-538f-43ad-a963-a29e87993cbb"))
/* dual interface */ IAcadPolyline;
struct __declspec(uuid("81989cda-342d-4634-b229-8ace12c27cc3"))
/* dual interface */ IAcadRay;
struct __declspec(uuid("504f080d-45d3-4bfc-bd95-681b1194ec1d"))
/* dual interface */ IAcadShape;
struct __declspec(uuid("a2f91ead-d307-4465-b70e-ecf9fb7103e3"))
/* dual interface */ IAcadSolid;
struct __declspec(uuid("75a55bac-3e9c-47d0-89f6-76fa61bc5366"))
/* dual interface */ IAcadSpline;
enum AcSplineKnotParameterizationType;
enum AcSplineFrameType;
enum AcSplineMethodType;
struct __declspec(uuid("ca2dd247-d133-4646-ba49-ee3dd475a3bc"))
/* dual interface */ IAcadText;
struct __declspec(uuid("6779b954-8464-496a-8458-53405f035358"))
/* dual interface */ IAcadTolerance;
struct __declspec(uuid("d295da05-d626-4b03-8ff3-836da9b97de4"))
/* dual interface */ IAcadTrace;
struct __declspec(uuid("d70f5268-be6d-4ba6-a289-13fba96c3084"))
/* dual interface */ IAcadXline;
struct __declspec(uuid("1d43bc6f-2a8e-4ab4-a171-e05ec82795af"))
/* dual interface */ IAcadBlockReference;
struct __declspec(uuid("53eb1a05-9449-466f-8e62-a34006ba9d3c"))
/* dual interface */ IAcadHatch;
struct __declspec(uuid("98faf084-febc-425b-b3bc-5d5ec5fee54e"))
/* dual interface */ IAcadRasterImage;
struct __declspec(uuid("a02d3284-e931-40ff-a953-0fa655b07980"))
/* dual interface */ IAcadLine;
struct __declspec(uuid("39642510-ece5-4620-a0ee-5ec5c6382c15"))
/* dual interface */ IAcadLayout;
struct __declspec(uuid("0c6a8b60-415e-4625-81a9-ef84216fd3b4"))
/* dual interface */ IAcadPlotConfiguration;
struct __declspec(uuid("1ff467d1-2ef7-4426-a0db-f96572c26b13"))
/* dual interface */ IAcadMInsertBlock;
struct __declspec(uuid("4647dce6-d132-4edd-9447-11b523af4c9e"))
/* dual interface */ IAcadPolyfaceMesh;
struct __declspec(uuid("5f26c199-3259-4a39-8fd9-60285db2f765"))
/* dual interface */ IAcadMLine;
struct __declspec(uuid("0ae304c8-61ef-4d52-be60-7a87dedc2c4e"))
/* dual interface */ IAcadDim3PointAngular;
struct __declspec(uuid("a3aa22e3-7b15-4bda-83fa-80336989010d"))
/* dual interface */ IAcadExternalReference;
struct __declspec(uuid("84fed720-777d-479e-9b15-13cd56f96173"))
/* dual interface */ IAcadTable;
struct __declspec(uuid("84618c65-48f9-450e-bbeb-7149909c0ce4"))
/* dual interface */ IAcadDimArcLength;
struct __declspec(uuid("fbd4807f-e100-4326-ae79-ff93f5dfc2f3"))
/* dual interface */ IAcadDimRadialLarge;
struct __declspec(uuid("23ab4987-f991-408c-a2e9-1c77b50befc3"))
/* dual interface */ IAcadSection;
struct __declspec(uuid("a240ec7f-14cf-4da1-b3d4-74b9062895da"))
/* dual interface */ IAcadSectionSettings;
struct __declspec(uuid("4e77067c-83ba-4446-86de-1136e07542a7"))
/* dual interface */ IAcadSectionTypeSettings;
struct __declspec(uuid("8ee08989-6f86-4685-99c4-3f48a1242bd8"))
/* dual interface */ IAcadMLeader;
struct __declspec(uuid("655a39a8-041f-4156-9f02-f9180a0468a5"))
/* dual interface */ IAcadPaperSpace;
struct __declspec(uuid("d71870d2-e2fe-43c5-90fa-8ff4711fc984"))
/* dual interface */ IAcadPViewport;
struct __declspec(uuid("d886f48c-94ab-4240-877b-a22428d6ffcd"))
/* dual interface */ IAcadView;
struct __declspec(uuid("16effb20-32ce-494d-982c-373a53968a40"))
/* dual interface */ IAcadBlocks;
struct __declspec(uuid("15f4cd6c-78c7-4e34-97bb-88866ab7234c"))
/* dual interface */ IAcadGroups;
struct __declspec(uuid("9f470d4d-44b7-4d3c-82e5-493da2e94215"))
/* dual interface */ IAcadGroup;
struct __declspec(uuid("ddae1905-b805-4444-8c99-0db4ae89f517"))
/* dual interface */ IAcadDimStyles;
struct __declspec(uuid("5f64b0a6-1728-41c4-93e6-24c2daa48e93"))
/* dual interface */ IAcadDimStyle;
struct __declspec(uuid("713e7af3-1517-49fc-b6b4-429bdcd83b40"))
/* dual interface */ IAcadLayers;
struct __declspec(uuid("7abc3225-0845-44cd-96e3-dc73e280aca0"))
/* dual interface */ IAcadLayer;
struct __declspec(uuid("122c5869-568a-4df0-9b0d-fb113e8defce"))
/* dual interface */ IAcadLineTypes;
struct __declspec(uuid("545d3abe-3b77-45c3-afcc-0aff39d25dd5"))
/* dual interface */ IAcadLineType;
struct __declspec(uuid("c2521948-f0c1-4af7-8507-baea76be3687"))
/* dual interface */ IAcadDictionaries;
struct __declspec(uuid("42828358-7505-416b-9a56-98f4e9bb35c6"))
/* dual interface */ IAcadDictionary;
struct __declspec(uuid("67433105-639d-42fb-abc4-1a4e70b638b5"))
/* dual interface */ IAcadXRecord;
struct __declspec(uuid("97beb443-7259-4377-87fa-1a3e5e882b3c"))
/* dual interface */ IAcadRegisteredApplications;
struct __declspec(uuid("553652d5-2c7e-4e81-bbeb-65579ec58471"))
/* dual interface */ IAcadRegisteredApplication;
struct __declspec(uuid("49ed276a-716c-4700-999f-e44f1d10dd8c"))
/* dual interface */ IAcadTextStyles;
struct __declspec(uuid("3b4c686e-d760-4b2e-9737-0cfd0a434d5d"))
/* dual interface */ IAcadTextStyle;
struct __declspec(uuid("1da18452-ee21-4ba4-83f8-80c52fb781fc"))
/* dual interface */ IAcadUCSs;
struct __declspec(uuid("27ca935e-e9c4-44e9-88fb-e6d22eed3f64"))
/* dual interface */ IAcadUCS;
struct __declspec(uuid("692a60f2-6e56-41be-ac25-054aa8b4dd2d"))
/* dual interface */ IAcadViews;
struct __declspec(uuid("8caaf247-a4ae-486a-a886-37f07aa461a0"))
/* dual interface */ IAcadViewports;
struct __declspec(uuid("6fe5c544-2694-48fc-9c50-5b32e38f6ea2"))
/* dual interface */ IAcadViewport;
struct __declspec(uuid("a1bd1006-20ed-48c4-9180-1ee5b26f6848"))
/* dual interface */ IAcadLayouts;
struct __declspec(uuid("b863a2f4-4fcd-4269-9f67-14ed9e75a7ce"))
/* dual interface */ IAcadPlotConfigurations;
struct __declspec(uuid("5b478006-beed-4daa-ac97-3bf847c13c72"))
/* dual interface */ IAcadDatabasePreferences;
struct __declspec(uuid("37d2d493-cbfb-474b-b9b9-4bac8cf79678"))
/* dual interface */ IAcadSummaryInfo;
struct __declspec(uuid("38d109f9-00b7-47bf-89bd-272084478231"))
/* dual interface */ IAcadSectionManager;
struct __declspec(uuid("0f9a3916-cc82-4177-aabd-74d243a15a04"))
/* dual interface */ IAcadMaterials;
struct __declspec(uuid("0c755ca3-0d6a-493a-8a3a-cf00550d7a3c"))
/* dual interface */ IAcadMaterial;
enum AcWireframeType;
enum AcPointCloudColorType;
enum AcPointCloudStylizationType;
enum AcPointCloudIntensityStyle;
enum AcPointCloudExStylizationType;
struct __declspec(uuid("72e04115-1905-4dfa-b65c-1e941c46a114"))
/* dual interface */ IAcadSectionTypeSettings2;
struct /* coclass */ AcadHyperlink;
struct __declspec(uuid("723b19d6-1957-41ed-b6a3-5a4d2de405bb"))
/* dual interface */ IAcadDynamicBlockReferenceProperty;
struct /* coclass */ AcadDynamicBlockReferenceProperty;
struct /* coclass */ AcadAcCmColor;
struct __declspec(uuid("a0df146c-6a67-4497-b546-85af42b60244"))
/* interface */ IAcadObjectEvents;
struct /* coclass */ AcadObject;
struct /* coclass */ AcadXRecord;
struct __declspec(uuid("f24a1ea1-ca8e-4a39-a23c-a28d3423ae5e"))
/* dual interface */ IAcadSortentsTable;
struct /* coclass */ AcadSortentsTable;
struct /* coclass */ AcadDimStyle;
struct /* coclass */ AcadLayer;
struct /* coclass */ AcadLineType;
struct /* coclass */ AcadMaterial;
struct /* coclass */ AcadRegisteredApplication;
struct /* coclass */ AcadTextStyle;
struct /* coclass */ AcadUCS;
struct /* coclass */ AcadView;
struct /* coclass */ AcadViewport;
struct /* coclass */ AcadGroup;
struct /* coclass */ AcadPlotConfiguration;
struct /* coclass */ AcadLayout;
struct __declspec(uuid("96a0858a-afbd-4922-8ff4-06bdd202e229"))
/* dual interface */ IAcadIdPair;
struct /* coclass */ AcadIdPair;
struct __declspec(uuid("0978b906-02e7-42d8-a014-28ea9d61084e"))
/* dual interface */ IAcadTableStyle;
struct /* coclass */ AcadTableStyle;
struct /* coclass */ AcadSectionSettings;
struct /* coclass */ AcadSectionTypeSettings;
struct __declspec(uuid("67388466-a056-4740-97c6-d81837fc8199"))
/* dual interface */ IAcadMLeaderStyle;
struct /* coclass */ AcadMLeaderStyle;
struct /* coclass */ AcadHyperlinks;
struct /* coclass */ AcadDictionary;
struct /* coclass */ AcadLayers;
struct /* coclass */ AcadDimStyles;
struct /* coclass */ AcadDictionaries;
struct /* coclass */ AcadLineTypes;
struct /* coclass */ AcadMaterials;
struct /* coclass */ AcadTextStyles;
struct /* coclass */ AcadUCSs;
struct /* coclass */ AcadRegisteredApplications;
struct /* coclass */ AcadViews;
struct /* coclass */ AcadViewports;
struct /* coclass */ AcadGroups;
struct /* coclass */ AcadBlocks;
struct /* coclass */ AcadLayouts;
struct /* coclass */ AcadPlotConfigurations;
struct /* coclass */ AcadEntity;
struct __declspec(uuid("c476dbac-1c07-4cf1-a84b-38ad1ed8fe2e"))
/* dual interface */ IAcadShadowDisplay;
struct /* coclass */ AcadRasterImage;
struct /* coclass */ Acad3DFace;
struct /* coclass */ Acad3DPolyline;
struct /* coclass */ AcadRegion;
struct /* coclass */ Acad3DSolid;
struct /* coclass */ AcadArc;
struct /* coclass */ AcadAttribute;
struct __declspec(uuid("d867a88e-e78d-4eca-8637-74a342fa32b2"))
/* dual interface */ IAcadAttributeReference;
struct /* coclass */ AcadAttributeReference;
struct /* coclass */ AcadBlockReference;
struct /* coclass */ AcadCircle;
struct /* coclass */ AcadEllipse;
struct /* coclass */ AcadHatch;
struct /* coclass */ AcadLeader;
struct __declspec(uuid("d4623034-9d02-475d-b849-fc2e9d94a1a1"))
/* dual interface */ IAcadSubEntity;
struct __declspec(uuid("fd5750fe-c24d-4556-be06-d37f5a1f821a"))
/* dual interface */ IAcadMLeaderLeader;
struct /* coclass */ AcadMLeaderLeader;
struct /* coclass */ AcadMLeader;
struct /* coclass */ AcadLWPolyline;
struct /* coclass */ AcadLine;
struct /* coclass */ AcadMText;
struct /* coclass */ AcadPoint;
struct /* coclass */ AcadPolyline;
struct /* coclass */ AcadPolygonMesh;
struct /* coclass */ AcadRay;
struct /* coclass */ AcadShape;
struct /* coclass */ AcadSolid;
struct /* coclass */ AcadSpline;
struct /* coclass */ AcadText;
struct /* coclass */ AcadTolerance;
struct /* coclass */ AcadTrace;
struct /* coclass */ AcadXline;
struct /* coclass */ AcadPViewport;
struct /* coclass */ AcadMInsertBlock;
struct /* coclass */ AcadPolyfaceMesh;
struct /* coclass */ AcadMLine;
struct /* coclass */ AcadExternalReference;
struct /* coclass */ AcadTable;
struct __declspec(uuid("5be299ec-70bb-4fe3-8609-d74ec8ff0eaf"))
/* dual interface */ IAcadOle;
struct /* coclass */ AcadOle;
struct __declspec(uuid("be461951-c77e-4c70-bd83-c392820c11fc"))
/* dual interface */ IAcadHelix;
struct /* coclass */ AcadHelix;
struct __declspec(uuid("3d3962e2-e12b-4559-96cf-f32134a0577b"))
/* dual interface */ IAcadSurface;
struct /* coclass */ AcadSurface;
struct __declspec(uuid("fb3fac8e-4f36-4a96-ae22-194b9b686d9f"))
/* dual interface */ IAcadPlaneSurface;
struct /* coclass */ AcadPlaneSurface;
struct __declspec(uuid("813198dd-ef1c-4838-95f4-13a484cae932"))
/* dual interface */ IAcadExtrudedSurface;
struct /* coclass */ AcadExtrudedSurface;
struct __declspec(uuid("60834ece-8e4a-4aec-a217-d0dd2de1b45f"))
/* dual interface */ IAcadRevolvedSurface;
struct /* coclass */ AcadRevolvedSurface;
struct __declspec(uuid("b4ad389f-2624-4670-a480-dc8b29fbc3af"))
/* dual interface */ IAcadSweptSurface;
struct /* coclass */ AcadSweptSurface;
struct __declspec(uuid("a501529b-d232-42a5-91c1-71479187900e"))
/* dual interface */ IAcadLoftedSurface;
struct /* coclass */ AcadLoftedSurface;
struct __declspec(uuid("010c960c-b734-4c93-a50c-e73d8f29d6de"))
/* dual interface */ IAcadSection2;
struct /* coclass */ AcadSection;
struct /* coclass */ AcadSectionManager;
struct __declspec(uuid("92f36a6f-7faf-49de-93f0-93e9bcb8aa6c"))
/* dual interface */ IAcadUnderlay;
struct __declspec(uuid("9e607850-b9bd-4516-8865-58d1ec3d2133"))
/* dual interface */ IAcadDwfUnderlay;
struct /* coclass */ AcadDwfUnderlay;
struct /* coclass */ AcadDgnUnderlay;
struct /* coclass */ AcadPdfUnderlay;
struct /* coclass */ AcadSubEntity;
struct __declspec(uuid("09d386fe-c2ca-499c-b5c8-04669d31b04b"))
/* dual interface */ IAcadSubEntSolidFace;
struct /* coclass */ AcadSubEntSolidFace;
struct __declspec(uuid("8fa9f8d0-d221-406c-b90d-148df7e05454"))
/* dual interface */ IAcadSubEntSolidEdge;
struct /* coclass */ AcadSubEntSolidEdge;
struct __declspec(uuid("a616de10-4b03-4ba8-a213-6a485eda0f68"))
/* dual interface */ IAcadSubEntSolidVertex;
struct /* coclass */ AcadSubEntSolidVertex;
struct __declspec(uuid("9c40da30-7619-4c91-a65f-c714ce7c9179"))
/* dual interface */ IAcadSubEntSolidNode;
struct /* coclass */ AcadSubEntSolidNode;
struct __declspec(uuid("03be17b5-89b0-4341-a5fc-31934bdb5482"))
/* dual interface */ IAcadWipeout;
struct /* coclass */ AcadWipeout;
struct __declspec(uuid("7b142040-0b30-4e59-966d-fa1277604017"))
/* dual interface */ IAcadSubDMesh;
struct /* coclass */ AcadSubDMesh;
struct __declspec(uuid("cd70ef32-6207-4e70-bb30-b0988c7fb089"))
/* dual interface */ IAcadSubDMeshFace;
struct /* coclass */ AcadSubDMeshFace;
struct __declspec(uuid("b8e2ef9f-2d35-433e-a278-1dc5695c4b5d"))
/* dual interface */ IAcadSubDMeshEdge;
struct /* coclass */ AcadSubDMeshEdge;
struct __declspec(uuid("a3fddd7e-946b-48e9-98c3-c23aa15e83fc"))
/* dual interface */ IAcadSubDMeshVertex;
struct /* coclass */ AcadSubDMeshVertex;
struct __declspec(uuid("be4e6da9-6602-4f83-b458-df0fe7602cc8"))
/* dual interface */ IAcadNurbSurface;
struct /* coclass */ AcadNurbSurface;
struct __declspec(uuid("030fbed4-476a-4db5-84c0-6f2cd856fcc3"))
/* dual interface */ IAcadGeoPositionMarker;
struct /* coclass */ AcadGeoPositionMarker;
struct __declspec(uuid("0af8ab47-b44e-4e1c-92ef-20ec0202c3bd"))
/* dual interface */ IAcadGeomapImage;
struct /* coclass */ AcadGeomapImage;
struct /* coclass */ AcadDimension;
struct /* coclass */ AcadDimAligned;
struct /* coclass */ AcadDimAngular;
struct /* coclass */ AcadDimDiametric;
struct /* coclass */ AcadDimOrdinate;
struct /* coclass */ AcadDimRadial;
struct /* coclass */ AcadDimRotated;
struct /* coclass */ AcadDim3PointAngular;
struct /* coclass */ AcadDimArcLength;
struct /* coclass */ AcadDimRadialLarge;
struct /* coclass */ AcadBlock;
struct /* coclass */ AcadModelSpace;
struct /* coclass */ AcadPaperSpace;
struct __declspec(uuid("9995941c-67e4-4c5b-a2c7-f6bc8a329648"))
/* dual interface */ IAcadPointCloud;
struct /* coclass */ AcadPointCloud;
struct __declspec(uuid("22c5274e-dc1a-4b3f-a1f4-943af9bb7a46"))
/* dual interface */ IAcadPointCloudEx;
struct __declspec(uuid("ffc368fe-bddf-4281-806a-aba65afad03e"))
/* dual interface */ IAcadPointCloudEx2;
struct /* coclass */ AcadPointCloudEx;
struct /* coclass */ AcadSummaryInfo;
struct /* coclass */ AcadDatabasePreferences;
struct /* coclass */ AcadDatabase;
enum AcadSecurityParamsType;
enum AcadSecurityParamsConstants;
struct __declspec(uuid("a5c61cc3-daf1-47f8-a774-42ffdd9b798b"))
/* dual interface */ IAcadSecurityParams;
struct /* coclass */ AcadSecurityParams;
struct __declspec(uuid("0cb51cb5-cc33-4ac0-9867-085eba3316a0"))
/* dual interface */ IAcadLayerStateManager;
struct /* coclass */ AcadLayerStateManager;
struct __declspec(uuid("d523cb7c-30b6-4a7a-8c2d-79b23b4878a9"))
/* dispinterface */ _DAcadApplicationEvents;
struct __declspec(uuid("1c6e41bb-3441-477c-bcc0-6e05a3d487fd"))
/* dual interface */ IAcadDocument;
struct __declspec(uuid("2761aa3f-0da6-4203-836e-fd0a0fc168c6"))
/* dual interface */ IAcadPlot;
struct __declspec(uuid("2007dd78-b05a-422e-af97-cd08d8dcd8e0"))
/* dual interface */ IAcadApplication;
struct __declspec(uuid("c8fba802-6ff6-46bb-a29b-96f46e09ea4f"))
/* dual interface */ IAcadPreferences;
struct __declspec(uuid("cfd2d9a8-bdda-455a-93ad-8d47ed6cd9cb"))
/* dual interface */ IAcadPreferencesFiles;
struct __declspec(uuid("bf71abf6-0878-493d-b7ec-f221797c41db"))
/* dual interface */ IAcadPreferencesDisplay;
struct __declspec(uuid("dbb44995-7728-499e-8273-2ab30ac17794"))
/* dual interface */ IAcadPreferencesOpenSave;
struct __declspec(uuid("bc4af42a-d51e-4936-962d-1adbddfd6090"))
/* dual interface */ IAcadPreferencesOutput;
struct __declspec(uuid("daf7bc7c-a60a-4ca7-bbd9-a6ded455682e"))
/* dual interface */ IAcadPreferencesSystem;
struct __declspec(uuid("65651c0f-4381-452b-a8d7-a01f1a8efc9d"))
/* dual interface */ IAcadPreferencesUser;
struct __declspec(uuid("1f8ebfdf-587c-473d-ae11-330cda3c669f"))
/* dual interface */ IAcadPreferencesDrafting;
struct __declspec(uuid("16dc76bd-ed63-45e5-a967-19df2f7d3020"))
/* dual interface */ IAcadPreferencesSelection;
struct __declspec(uuid("873b8ce1-8b8a-4d5a-8c07-63fd9cd6ba6c"))
/* dual interface */ IAcadPreferencesProfiles;
struct __declspec(uuid("938efd49-a1f8-47bc-b190-512513cde0e9"))
/* dual interface */ IAcadMenuGroups;
struct __declspec(uuid("04809366-ad70-4f50-b1bf-c4c0f6a7b9fb"))
/* dual interface */ IAcadMenuGroup;
struct __declspec(uuid("d550a209-e331-4ec9-9ff8-2f61b2e34894"))
/* dual interface */ IAcadPopupMenus;
struct __declspec(uuid("43dc6ffa-aeb4-48a4-b5af-9fd8a00062f1"))
/* dual interface */ IAcadPopupMenu;
struct __declspec(uuid("1b1eaf6b-11f1-41bc-9f67-b678a9b4ee02"))
/* dual interface */ IAcadPopupMenuItem;
struct __declspec(uuid("9fe35c7f-8487-45ab-bf73-f69bbf400224"))
/* dual interface */ IAcadToolbars;
struct __declspec(uuid("cc174f04-f9ea-44a1-9ea1-3a403d86727e"))
/* dual interface */ IAcadToolbar;
struct __declspec(uuid("8c8f63d0-35a7-4d29-9c4d-9886f164fd5d"))
/* dual interface */ IAcadToolbarItem;
struct __declspec(uuid("a3b67312-1dd6-40b7-b00f-9015491261ec"))
/* dual interface */ IAcadMenuBar;
struct __declspec(uuid("cf9b7f19-1488-4bfe-a94a-5c2afc337694"))
/* dual interface */ IAcadDocuments;
struct __declspec(uuid("533c7ec0-df22-4932-af1a-dc3bee5738ff"))
/* dual interface */ IAcadState;
struct __declspec(uuid("05a76357-f243-4dcb-9252-13cc350b860a"))
/* dual interface */ IAcadSelectionSets;
struct __declspec(uuid("1d771106-2777-4623-a067-a3df340f5b04"))
/* dual interface */ IAcadSelectionSet;
struct __declspec(uuid("2ce54bf2-0376-4aa5-ba88-1bff47b1c70d"))
/* dual interface */ IAcadUtility;
struct /* coclass */ AcadState;
struct /* coclass */ AcadApplication;
struct /* coclass */ AcadSelectionSet;
struct /* coclass */ AcadSelectionSets;
struct /* coclass */ AcadPlot;
struct /* coclass */ AcadPreferences;
struct /* coclass */ AcadPreferencesDrafting;
struct /* coclass */ AcadPreferencesDisplay;
struct /* coclass */ AcadPreferencesFiles;
struct /* coclass */ AcadPreferencesOpenSave;
struct /* coclass */ AcadPreferencesOutput;
struct /* coclass */ AcadPreferencesProfiles;
struct /* coclass */ AcadPreferencesSelection;
struct /* coclass */ AcadPreferencesSystem;
struct /* coclass */ AcadPreferencesUser;
struct /* coclass */ AcadMenuGroups;
struct /* coclass */ AcadMenuGroup;
struct /* coclass */ AcadMenuBar;
struct /* coclass */ AcadPopupMenus;
struct /* coclass */ AcadPopupMenu;
struct /* coclass */ AcadPopupMenuItem;
struct /* coclass */ AcadUtility;
struct __declspec(uuid("e701e4a8-5e93-49a3-8a5b-6927dd322bd6"))
/* dispinterface */ _DAcadDocumentEvents;
struct /* coclass */ AcadDocument;
struct /* coclass */ AcadDocuments;
struct /* coclass */ AcadToolbars;
struct /* coclass */ AcadToolbar;
struct /* coclass */ AcadToolbarItem;
typedef enum AcColor ACAD_COLOR;
typedef BSTR ACAD_LAYER;
typedef BSTR ACAD_LTYPE;
typedef long ACAD_NULL;
typedef double ACAD_DISTANCE;
typedef double ACAD_ANGLE;
typedef enum AcLineWeight ACAD_LWEIGHT;
typedef double ACAD_NOUNITS;
typedef VARIANT ACAD_POINT;
#if !defined(_WIN64)
typedef __w64 long LONG_PTR;
#else
typedef __int64 LONG_PTR;
#endif

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAcadAcCmColor, __uuidof(IAcadAcCmColor));
_COM_SMARTPTR_TYPEDEF(IAcadHyperlink, __uuidof(IAcadHyperlink));
_COM_SMARTPTR_TYPEDEF(IAcadHyperlinks, __uuidof(IAcadHyperlinks));
_COM_SMARTPTR_TYPEDEF(IAcadSectionTypeSettings, __uuidof(IAcadSectionTypeSettings));
_COM_SMARTPTR_TYPEDEF(IAcadDatabasePreferences, __uuidof(IAcadDatabasePreferences));
_COM_SMARTPTR_TYPEDEF(IAcadSummaryInfo, __uuidof(IAcadSummaryInfo));
_COM_SMARTPTR_TYPEDEF(IAcadSectionTypeSettings2, __uuidof(IAcadSectionTypeSettings2));
_COM_SMARTPTR_TYPEDEF(IAcadDynamicBlockReferenceProperty, __uuidof(IAcadDynamicBlockReferenceProperty));
_COM_SMARTPTR_TYPEDEF(IAcadIdPair, __uuidof(IAcadIdPair));
_COM_SMARTPTR_TYPEDEF(IAcadShadowDisplay, __uuidof(IAcadShadowDisplay));
_COM_SMARTPTR_TYPEDEF(IAcadSubEntity, __uuidof(IAcadSubEntity));
_COM_SMARTPTR_TYPEDEF(IAcadMLeaderLeader, __uuidof(IAcadMLeaderLeader));
_COM_SMARTPTR_TYPEDEF(IAcadSubEntSolidFace, __uuidof(IAcadSubEntSolidFace));
_COM_SMARTPTR_TYPEDEF(IAcadSubEntSolidEdge, __uuidof(IAcadSubEntSolidEdge));
_COM_SMARTPTR_TYPEDEF(IAcadSubEntSolidVertex, __uuidof(IAcadSubEntSolidVertex));
_COM_SMARTPTR_TYPEDEF(IAcadSubEntSolidNode, __uuidof(IAcadSubEntSolidNode));
_COM_SMARTPTR_TYPEDEF(IAcadSubDMeshFace, __uuidof(IAcadSubDMeshFace));
_COM_SMARTPTR_TYPEDEF(IAcadSubDMeshEdge, __uuidof(IAcadSubDMeshEdge));
_COM_SMARTPTR_TYPEDEF(IAcadSubDMeshVertex, __uuidof(IAcadSubDMeshVertex));
_COM_SMARTPTR_TYPEDEF(IAcadSecurityParams, __uuidof(IAcadSecurityParams));
_COM_SMARTPTR_TYPEDEF(_DAcadApplicationEvents, __uuidof(_DAcadApplicationEvents));
_COM_SMARTPTR_TYPEDEF(IAcadUtility, __uuidof(IAcadUtility));
_COM_SMARTPTR_TYPEDEF(_DAcadDocumentEvents, __uuidof(_DAcadDocumentEvents));
_COM_SMARTPTR_TYPEDEF(IAcadObject, __uuidof(IAcadObject));
_COM_SMARTPTR_TYPEDEF(IAcadEntity, __uuidof(IAcadEntity));
_COM_SMARTPTR_TYPEDEF(IAcad3DFace, __uuidof(IAcad3DFace));
_COM_SMARTPTR_TYPEDEF(IAcadPolygonMesh, __uuidof(IAcadPolygonMesh));
_COM_SMARTPTR_TYPEDEF(IAcad3DPolyline, __uuidof(IAcad3DPolyline));
_COM_SMARTPTR_TYPEDEF(IAcadArc, __uuidof(IAcadArc));
_COM_SMARTPTR_TYPEDEF(IAcadAttribute, __uuidof(IAcadAttribute));
_COM_SMARTPTR_TYPEDEF(IAcadRegion, __uuidof(IAcadRegion));
_COM_SMARTPTR_TYPEDEF(IAcad3DSolid, __uuidof(IAcad3DSolid));
_COM_SMARTPTR_TYPEDEF(IAcadCircle, __uuidof(IAcadCircle));
_COM_SMARTPTR_TYPEDEF(IAcadDimension, __uuidof(IAcadDimension));
_COM_SMARTPTR_TYPEDEF(IAcadDimAligned, __uuidof(IAcadDimAligned));
_COM_SMARTPTR_TYPEDEF(IAcadDimAngular, __uuidof(IAcadDimAngular));
_COM_SMARTPTR_TYPEDEF(IAcadDimDiametric, __uuidof(IAcadDimDiametric));
_COM_SMARTPTR_TYPEDEF(IAcadDimRotated, __uuidof(IAcadDimRotated));
_COM_SMARTPTR_TYPEDEF(IAcadDimOrdinate, __uuidof(IAcadDimOrdinate));
_COM_SMARTPTR_TYPEDEF(IAcadDimRadial, __uuidof(IAcadDimRadial));
_COM_SMARTPTR_TYPEDEF(IAcadEllipse, __uuidof(IAcadEllipse));
_COM_SMARTPTR_TYPEDEF(IAcadLeader, __uuidof(IAcadLeader));
_COM_SMARTPTR_TYPEDEF(IAcadMText, __uuidof(IAcadMText));
_COM_SMARTPTR_TYPEDEF(IAcadPoint, __uuidof(IAcadPoint));
_COM_SMARTPTR_TYPEDEF(IAcadLWPolyline, __uuidof(IAcadLWPolyline));
_COM_SMARTPTR_TYPEDEF(IAcadPolyline, __uuidof(IAcadPolyline));
_COM_SMARTPTR_TYPEDEF(IAcadRay, __uuidof(IAcadRay));
_COM_SMARTPTR_TYPEDEF(IAcadShape, __uuidof(IAcadShape));
_COM_SMARTPTR_TYPEDEF(IAcadSolid, __uuidof(IAcadSolid));
_COM_SMARTPTR_TYPEDEF(IAcadSpline, __uuidof(IAcadSpline));
_COM_SMARTPTR_TYPEDEF(IAcadText, __uuidof(IAcadText));
_COM_SMARTPTR_TYPEDEF(IAcadTolerance, __uuidof(IAcadTolerance));
_COM_SMARTPTR_TYPEDEF(IAcadTrace, __uuidof(IAcadTrace));
_COM_SMARTPTR_TYPEDEF(IAcadXline, __uuidof(IAcadXline));
_COM_SMARTPTR_TYPEDEF(IAcadBlockReference, __uuidof(IAcadBlockReference));
_COM_SMARTPTR_TYPEDEF(IAcadHatch, __uuidof(IAcadHatch));
_COM_SMARTPTR_TYPEDEF(IAcadRasterImage, __uuidof(IAcadRasterImage));
_COM_SMARTPTR_TYPEDEF(IAcadLine, __uuidof(IAcadLine));
_COM_SMARTPTR_TYPEDEF(IAcadPlotConfiguration, __uuidof(IAcadPlotConfiguration));
_COM_SMARTPTR_TYPEDEF(IAcadMInsertBlock, __uuidof(IAcadMInsertBlock));
_COM_SMARTPTR_TYPEDEF(IAcadPolyfaceMesh, __uuidof(IAcadPolyfaceMesh));
_COM_SMARTPTR_TYPEDEF(IAcadMLine, __uuidof(IAcadMLine));
_COM_SMARTPTR_TYPEDEF(IAcadDim3PointAngular, __uuidof(IAcadDim3PointAngular));
_COM_SMARTPTR_TYPEDEF(IAcadExternalReference, __uuidof(IAcadExternalReference));
_COM_SMARTPTR_TYPEDEF(IAcadTable, __uuidof(IAcadTable));
_COM_SMARTPTR_TYPEDEF(IAcadDimArcLength, __uuidof(IAcadDimArcLength));
_COM_SMARTPTR_TYPEDEF(IAcadDimRadialLarge, __uuidof(IAcadDimRadialLarge));
_COM_SMARTPTR_TYPEDEF(IAcadSectionSettings, __uuidof(IAcadSectionSettings));
_COM_SMARTPTR_TYPEDEF(IAcadSection, __uuidof(IAcadSection));
_COM_SMARTPTR_TYPEDEF(IAcadMLeader, __uuidof(IAcadMLeader));
_COM_SMARTPTR_TYPEDEF(IAcadView, __uuidof(IAcadView));
_COM_SMARTPTR_TYPEDEF(IAcadPViewport, __uuidof(IAcadPViewport));
_COM_SMARTPTR_TYPEDEF(IAcadGroup, __uuidof(IAcadGroup));
_COM_SMARTPTR_TYPEDEF(IAcadGroups, __uuidof(IAcadGroups));
_COM_SMARTPTR_TYPEDEF(IAcadDimStyle, __uuidof(IAcadDimStyle));
_COM_SMARTPTR_TYPEDEF(IAcadDimStyles, __uuidof(IAcadDimStyles));
_COM_SMARTPTR_TYPEDEF(IAcadLayer, __uuidof(IAcadLayer));
_COM_SMARTPTR_TYPEDEF(IAcadLayers, __uuidof(IAcadLayers));
_COM_SMARTPTR_TYPEDEF(IAcadLineType, __uuidof(IAcadLineType));
_COM_SMARTPTR_TYPEDEF(IAcadLineTypes, __uuidof(IAcadLineTypes));
_COM_SMARTPTR_TYPEDEF(IAcadXRecord, __uuidof(IAcadXRecord));
_COM_SMARTPTR_TYPEDEF(IAcadDictionary, __uuidof(IAcadDictionary));
_COM_SMARTPTR_TYPEDEF(IAcadDictionaries, __uuidof(IAcadDictionaries));
_COM_SMARTPTR_TYPEDEF(IAcadRegisteredApplication, __uuidof(IAcadRegisteredApplication));
_COM_SMARTPTR_TYPEDEF(IAcadRegisteredApplications, __uuidof(IAcadRegisteredApplications));
_COM_SMARTPTR_TYPEDEF(IAcadTextStyle, __uuidof(IAcadTextStyle));
_COM_SMARTPTR_TYPEDEF(IAcadTextStyles, __uuidof(IAcadTextStyles));
_COM_SMARTPTR_TYPEDEF(IAcadUCS, __uuidof(IAcadUCS));
_COM_SMARTPTR_TYPEDEF(IAcadUCSs, __uuidof(IAcadUCSs));
_COM_SMARTPTR_TYPEDEF(IAcadViews, __uuidof(IAcadViews));
_COM_SMARTPTR_TYPEDEF(IAcadViewport, __uuidof(IAcadViewport));
_COM_SMARTPTR_TYPEDEF(IAcadViewports, __uuidof(IAcadViewports));
_COM_SMARTPTR_TYPEDEF(IAcadPlotConfigurations, __uuidof(IAcadPlotConfigurations));
_COM_SMARTPTR_TYPEDEF(IAcadSectionManager, __uuidof(IAcadSectionManager));
_COM_SMARTPTR_TYPEDEF(IAcadMaterial, __uuidof(IAcadMaterial));
_COM_SMARTPTR_TYPEDEF(IAcadMaterials, __uuidof(IAcadMaterials));
_COM_SMARTPTR_TYPEDEF(IAcadObjectEvents, __uuidof(IAcadObjectEvents));
_COM_SMARTPTR_TYPEDEF(IAcadTableStyle, __uuidof(IAcadTableStyle));
_COM_SMARTPTR_TYPEDEF(IAcadMLeaderStyle, __uuidof(IAcadMLeaderStyle));
_COM_SMARTPTR_TYPEDEF(IAcadAttributeReference, __uuidof(IAcadAttributeReference));
_COM_SMARTPTR_TYPEDEF(IAcadOle, __uuidof(IAcadOle));
_COM_SMARTPTR_TYPEDEF(IAcadHelix, __uuidof(IAcadHelix));
_COM_SMARTPTR_TYPEDEF(IAcadSurface, __uuidof(IAcadSurface));
_COM_SMARTPTR_TYPEDEF(IAcadPlaneSurface, __uuidof(IAcadPlaneSurface));
_COM_SMARTPTR_TYPEDEF(IAcadExtrudedSurface, __uuidof(IAcadExtrudedSurface));
_COM_SMARTPTR_TYPEDEF(IAcadRevolvedSurface, __uuidof(IAcadRevolvedSurface));
_COM_SMARTPTR_TYPEDEF(IAcadSweptSurface, __uuidof(IAcadSweptSurface));
_COM_SMARTPTR_TYPEDEF(IAcadLoftedSurface, __uuidof(IAcadLoftedSurface));
_COM_SMARTPTR_TYPEDEF(IAcadSection2, __uuidof(IAcadSection2));
_COM_SMARTPTR_TYPEDEF(IAcadUnderlay, __uuidof(IAcadUnderlay));
_COM_SMARTPTR_TYPEDEF(IAcadDwfUnderlay, __uuidof(IAcadDwfUnderlay));
_COM_SMARTPTR_TYPEDEF(IAcadWipeout, __uuidof(IAcadWipeout));
_COM_SMARTPTR_TYPEDEF(IAcadSubDMesh, __uuidof(IAcadSubDMesh));
_COM_SMARTPTR_TYPEDEF(IAcadNurbSurface, __uuidof(IAcadNurbSurface));
_COM_SMARTPTR_TYPEDEF(IAcadGeoPositionMarker, __uuidof(IAcadGeoPositionMarker));
_COM_SMARTPTR_TYPEDEF(IAcadGeomapImage, __uuidof(IAcadGeomapImage));
_COM_SMARTPTR_TYPEDEF(IAcadPointCloud, __uuidof(IAcadPointCloud));
_COM_SMARTPTR_TYPEDEF(IAcadPointCloudEx, __uuidof(IAcadPointCloudEx));
_COM_SMARTPTR_TYPEDEF(IAcadPointCloudEx2, __uuidof(IAcadPointCloudEx2));
_COM_SMARTPTR_TYPEDEF(IAcadDatabase, __uuidof(IAcadDatabase));
_COM_SMARTPTR_TYPEDEF(IAcadLayerStateManager, __uuidof(IAcadLayerStateManager));
_COM_SMARTPTR_TYPEDEF(IAcadBlock, __uuidof(IAcadBlock));
_COM_SMARTPTR_TYPEDEF(IAcadModelSpace, __uuidof(IAcadModelSpace));
_COM_SMARTPTR_TYPEDEF(IAcadLayout, __uuidof(IAcadLayout));
_COM_SMARTPTR_TYPEDEF(IAcadPaperSpace, __uuidof(IAcadPaperSpace));
_COM_SMARTPTR_TYPEDEF(IAcadBlocks, __uuidof(IAcadBlocks));
_COM_SMARTPTR_TYPEDEF(IAcadLayouts, __uuidof(IAcadLayouts));
_COM_SMARTPTR_TYPEDEF(IAcadSortentsTable, __uuidof(IAcadSortentsTable));
_COM_SMARTPTR_TYPEDEF(IAcadDocument, __uuidof(IAcadDocument));
_COM_SMARTPTR_TYPEDEF(IAcadPlot, __uuidof(IAcadPlot));
_COM_SMARTPTR_TYPEDEF(IAcadApplication, __uuidof(IAcadApplication));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesFiles, __uuidof(IAcadPreferencesFiles));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesDisplay, __uuidof(IAcadPreferencesDisplay));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesOpenSave, __uuidof(IAcadPreferencesOpenSave));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesOutput, __uuidof(IAcadPreferencesOutput));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesSystem, __uuidof(IAcadPreferencesSystem));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesUser, __uuidof(IAcadPreferencesUser));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesDrafting, __uuidof(IAcadPreferencesDrafting));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesSelection, __uuidof(IAcadPreferencesSelection));
_COM_SMARTPTR_TYPEDEF(IAcadPreferencesProfiles, __uuidof(IAcadPreferencesProfiles));
_COM_SMARTPTR_TYPEDEF(IAcadPreferences, __uuidof(IAcadPreferences));
_COM_SMARTPTR_TYPEDEF(IAcadDocuments, __uuidof(IAcadDocuments));
_COM_SMARTPTR_TYPEDEF(IAcadState, __uuidof(IAcadState));
_COM_SMARTPTR_TYPEDEF(IAcadSelectionSet, __uuidof(IAcadSelectionSet));
_COM_SMARTPTR_TYPEDEF(IAcadSelectionSets, __uuidof(IAcadSelectionSets));
_COM_SMARTPTR_TYPEDEF(IAcadMenuGroups, __uuidof(IAcadMenuGroups));
_COM_SMARTPTR_TYPEDEF(IAcadMenuGroup, __uuidof(IAcadMenuGroup));
_COM_SMARTPTR_TYPEDEF(IAcadPopupMenus, __uuidof(IAcadPopupMenus));
_COM_SMARTPTR_TYPEDEF(IAcadPopupMenu, __uuidof(IAcadPopupMenu));
_COM_SMARTPTR_TYPEDEF(IAcadPopupMenuItem, __uuidof(IAcadPopupMenuItem));
_COM_SMARTPTR_TYPEDEF(IAcadMenuBar, __uuidof(IAcadMenuBar));
_COM_SMARTPTR_TYPEDEF(IAcadToolbars, __uuidof(IAcadToolbars));
_COM_SMARTPTR_TYPEDEF(IAcadToolbar, __uuidof(IAcadToolbar));
_COM_SMARTPTR_TYPEDEF(IAcadToolbarItem, __uuidof(IAcadToolbarItem));

//
// Type library items
//

enum __declspec(uuid("cafcdcc3-d722-4b4c-816e-1644c8c93df5"))
AcBoolean
{
    acFalse = 0,
    acTrue = 1
};

enum __declspec(uuid("eca09adb-5ae4-42fa-ad49-86add4607836"))
AcOnOff
{
    acOff = 0,
    acOn = 1
};

enum __declspec(uuid("129d6e08-3dee-4c76-87f1-f72d090055fd"))
AcEntityName
{
    ac3dFace = 1,
    ac3dPolyline = 2,
    ac3dSolid = 3,
    acArc = 4,
    acAttribute = 5,
    acAttributeReference = 6,
    acBlockReference = 7,
    acCircle = 8,
    acDimAligned = 9,
    acDimAngular = 10,
    acDimDiametric = 12,
    acDimOrdinate = 13,
    acDimRadial = 14,
    acDimRotated = 15,
    acEllipse = 16,
    acHatch = 17,
    acLeader = 18,
    acLine = 19,
    acMtext = 21,
    acPoint = 22,
    acPolyline = 23,
    acPolylineLight = 24,
    acPolymesh = 25,
    acRaster = 26,
    acRay = 27,
    acRegion = 28,
    acShape = 29,
    acSolid = 30,
    acSpline = 31,
    acText = 32,
    acTolerance = 33,
    acTrace = 34,
    acPViewport = 35,
    acXline = 36,
    acGroup = 37,
    acMInsertBlock = 38,
    acPolyfaceMesh = 39,
    acMLine = 40,
    acDim3PointAngular = 41,
    acExternalReference = 42,
    acTable = 43,
    acDimArcLength = 44,
    acDimRadialLarge = 45,
    acDwfUnderlay = 46,
    acDgnUnderlay = 47,
    acMLeader = 48,
    acSubDMesh = 49,
    acPdfUnderlay = 50,
    acNurbSurface = 51
};

enum __declspec(uuid("2844b1bb-084b-4347-99c4-bd7779f438e5"))
AcActiveSpace
{
    acPaperSpace = 0,
    acModelSpace = 1
};

enum __declspec(uuid("b74566b2-d249-46ef-9657-c132ccd27829"))
AcKeyboardAccelerator
{
    acPreferenceClassic = 0,
    acPreferenceCustom = 1
};

enum __declspec(uuid("6b7dc6fe-8bba-432b-a5ce-b4fec112ca07"))
AcPlotOrientation
{
    acPlotOrientationPortrait = 0,
    acPlotOrientationLandscape = 1
};

enum __declspec(uuid("532c934e-45ff-424e-a6e5-8d35074c0d57"))
AcColor
{
    acByBlock = 0,
    acRed = 1,
    acYellow = 2,
    acGreen = 3,
    acCyan = 4,
    acBlue = 5,
    acMagenta = 6,
    acWhite = 7,
    acByLayer = 256
};

enum __declspec(uuid("714212ae-2c2c-487a-bc99-9b3c83eddf7b"))
AcAttachmentPoint
{
    acAttachmentPointTopLeft = 1,
    acAttachmentPointTopCenter = 2,
    acAttachmentPointTopRight = 3,
    acAttachmentPointMiddleLeft = 4,
    acAttachmentPointMiddleCenter = 5,
    acAttachmentPointMiddleRight = 6,
    acAttachmentPointBottomLeft = 7,
    acAttachmentPointBottomCenter = 8,
    acAttachmentPointBottomRight = 9
};

enum __declspec(uuid("70223bb7-5f69-4633-a327-01a371294e9b"))
AcDrawingDirection
{
    acLeftToRight = 1,
    acRightToLeft = 2,
    acTopToBottom = 3,
    acBottomToTop = 4,
    acByStyle = 5
};

enum __declspec(uuid("e77f1397-8543-4872-9349-2c63991c8abf"))
AcLeaderType
{
    acLineNoArrow = 0,
    acSplineNoArrow = 1,
    acLineWithArrow = 2,
    acSplineWithArrow = 3
};

enum __declspec(uuid("5c547a9a-16c6-4a05-b316-bae848833fda"))
AcAttributeMode
{
    acAttributeModeNormal = 0,
    acAttributeModeInvisible = 1,
    acAttributeModeConstant = 2,
    acAttributeModeVerify = 4,
    acAttributeModePreset = 8,
    acAttributeModeLockPosition = 16,
    acAttributeModeMultipleLine = 32
};

enum __declspec(uuid("7b9b30b6-5fe0-429d-b341-0a3e453c5259"))
AcHorizontalAlignment
{
    acHorizontalAlignmentLeft = 0,
    acHorizontalAlignmentCenter = 1,
    acHorizontalAlignmentRight = 2,
    acHorizontalAlignmentAligned = 3,
    acHorizontalAlignmentMiddle = 4,
    acHorizontalAlignmentFit = 5
};

enum __declspec(uuid("c600c534-836c-4860-b307-953df2950e26"))
AcVerticalAlignment
{
    acVerticalAlignmentBaseline = 0,
    acVerticalAlignmentBottom = 1,
    acVerticalAlignmentMiddle = 2,
    acVerticalAlignmentTop = 3
};

enum __declspec(uuid("caefa01e-4dd6-478f-8a48-ecf10bb80f53"))
AcTextGenerationFlag
{
    acTextFlagBackward = 2,
    acTextFlagUpsideDown = 4
};

enum __declspec(uuid("ae05b83e-6163-42e3-9b05-3de240356f19"))
AcSelect
{
    acSelectionSetWindow = 0,
    acSelectionSetCrossing = 1,
    acSelectionSetFence = 2,
    acSelectionSetPrevious = 3,
    acSelectionSetLast = 4,
    acSelectionSetAll = 5,
    acSelectionSetWindowPolygon = 6,
    acSelectionSetCrossingPolygon = 7
};

enum __declspec(uuid("63965e9e-09d7-4997-b975-646a8fed14b1"))
AcPatternType
{
    acHatchPatternTypeUserDefined = 0,
    acHatchPatternTypePreDefined = 1,
    acHatchPatternTypeCustomDefined = 2
};

enum __declspec(uuid("6d6fd715-f07a-4556-82f3-049737e6d356"))
AcLoopType
{
    acHatchLoopTypeDefault = 0,
    acHatchLoopTypeExternal = 1,
    acHatchLoopTypePolyline = 2,
    acHatchLoopTypeDerived = 4,
    acHatchLoopTypeTextbox = 8
};

enum __declspec(uuid("1d680f47-2e92-4f0c-bd83-24ec8b7512e4"))
AcHatchStyle
{
    acHatchStyleNormal = 0,
    acHatchStyleOuter = 1,
    acHatchStyleIgnore = 2
};

enum __declspec(uuid("4e67832e-d386-4c35-b041-e95c33a0a34e"))
AcPolylineType
{
    acSimplePoly = 0,
    acFitCurvePoly = 1,
    acQuadSplinePoly = 2,
    acCubicSplinePoly = 3
};

enum __declspec(uuid("fb45b7e3-0984-4dc9-9cc8-cb0885c567b7"))
Ac3DPolylineType
{
    acSimple3DPoly = 0,
    acQuadSpline3DPoly = 1,
    acCubicSpline3DPoly = 2
};

enum __declspec(uuid("bf8db750-dd8d-4587-a8b8-903f072c5b84"))
AcViewportSplitType
{
    acViewport2Horizontal = 0,
    acViewport2Vertical = 1,
    acViewport3Left = 2,
    acViewport3Right = 3,
    acViewport3Horizontal = 4,
    acViewport3Vertical = 5,
    acViewport3Above = 6,
    acViewport3Below = 7,
    acViewport4 = 8
};

enum __declspec(uuid("e891a174-a338-4ca3-93b7-d210c24001b3"))
AcRegenType
{
    acActiveViewport = 0,
    acAllViewports = 1
};

enum __declspec(uuid("9fc3e122-2200-4953-9c2f-b6f33284a01b"))
AcBooleanType
{
    acUnion = 0,
    acIntersection = 1,
    acSubtraction = 2
};

enum __declspec(uuid("e2eb21f2-4cb8-490d-806c-6228961bb905"))
AcExtendOption
{
    acExtendNone = 0,
    acExtendThisEntity = 1,
    acExtendOtherEntity = 2,
    acExtendBoth = 3
};

enum __declspec(uuid("0b868d5d-aee1-4e84-a3ca-35c40219d3db"))
AcAngleUnits
{
    acDegrees = 0,
    acDegreeMinuteSeconds = 1,
    acGrads = 2,
    acRadians = 3
};

enum __declspec(uuid("80a5b459-dbd6-44b8-84a0-6a2f4717f186"))
AcUnits
{
    acDefaultUnits = -1,
    acScientific = 1,
    acDecimal = 2,
    acEngineering = 3,
    acArchitectural = 4,
    acFractional = 5
};

enum __declspec(uuid("4c56eefd-53e8-4068-bed0-465cdd555d1c"))
AcCoordinateSystem
{
    acWorld = 0,
    acUCS = 1,
    acDisplayDCS = 2,
    acPaperSpaceDCS = 3,
    acOCS = 4
};

enum __declspec(uuid("784a81ab-6225-4f8a-abf1-670ff12fc751"))
AcMeasurementUnits
{
    acEnglish = 0,
    acMetric = 1
};

enum __declspec(uuid("775ba2e6-8e8a-4435-8076-4a3b2c21cf3c"))
AcXRefDemandLoad
{
    acDemandLoadDisabled = 0,
    acDemandLoadEnabled = 1,
    acDemandLoadEnabledWithCopy = 2
};

enum __declspec(uuid("cc616612-c08e-4198-a833-8632e362d9db"))
AcPreviewMode
{
    acPartialPreview = 0,
    acFullPreview = 1
};

enum __declspec(uuid("35cf43ee-d90e-4b3f-a825-378df8ee542a"))
AcPolymeshType
{
    acSimpleMesh = 0,
    acQuadSurfaceMesh = 5,
    acCubicSurfaceMesh = 6,
    acBezierSurfaceMesh = 8
};

enum __declspec(uuid("d0cc5502-e2b4-41da-9a08-a830e15090bd"))
AcZoomScaleType
{
    acZoomScaledAbsolute = 0,
    acZoomScaledRelative = 1,
    acZoomScaledRelativePSpace = 2
};

enum __declspec(uuid("698ced62-a187-4759-a0c3-8cb1ed18096c"))
AcDragDisplayMode
{
    acDragDoNotDisplay = 0,
    acDragDisplayOnRequest = 1,
    acDragDisplayAutomatically = 2
};

enum __declspec(uuid("4b628e69-8f76-44ce-a213-c79ee421eab7"))
AcARXDemandLoad
{
    acDemanLoadDisable = 0,
    acDemandLoadOnObjectDetect = 1,
    acDemandLoadCmdInvoke = 2
};

enum __declspec(uuid("54b571e2-863e-4a2a-95fc-0eaba41a15ea"))
AcTextFontStyle
{
    acFontRegular = 0,
    acFontItalic = 1,
    acFontBold = 2,
    acFontBoldItalic = 3
};

enum __declspec(uuid("5849689d-f2c6-4b50-b897-38933c529dc8"))
AcProxyImage
{
    acProxyNotShow = 0,
    acProxyShow = 1,
    acProxyBoundingBox = 2
};

enum __declspec(uuid("6e549b2a-8fb8-4fbc-911c-85b8e0a3aabd"))
AcKeyboardPriority
{
    acKeyboardRunningObjSnap = 0,
    acKeyboardEntry = 1,
    acKeyboardEntryExceptScripts = 2
};

enum __declspec(uuid("db4d91eb-8ba9-431f-bc1c-f2389c8bf5a2"))
AcMenuGroupType
{
    acBaseMenuGroup = 0,
    acPartialMenuGroup = 1
};

enum __declspec(uuid("4f9a7ff1-4f24-438c-bbab-4206ccbd2183"))
AcMenuFileType
{
    acMenuFileCompiled = 0,
    acMenuFileSource = 1
};

enum __declspec(uuid("9022ebb4-a2de-4c62-898b-8aa470156469"))
AcMenuItemType
{
    acMenuItem = 0,
    acMenuSeparator = 1,
    acMenuSubMenu = 2
};

enum __declspec(uuid("2a1c1e0a-8ebe-4b08-bbcc-420568210a7a"))
AcToolbarItemType
{
    acToolbarButton = 0,
    acToolbarSeparator = 1,
    acToolbarControl = 2,
    acToolbarFlyout = 3
};

enum __declspec(uuid("0fa0e84e-a39d-46b7-b439-7d3db3775422"))
AcToolbarDockStatus
{
    acToolbarDockTop = 0,
    acToolbarDockBottom = 1,
    acToolbarDockLeft = 2,
    acToolbarDockRight = 3,
    acToolbarFloating = 4
};

enum __declspec(uuid("d14e7a58-b2bb-47ca-ad84-7cfc814cb100"))
AcLineWeight
{
    acLnWt000 = 0,
    acLnWt005 = 5,
    acLnWt009 = 9,
    acLnWt013 = 13,
    acLnWt015 = 15,
    acLnWt018 = 18,
    acLnWt020 = 20,
    acLnWt025 = 25,
    acLnWt030 = 30,
    acLnWt035 = 35,
    acLnWt040 = 40,
    acLnWt050 = 50,
    acLnWt053 = 53,
    acLnWt060 = 60,
    acLnWt070 = 70,
    acLnWt080 = 80,
    acLnWt090 = 90,
    acLnWt100 = 100,
    acLnWt106 = 106,
    acLnWt120 = 120,
    acLnWt140 = 140,
    acLnWt158 = 158,
    acLnWt200 = 200,
    acLnWt211 = 211,
    acLnWtByLayer = -1,
    acLnWtByBlock = -2,
    acLnWtByLwDefault = -3
};

enum __declspec(uuid("47db0cf8-4c38-44cd-8baa-e4872b9ff926"))
AcWindowState
{
    acNorm = 1,
    acMin = 2,
    acMax = 3
};

enum __declspec(uuid("b581161c-8bb1-4a62-90d5-10dc2253bd1b"))
AcPlotPaperUnits
{
    acInches = 0,
    acMillimeters = 1,
    acPixels = 2
};

enum __declspec(uuid("3e1dfd4e-556c-4377-a3d5-f9daea98ecf3"))
AcPlotRotation
{
    ac0degrees = 0,
    ac90degrees = 1,
    ac180degrees = 2,
    ac270degrees = 3
};

enum __declspec(uuid("492df439-58a6-4061-af3b-8da68523f79f"))
AcPlotType
{
    acDisplay = 0,
    acExtents = 1,
    acLimits = 2,
    acView = 3,
    acWindow = 4,
    acLayout = 5
};

enum __declspec(uuid("d63da31c-9418-4740-b482-a75684488924"))
AcPlotScale
{
    acScaleToFit = 0,
    ac1_128in_1ft = 1,
    ac1_64in_1ft = 2,
    ac1_32in_1ft = 3,
    ac1_16in_1ft = 4,
    ac3_32in_1ft = 5,
    ac1_8in_1ft = 6,
    ac3_16in_1ft = 7,
    ac1_4in_1ft = 8,
    ac3_8in_1ft = 9,
    ac1_2in_1ft = 10,
    ac3_4in_1ft = 11,
    ac1in_1ft = 12,
    ac3in_1ft = 13,
    ac6in_1ft = 14,
    ac1ft_1ft = 15,
    ac1_1 = 16,
    ac1_2 = 17,
    ac1_4 = 18,
    ac1_5 = 19,
    ac1_8 = 20,
    ac1_10 = 21,
    ac1_16 = 22,
    ac1_20 = 23,
    ac1_30 = 24,
    ac1_40 = 25,
    ac1_50 = 26,
    ac1_100 = 27,
    ac2_1 = 28,
    ac4_1 = 29,
    ac8_1 = 30,
    ac10_1 = 31,
    ac100_1 = 32
};

enum __declspec(uuid("0c2b0a48-935b-4840-ab9d-935db1722225"))
AcAlignment
{
    acAlignmentLeft = 0,
    acAlignmentCenter = 1,
    acAlignmentRight = 2,
    acAlignmentAligned = 3,
    acAlignmentMiddle = 4,
    acAlignmentFit = 5,
    acAlignmentTopLeft = 6,
    acAlignmentTopCenter = 7,
    acAlignmentTopRight = 8,
    acAlignmentMiddleLeft = 9,
    acAlignmentMiddleCenter = 10,
    acAlignmentMiddleRight = 11,
    acAlignmentBottomLeft = 12,
    acAlignmentBottomCenter = 13,
    acAlignmentBottomRight = 14
};

enum __declspec(uuid("fa631a8d-2544-40d0-afdb-032582bd22e7"))
AcLineSpacingStyle
{
    acLineSpacingStyleAtLeast = 1,
    acLineSpacingStyleExactly = 2
};

enum __declspec(uuid("7242f0de-d2b4-40f2-8833-b717052af507"))
AcDimPrecision
{
    acDimPrecisionZero = 0,
    acDimPrecisionOne = 1,
    acDimPrecisionTwo = 2,
    acDimPrecisionThree = 3,
    acDimPrecisionFour = 4,
    acDimPrecisionFive = 5,
    acDimPrecisionSix = 6,
    acDimPrecisionSeven = 7,
    acDimPrecisionEight = 8
};

enum __declspec(uuid("901d7e9e-0772-49f1-9d58-7947c3c46f2a"))
AcDimUnits
{
    acDimScientific = 1,
    acDimDecimal = 2,
    acDimEngineering = 3,
    acDimArchitecturalStacked = 4,
    acDimFractionalStacked = 5,
    acDimArchitectural = 6,
    acDimFractional = 7,
    acDimWindowsDesktop = 8
};

enum __declspec(uuid("2edda92d-cd0e-4068-b10c-7a4bcd848c6b"))
AcDimLUnits
{
    acDimLScientific = 1,
    acDimLDecimal = 2,
    acDimLEngineering = 3,
    acDimLArchitectural = 4,
    acDimLFractional = 5,
    acDimLWindowsDesktop = 6
};

enum __declspec(uuid("cac7807b-5f8f-4eee-8b40-d68282abccf3"))
AcDimArrowheadType
{
    acArrowDefault = 0,
    acArrowClosedBlank = 1,
    acArrowClosed = 2,
    acArrowDot = 3,
    acArrowArchTick = 4,
    acArrowOblique = 5,
    acArrowOpen = 6,
    acArrowOrigin = 7,
    acArrowOrigin2 = 8,
    acArrowOpen90 = 9,
    acArrowOpen30 = 10,
    acArrowDotSmall = 11,
    acArrowDotBlank = 12,
    acArrowSmall = 13,
    acArrowBoxBlank = 14,
    acArrowBoxFilled = 15,
    acArrowDatumBlank = 16,
    acArrowDatumFilled = 17,
    acArrowIntegral = 18,
    acArrowNone = 19,
    acArrowUserDefined = 20
};

enum __declspec(uuid("59277d30-a09a-46d2-9ebf-7e1ffa447140"))
AcDimCenterType
{
    acCenterMark = 0,
    acCenterLine = 1,
    acCenterNone = 2
};

enum __declspec(uuid("acb75693-ae79-41c6-a217-74b2c540fed5"))
AcDimFit
{
    acTextAndArrows = 0,
    acArrowsOnly = 1,
    acTextOnly = 2,
    acBestFit = 3
};

enum __declspec(uuid("47f76311-0ccf-4f7e-a0ca-e8d79fe4a204"))
AcDimFractionType
{
    acHorizontal = 0,
    acDiagonal = 1,
    acNotStacked = 2
};

enum __declspec(uuid("4f539f4e-ccd8-4866-9487-85a7f9d633af"))
AcDimArcLengthSymbol
{
    acSymInFront = 0,
    acSymAbove = 1,
    acSymNone = 2
};

enum __declspec(uuid("11400e25-d9f1-4e53-8b88-0116e0ae01c8"))
AcDimHorizontalJustification
{
    acHorzCentered = 0,
    acFirstExtensionLine = 1,
    acSecondExtensionLine = 2,
    acOverFirstExtension = 3,
    acOverSecondExtension = 4
};

enum __declspec(uuid("6213c6f8-70a6-48a7-9cd8-398c76ed5fea"))
AcDimVerticalJustification
{
    acVertCentered = 0,
    acAbove = 1,
    acOutside = 2,
    acJIS = 3,
    acUnder = 4
};

enum __declspec(uuid("6dc1c98d-0b26-4fe7-bca1-2f32a0b0e49f"))
AcDimTextMovement
{
    acDimLineWithText = 0,
    acMoveTextAddLeader = 1,
    acMoveTextNoLeader = 2
};

enum __declspec(uuid("e1deaeb5-8974-41b7-8ba5-a4b253b6582f"))
AcDimToleranceMethod
{
    acTolNone = 0,
    acTolSymmetrical = 1,
    acTolDeviation = 2,
    acTolLimits = 3,
    acTolBasic = 4
};

enum __declspec(uuid("e180eba2-bf63-4d82-9b9f-24002a926a27"))
AcDimToleranceJustify
{
    acTolBottom = 0,
    acTolMiddle = 1,
    acTolTop = 2
};

enum __declspec(uuid("f2780908-1529-4c80-a13a-f0ea5532e8ca"))
AcViewportScale
{
    acVpScaleToFit = 0,
    acVpCustomScale = 1,
    acVp1_1 = 2,
    acVp1_2 = 3,
    acVp1_4 = 4,
    acVp1_5 = 5,
    acVp1_8 = 6,
    acVp1_10 = 7,
    acVp1_16 = 8,
    acVp1_20 = 9,
    acVp1_30 = 10,
    acVp1_40 = 11,
    acVp1_50 = 12,
    acVp1_100 = 13,
    acVp2_1 = 14,
    acVp4_1 = 15,
    acVp8_1 = 16,
    acVp10_1 = 17,
    acVp100_1 = 18,
    acVp1_128in_1ft = 19,
    acVp1_64in_1ft = 20,
    acVp1_32in_1ft = 21,
    acVp1_16in_1ft = 22,
    acVp3_32in_1ft = 23,
    acVp1_8in_1ft = 24,
    acVp3_16in_1ft = 25,
    acVp1_4in_1ft = 26,
    acVp3_8in_1ft = 27,
    acVp1_2in_1ft = 28,
    acVp3_4in_1ft = 29,
    acVp1in_1ft = 30,
    acVp1and1_2in_1ft = 31,
    acVp3in_1ft = 32,
    acVp6in_1ft = 33,
    acVp1ft_1ft = 34
};

enum __declspec(uuid("fab797ab-5679-4510-8fbd-2e5b524b9ce6"))
AcISOPenWidth
{
    acPenWidth013 = 13,
    acPenWidth018 = 18,
    acPenWidth025 = 25,
    acPenWidth035 = 35,
    acPenWidth050 = 50,
    acPenWidth070 = 70,
    acPenWidth100 = 100,
    acPenWidth140 = 140,
    acPenWidth200 = 200,
    acPenWidthUnk = -1
};

enum __declspec(uuid("b9f32829-bb4b-454f-b84b-6195662c86d2"))
AcSaveAsType
{
    acUnknown = -1,
    acR12_dxf = 1,
    acR13_dwg = 4,
    acR13_dxf = 5,
    acR14_dwg = 8,
    acR14_dxf = 9,
    ac2000_dwg = 12,
    ac2000_dxf = 13,
    ac2000_Template = 14,
    ac2004_dwg = 24,
    ac2004_dxf = 25,
    ac2004_Template = 26,
    ac2007_dwg = 36,
    ac2007_dxf = 37,
    ac2007_Template = 38,
    ac2010_dwg = 48,
    ac2010_dxf = 49,
    ac2010_Template = 50,
    ac2013_dwg = 60,
    ac2013_dxf = 61,
    ac2013_Template = 62,
    ac2018_dwg = 64,
    ac2018_dxf = 65,
    ac2018_Template = 66,
    acNative = 64,
    acR15_dwg = 12,
    acR15_dxf = 13,
    acR15_Template = 14,
    acR18_dwg = 24,
    acR18_dxf = 25,
    acR18_Template = 26
};

enum __declspec(uuid("4ac1571c-8569-4c3a-8b9e-4f57f4d3d7b8"))
AcPrinterSpoolAlert
{
    acPrinterAlwaysAlert = 0,
    acPrinterAlertOnce = 1,
    acPrinterNeverAlertLogOnce = 2,
    acPrinterNeverAlert = 3
};

enum __declspec(uuid("02841a49-553f-4fc9-b364-7575d50b0efb"))
AcPlotPolicyForNewDwgs
{
    acPolicyNewDefault = 0,
    acPolicyNewLegacy = 1
};

enum __declspec(uuid("51d6cc53-54a7-4a42-aa87-d5119fe87ec6"))
AcPlotPolicyForLegacyDwgs
{
    acPolicyLegacyDefault = 0,
    acPolicyLegacyQuery = 1,
    acPolicyLegacyLegacy = 2
};

enum __declspec(uuid("6653b3ab-441e-4374-8771-1715141409ed"))
AcOleQuality
{
    acOQLineArt = 0,
    acOQText = 1,
    acOQGraphics = 2,
    acOQPhoto = 3,
    acOQHighPhoto = 4
};

enum __declspec(uuid("0b575a24-0c84-4183-8604-a4fa8cc790a6"))
AcLoadPalette
{
    acPaletteByDrawing = 0,
    acPaletteBySession = 1
};

enum __declspec(uuid("c2909c9f-7a96-4902-a9a2-1234a905d68b"))
AcInsertUnits
{
    acInsertUnitsUnitless = 0,
    acInsertUnitsInches = 1,
    acInsertUnitsFeet = 2,
    acInsertUnitsMiles = 3,
    acInsertUnitsMillimeters = 4,
    acInsertUnitsCentimeters = 5,
    acInsertUnitsMeters = 6,
    acInsertUnitsKilometers = 7,
    acInsertUnitsMicroinches = 8,
    acInsertUnitsMils = 9,
    acInsertUnitsYards = 10,
    acInsertUnitsAngstroms = 11,
    acInsertUnitsNanometers = 12,
    acInsertUnitsMicrons = 13,
    acInsertUnitsDecimeters = 14,
    acInsertUnitsDecameters = 15,
    acInsertUnitsHectometers = 16,
    acInsertUnitsGigameters = 17,
    acInsertUnitsAstronomicalUnits = 18,
    acInsertUnitsLightYears = 19,
    acInsertUnitsParsecs = 20,
    acInsertUnitsUSSurveyFeet = 21,
    acInsertUnitsUSSurveyInch = 22,
    acInsertUnitsUSSurveyYard = 23,
    acInsertUnitsUSSurveyMile = 24
};

enum __declspec(uuid("b38fb35b-4ba5-4dcc-a5f8-2a1a4ff95fa8"))
AcAlignmentPointAcquisition
{
    acAlignPntAcquisitionAutomatic = 0,
    acAlignPntAcquisitionShiftToAcquire = 1
};

enum __declspec(uuid("36bb5594-3799-4fe7-be71-4bf7f547fe2d"))
AcInsertUnitsAction
{
    acInsertUnitsPrompt = 0,
    acInsertUnitsAutoAssign = 1
};

enum __declspec(uuid("74aa3982-539b-4d6e-b01e-161f822194e8"))
AcPlotPolicy
{
    acPolicyNamed = 0,
    acPolicyLegacy = 1
};

enum __declspec(uuid("90805536-77da-4c40-b4c3-195a4ae097b1"))
AcDrawingAreaShortCutMenu
{
    acNoDrawingAreaShortCutMenu = 0,
    acUseDefaultDrawingAreaShortCutMenu = 1
};

enum __declspec(uuid("573e6be8-b297-4f6e-8536-103e7d8af266"))
AcDrawingAreaSCMDefault
{
    acRepeatLastCommand = 0,
    acSCM = 1
};

enum __declspec(uuid("9300563b-c22e-470d-8bfb-b32cf5ae8bf6"))
AcDrawingAreaSCMEdit
{
    acEdRepeatLastCommand = 0,
    acEdSCM = 1
};

enum __declspec(uuid("7214b3d0-95ac-491f-9ed7-823ed8705dc6"))
AcDrawingAreaSCMCommand
{
    acEnter = 0,
    acEnableSCMOptions = 1,
    acEnableSCM = 2
};

enum __declspec(uuid("ac17de77-c4fd-42fa-a903-f9c771b5fb41"))
AcLayerStateMask
{
    acLsNone = 0,
    acLsOn = 1,
    acLsFrozen = 2,
    acLsLocked = 4,
    acLsPlot = 8,
    acLsNewViewport = 16,
    acLsColor = 32,
    acLsLineType = 64,
    acLsLineWeight = 128,
    acLsPlotStyle = 256,
    acLsAll = 65535
};

enum __declspec(uuid("8bd61f21-2444-4131-868f-27eaabc399f5"))
AcShadePlot
{
    acShadePlotAsDisplayed = 0,
    acShadePlotWireframe = 1,
    acShadePlotHidden = 2,
    acShadePlotRendered = 3
};

enum __declspec(uuid("eb692d5d-df7f-45f8-9e43-e374e2d79390"))
AcHatchObjectType
{
    acHatchObject = 0,
    acGradientObject = 1
};

enum __declspec(uuid("5bf92d4f-d9d2-4922-a5e0-98d5d5de2044"))
AcGradientPatternType
{
    acPreDefinedGradient = 0,
    acUserDefinedGradient = 1
};

enum __declspec(uuid("e8849085-fccd-4331-9474-cfd194db3adf"))
AcTableDirection
{
    acTableTopToBottom = 0,
    acTableBottomToTop = 1
};

enum __declspec(uuid("00ff2761-ebd4-4eb5-ab38-50e5513ded8b"))
AcCellAlignment
{
    acTopLeft = 1,
    acTopCenter = 2,
    acTopRight = 3,
    acMiddleLeft = 4,
    acMiddleCenter = 5,
    acMiddleRight = 6,
    acBottomLeft = 7,
    acBottomCenter = 8,
    acBottomRight = 9
};

enum __declspec(uuid("0a6c62c2-2dfb-4913-861d-c782933cd8bf"))
AcRowType
{
    acUnknownRow = 0,
    acDataRow = 1,
    acTitleRow = 2,
    acHeaderRow = 4
};

enum __declspec(uuid("a3e9c795-fd4a-446d-8bb7-1f7c8b5291d9"))
AcValueDataType
{
    acUnknownDataType = 0,
    acLong = 1,
    acDouble = 2,
    acString = 4,
    acDate = 8,
    acPoint2d = 16,
    acPoint3d = 32,
    acObjectId = 64,
    acBuffer = 128,
    acResbuf = 256,
    acGeneral = 512
};

enum __declspec(uuid("7b1ba335-ce3c-4346-aae8-68510c8a57da"))
AcValueUnitType
{
    acUnitless = 0,
    acUnitDistance = 1,
    acUnitAngle = 2,
    acUnitArea = 4,
    acUnitVolume = 8
};

enum __declspec(uuid("36b48e3d-f728-4395-9590-6050d294af65"))
AcParseOption
{
    acParseOptionNone = 0,
    acSetDefaultFormat = 1,
    acPreserveMtextFormat = 2
};

enum __declspec(uuid("5d071be0-77cc-43b5-a2ec-e768911e3b8d"))
AcFormatOption
{
    kFormatOptionNone = 0,
    acForEditing = 1,
    acForExpression = 2,
    acUseMaximumPrecision = 4,
    acIgnoreMtextFormat = 8
};

enum __declspec(uuid("c5b01a14-ad12-4335-b5ab-cffa84899c5e"))
AcGridLineType
{
    acInvalidGridLine = 0,
    acHorzTop = 1,
    acHorzInside = 2,
    acHorzBottom = 4,
    acVertLeft = 8,
    acVertInside = 16,
    acVertRight = 32
};

enum __declspec(uuid("10afae75-dcc9-4f9f-87c3-c6916b5fbfe9"))
AcCellType
{
    acUnknownCell = 0,
    acTextCell = 1,
    acBlockCell = 2
};

enum __declspec(uuid("02f05337-43c5-469e-a17a-9c7052bb2a0a"))
AcCellEdgeMask
{
    acTopMask = 1,
    acRightMask = 2,
    acBottomMask = 4,
    acLeftMask = 8
};

enum __declspec(uuid("caffa645-6efa-4776-be1c-f9058836eb35"))
AcRotationAngle
{
    acDegreesUnknown = -1,
    acDegrees000 = 0,
    acDegrees090 = 1,
    acDegrees180 = 2,
    acDegrees270 = 3
};

enum __declspec(uuid("e85f9308-a2be-45f2-95d2-239e59c70106"))
AcMergeCellStyleOption
{
    acMergeCellStyleNone = 0,
    acMergeCellStyleCopyDuplicates = 1,
    acMergeCellStyleOverwriteDuplicates = 2,
    acMergeCellStyleConvertDuplicatesToOverrides = 4,
    acMergeCellStyleIgnoreNewStyles = 8
};

enum __declspec(uuid("2a60632d-cbf5-43a6-b0ae-b549fc2f436a"))
AcSelectType
{
    acTableSelectWindow = 1,
    acTableSelectCrossing = 2
};

enum __declspec(uuid("9cebb296-bad3-4292-9cc2-9691895f288f"))
AcOleType
{
    acOTLink = 1,
    acOTEmbedded = 2,
    acOTStatic = 3
};

enum __declspec(uuid("55ce44e8-2b5c-4cf3-9563-25a2d3529976"))
AcOlePlotQuality
{
    acOPQMonochrome = 0,
    acOPQLowGraphics = 1,
    acOPQHighGraphics = 2
};

enum __declspec(uuid("2a0f50ff-0167-4df0-8cc0-1221dc93858b"))
AcTableStyleOverrides
{
    acTitleSuppressed = 1,
    acHeaderSuppressed = 2,
    acFlowDirection = 3,
    acHorzCellMargin = 4,
    acVertCellMargin = 5,
    acTitleRowColor = 6,
    acHeaderRowColor = 7,
    acDataRowColor = 8,
    acTitleRowFillNone = 9,
    acHeaderRowFillNone = 10,
    acDataRowFillNone = 11,
    acTitleRowFillColor = 12,
    acHeaderRowFillColor = 13,
    acDataRowFillColor = 14,
    acTitleRowAlignment = 15,
    acHeaderRowAlignment = 16,
    acDataRowAlignment = 17,
    acTitleRowTextStyle = 18,
    acHeaderRowTextStyle = 19,
    acDataRowTextStyle = 20,
    acTitleRowTextHeight = 21,
    acHeaderRowTextHeight = 22,
    acDataRowTextHeight = 23,
    acTitleRowDataType = 24,
    acHeaderRowDataType = 25,
    acDataRowDataType = 26,
    acTitleHorzTopColor = 40,
    acTitleHorzInsideColor = 41,
    acTitleHorzBottomColor = 42,
    acTitleVertLeftColor = 43,
    acTitleVertInsideColor = 44,
    acTitleVertRightColor = 45,
    acHeaderHorzTopColor = 46,
    acHeaderHorzInsideColor = 47,
    acHeaderHorzBottomColor = 48,
    acHeaderVertLeftColor = 49,
    acHeaderVertInsideColor = 50,
    acHeaderVertRightColor = 51,
    acDataHorzTopColor = 52,
    acDataHorzInsideColor = 53,
    acDataHorzBottomColor = 54,
    acDataVertLeftColor = 55,
    acDataVertInsideColor = 56,
    acDataVertRightColor = 57,
    acTitleHorzTopLineWeight = 70,
    acTitleHorzInsideLineWeight = 71,
    acTitleHorzBottomLineWeight = 72,
    acTitleVertLeftLineWeight = 73,
    acTitleVertInsideLineWeight = 74,
    acTitleVertRightLineWeight = 75,
    acHeaderHorzTopLineWeight = 76,
    acHeaderHorzInsideLineWeight = 77,
    acHeaderHorzBottomLineWeight = 78,
    acHeaderVertLeftLineWeight = 79,
    acHeaderVertInsideLineWeight = 80,
    acHeaderVertRightLineWeight = 81,
    acDataHorzTopLineWeight = 82,
    acDataHorzInsideLineWeight = 83,
    acDataHorzBottomLineWeight = 84,
    acDataVertLeftLineWeight = 85,
    acDataVertInsideLineWeight = 86,
    acDataVertRightLineWeight = 87,
    acTitleHorzTopVisibility = 100,
    acTitleHorzInsideVisibility = 101,
    acTitleHorzBottomVisibility = 102,
    acTitleVertLeftVisibility = 103,
    acTitleVertInsideVisibility = 104,
    acTitleVertRightVisibility = 105,
    acHeaderHorzTopVisibility = 106,
    acHeaderHorzInsideVisibility = 107,
    acHeaderHorzBottomVisibility = 108,
    acHeaderVertLeftVisibility = 109,
    acHeaderVertInsideVisibility = 110,
    acHeaderVertRightVisibility = 111,
    acDataHorzTopVisibility = 112,
    acDataHorzInsideVisibility = 113,
    acDataHorzBottomVisibility = 114,
    acDataVertLeftVisibility = 115,
    acDataVertInsideVisibility = 116,
    acDataVertRightVisibility = 117,
    acCellAlign = 130,
    acCellBackgroundFillNone = 131,
    acCellBackgroundColor = 132,
    acCellContentColor = 133,
    acCellTextStyle = 134,
    acCellTextHeight = 135,
    acCellTopGridColor = 136,
    acCellRightGridColor = 137,
    acCellBottomGridColor = 138,
    acCellLeftGridColor = 139,
    acCellTopGridLineWeight = 140,
    acCellRightGridLineWeight = 141,
    acCellBottomGridLineWeight = 142,
    acCellLeftGridLineWeight = 143,
    acCellTopVisibility = 144,
    acCellRightVisibility = 145,
    acCellBottomVisibility = 146,
    acCellLeftVisibility = 147,
    acCellDataType = 148
};

enum __declspec(uuid("9ee0e057-d88e-413c-bf7c-38a4f9bce8d0"))
AcMLineJustification
{
    acTop = 0,
    acZero = 1,
    acBottom = 2
};

enum __declspec(uuid("c213bf3e-161c-4369-8a97-246c6b9e862b"))
AcBlockScaling
{
    acAny = 0,
    acUniform = 1
};

enum __declspec(uuid("bb736bcd-01ef-4019-b28f-d52c780dff3c"))
AcDynamicBlockReferencePropertyUnitsType
{
    acNoUnits = 0,
    acAngular = 1,
    acDistance = 2,
    acArea = 3
};

enum __declspec(uuid("50ffb926-7e15-40d5-a886-46bc7f87d557"))
AcSectionState
{
    acSectionStatePlane = 1,
    acSectionStateBoundary = 2,
    acSectionStateVolume = 4
};

enum __declspec(uuid("12cbf359-2960-40ea-aee0-a315c6aa85bd"))
AcSectionState2
{
    acSectionState2Plane = 1,
    acSectionState2Slice = 2,
    acSectionState2Boundary = 4,
    acSectionState2Volume = 8
};

enum __declspec(uuid("34d8ea79-3ca7-4844-ab6b-0b5ddb922c09"))
AcSectionSubItem
{
    acSectionSubItemkNone = 0,
    acSectionSubItemSectionLine = 1,
    acSectionSubItemSectionLineTop = 2,
    acSectionSubItemSectionLineBottom = 4,
    acSectionSubItemBackLine = 8,
    acSectionSubItemBackLineTop = 16,
    acSectionSubItemBackLineBottom = 32,
    acSectionSubItemVerticalLineTop = 64,
    acSectionSubItemVerticalLineBottom = 128
};

enum __declspec(uuid("1918e1f2-e42f-4bf5-96f7-bb37e781dcbd"))
AcSectionType
{
    acSectionTypeLiveSection = 1,
    acSectionType2dSection = 2,
    acSectionType3dSection = 4
};

enum __declspec(uuid("bb35084d-1450-4eac-94d8-4bf2a6f42c30"))
AcSectionGeneration
{
    acSectionGenerationSourceAllObjects = 1,
    acSectionGenerationSourceSelectedObjects = 2,
    acSectionGenerationDestinationNewBlock = 16,
    acSectionGenerationDestinationReplaceBlock = 32,
    acSectionGenerationDestinationFile = 64
};

enum __declspec(uuid("4f721174-6c68-4bc9-865a-97e9f5c91464"))
AcHelixConstrainType
{
    acTurnHeight = 0,
    acTurns = 1,
    acHeight = 2
};

enum __declspec(uuid("60903635-e7cf-4b4a-88a1-bf446254dc05"))
AcShadowDisplayType
{
    acCastsAndReceivesShadows = 0,
    acCastsShadows = 1,
    acReceivesShadows = 2,
    acIgnoreShadows = 3
};

enum __declspec(uuid("1550ddae-99c6-4799-bdba-2702aac6f43f"))
AcLoftedSurfaceNormalType
{
    acRuled = 0,
    acSmooth = 1,
    acFirstNormal = 2,
    acLastNormal = 3,
    acEndsNormal = 4,
    acAllNormal = 5,
    acUseDraftAngles = 6
};

enum __declspec(uuid("a43c635d-1609-4588-bd5e-f68a1a956bb7"))
AcHelixTwistType
{
    acCCW = 0,
    acCW = 1
};

enum __declspec(uuid("b96a3445-0b38-4c15-84e9-577561a3e69f"))
AcUnderlayLayerOverrideType
{
    acNoOverrides = 0,
    acApplied = 1
};

enum __declspec(uuid("b148bdd1-64e7-4ad9-8681-14fd6c665d78"))
AcTableFlowDirection
{
    acTableFlowRight = 1,
    acTableFlowDownOrUp = 2,
    acTableFlowLeft = 4
};

enum __declspec(uuid("ae6b6245-e716-47f9-8192-f06174a956e7"))
AcCellMargin
{
    acCellMarginTop = 1,
    acCellMarginLeft = 2,
    acCellMarginBottom = 4,
    acCellMarginRight = 8,
    acCellMarginHorzSpacing = 16,
    acCellMarginVertSpacing = 32
};

enum __declspec(uuid("27e02945-94a5-4442-9701-bffed27ba2a3"))
AcCellContentLayout
{
    acCellContentLayoutFlow = 1,
    acCellContentLayoutStackedHorizontal = 2,
    acCellContentLayoutStackedVertical = 4
};

enum __declspec(uuid("04050a71-65fd-4ac0-8e4b-cf414caa3bb3"))
AcCellProperty
{
    acInvalidCellProperty = 0,
    acLock = 1,
    acDataType = 2,
    acDataFormat = 4,
    acRotation = 8,
    acScale = 16,
    acAlignmentProperty = 32,
    acContentColor = 64,
    acBackgroundColor = 128,
    acTextStyle = 256,
    acTextHeight = 512,
    acMarginLeft = 1024,
    acMarginTop = 2048,
    acMarginRight = 4096,
    acMarginBottom = 8192,
    acEnableBackgroundColor = 16384,
    acAutoScale = 32768,
    acMergeAll = 65536,
    acFlowDirBtoT = 131072,
    acContentLayout = 262144,
    acDataTypeAndFormat = 6,
    acContentProperties = 33662,
    acBitProperties = 245760,
    acAllCellProperties = 524287
};

enum __declspec(uuid("ac8f793e-4631-4b8c-a1db-85d4a4e7dca3"))
AcGridLineStyle
{
    acGridLineStyleSingle = 1,
    acGridLineStyleDouble = 2
};

enum __declspec(uuid("32d76ddd-1030-48ad-ab8b-06923d7af204"))
AcDataLinkUpdateDirection
{
    acUpdateDataFromSource = 1,
    acUpdateSourceFromData = 2
};

enum __declspec(uuid("611be926-2b4c-41bb-8473-7797d4a95710"))
AcDataLinkUpdateOption
{
    acUpdateOptionNone = 0,
    acUpdateOptionOverwriteContentModifiedAfterUpdate = 131072,
    acUpdateOptionOverwriteFormatModifiedAfterUpdate = 262144,
    acUpdateOptionUpdateFullSourceRange = 524288,
    acUpdateOptionIncludeXrefs = 1048576
};

enum __declspec(uuid("0085552d-6242-469d-ba97-479457694227"))
AcCellContentType
{
    acCellContentTypeUnknown = 0,
    acCellContentTypeValue = 1,
    acCellContentTypeField = 2,
    acCellContentTypeBlock = 4
};

enum __declspec(uuid("54b2fa0c-295a-4d0c-aa35-a4dc802582d1"))
AcCellState
{
    acCellStateNone = 0,
    acCellStateContentLocked = 1,
    acCellStateContentReadOnly = 2,
    acCellStateFormatLocked = 4,
    acCellStateFormatReadOnly = 8,
    acCellStateLinked = 16,
    acCellStateContentModified = 32,
    acCellStateFormatModified = 64
};

enum __declspec(uuid("892adfcd-9b1a-42c8-b9c5-0741f3e45eaf"))
AcCellOption
{
    kCellOptionNone = 0,
    kInheritCellFormat = 1
};

enum __declspec(uuid("8885a4a1-b395-475f-90f2-a114dcdd1385"))
AcTextAttachmentType
{
    acAttachmentTopOfTop = 0,
    acAttachmentMiddleOfTop = 1,
    acAttachmentBottomOfTop = 2,
    acAttachmentBottomOfTopLine = 3,
    acAttachmentMiddle = 4,
    acAttachmentMiddleOfBottom = 5,
    acAttachmentBottomOfBottom = 6,
    acAttachmentBottomLine = 7,
    acAttachmentAllLine = 8
};

enum __declspec(uuid("4f84b668-8192-4758-bbee-b00e3d72c128"))
AcMLeaderType
{
    acStraightLeader = 1,
    acSplineLeader = 2,
    acInVisibleLeader = 0
};

enum __declspec(uuid("3dee47dc-6187-419a-bbdb-150242be2e6b"))
AcMLeaderContentType
{
    acNoneContent = 0,
    acBlockContent = 1,
    acMTextContent = 2
};

enum __declspec(uuid("dfaed186-f862-4b06-b77c-7a5e7971c2e4"))
AcTextAlignmentType
{
    acLeftAlignment = 0,
    acCenterAlignment = 1,
    acRightAlignment = 2
};

enum __declspec(uuid("473b7305-150d-4b24-a855-1580e31b5dd2"))
AcTextAngleType
{
    acInsertAngle = 0,
    acHorizontalAngle = 1,
    acAlwaysRightReadingAngle = 2
};

enum __declspec(uuid("63d9e040-09d7-4474-b109-fd361df1f9a5"))
AcBlockConnectionType
{
    acConnectExtents = 0,
    acConnectBase = 1
};

enum __declspec(uuid("fe1d8595-54da-41eb-8fa0-ffaa30e26ab4"))
AcPredefBlockType
{
    acBlockImperial = 0,
    acBlockSlot = 1,
    acBlockCircle = 2,
    acBlockBox = 3,
    acBlockHexagon = 4,
    acBlockTriangle = 5,
    acBlockUserDefined = 6
};

enum __declspec(uuid("881b9e79-8d40-45f7-9426-4fb417a00199"))
AcDrawLeaderOrderType
{
    acDrawLeaderHeadFirst = 0,
    acDrawLeaderTailFirst = 1
};

enum __declspec(uuid("93186a33-7d5e-45e0-89a4-3278788891b7"))
AcDrawMLeaderOrderType
{
    acDrawContentFirst = 0,
    acDrawLeaderFirst = 1
};

enum __declspec(uuid("95493fe0-4b10-4277-aa9a-501b54a4a225"))
AcSegmentAngleType
{
    acDegreesAny = 0,
    acDegrees15 = 1,
    acDegrees30 = 2,
    acDegrees45 = 3,
    acDegrees60 = 4,
    acDegrees90 = 6,
    acDegreesHorz = 12
};

enum __declspec(uuid("5c3d8d1b-c7ab-4244-ab8b-0ccfee1e8a2c"))
AcTextAttachmentDirection
{
    acAttachmentHorizontal = 0,
    acAttachmentVertical = 1
};

enum __declspec(uuid("0e264eeb-4edd-43cd-8b2b-f13a8bc424f1"))
AcVerticalTextAttachmentType
{
    acAttachmentCenter = 0,
    acAttachmentLinedCenter = 1
};

enum __declspec(uuid("8182e5ce-ca21-41d2-83d1-a35c29b35125"))
AcMeshCreaseType
{
    acNoneCrease = 0,
    acAlwaysCrease = 1,
    acCreaseByLevel = 2
};

enum __declspec(uuid("ec89f06c-8b97-471b-ae00-a54365c1cacd"))
AcColorMethod
{
    acColorMethodByLayer = 192,
    acColorMethodByBlock = 193,
    acColorMethodByRGB = 194,
    acColorMethodByACI = 195,
    acColorMethodForeground = 197
};

struct __declspec(uuid("82174a4a-973d-4fc5-b3e7-5d009936ae57"))
IAcadAcCmColor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_EntityColor (
        /*[in]*/ long eColor ) = 0;
      virtual HRESULT __stdcall get_EntityColor (
        /*[out,retval]*/ long * eColor ) = 0;
      virtual HRESULT __stdcall get_ColorName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_BookName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall SetNames (
        /*[in]*/ BSTR ColorName,
        /*[in]*/ BSTR BookName ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_Red (
        /*[out,retval]*/ long * Red ) = 0;
      virtual HRESULT __stdcall get_Blue (
        /*[out,retval]*/ long * Blue ) = 0;
      virtual HRESULT __stdcall get_Green (
        /*[out,retval]*/ long * Green ) = 0;
      virtual HRESULT __stdcall SetRGB (
        /*[in]*/ long Red,
        /*[in]*/ long Green,
        /*[in]*/ long Blue ) = 0;
      virtual HRESULT __stdcall put_ColorMethod (
        /*[in]*/ enum AcColorMethod Flags ) = 0;
      virtual HRESULT __stdcall get_ColorMethod (
        /*[out,retval]*/ enum AcColorMethod * Flags ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ enum AcColor * color ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ enum AcColor color ) = 0;
      virtual HRESULT __stdcall SetColorBookColor (
        /*[in]*/ BSTR BookName,
        /*[in]*/ BSTR ColorName ) = 0;
};

struct __declspec(uuid("b4db8063-df62-413b-a300-8847f8a1fb86"))
IAcadHyperlink : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_URL (
        /*[in]*/ BSTR URLPath ) = 0;
      virtual HRESULT __stdcall get_URL (
        /*[out,retval]*/ BSTR * URLPath ) = 0;
      virtual HRESULT __stdcall put_URLDescription (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_URLDescription (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * ApplicationObject ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall put_URLNamedLocation (
        /*[in]*/ BSTR Location ) = 0;
      virtual HRESULT __stdcall get_URLNamedLocation (
        /*[out,retval]*/ BSTR * Location ) = 0;
};

struct __declspec(uuid("d803123c-9777-47a8-a7b4-60c09762ae0d"))
IAcadHyperlinks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IAcadHyperlink * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * ApplicationObject ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Description,
        /*[in]*/ VARIANT NamedLocation,
        /*[out,retval]*/ struct IAcadHyperlink * * pHyperlink ) = 0;
};

enum __declspec(uuid("a4d9f256-1da0-422a-9971-6fcf2a87e28a"))
AcSplineKnotParameterizationType
{
    acChord = 0,
    acSqrtChord = 1,
    acUniformParam = 2,
    acCustomParameterization = 15
};

enum __declspec(uuid("7ec6869a-5a6a-4760-80cd-78f311407efa"))
AcSplineFrameType
{
    acShow = 0,
    acHide = 1
};

enum __declspec(uuid("b8c57e2b-b451-4f86-b700-6872cbe266d3"))
AcSplineMethodType
{
    acFit = 0,
    acControlVertices = 1
};

struct __declspec(uuid("4e77067c-83ba-4446-86de-1136e07542a7"))
IAcadSectionTypeSettings : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GenerationOptions (
        /*[out,retval]*/ enum AcSectionGeneration * pVal ) = 0;
      virtual HRESULT __stdcall put_GenerationOptions (
        /*[in]*/ enum AcSectionGeneration pVal ) = 0;
      virtual HRESULT __stdcall get_SourceObjects (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_SourceObjects (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DestinationBlock (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_DestinationBlock (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DestinationFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DestinationFile (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_IntersectionBoundaryColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_IntersectionBoundaryColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_IntersectionBoundaryLayer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall put_IntersectionBoundaryLayer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_IntersectionBoundaryLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_IntersectionBoundaryLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_IntersectionBoundaryLinetypeScale (
        /*[out,retval]*/ ACAD_NOUNITS * ltScale ) = 0;
      virtual HRESULT __stdcall put_IntersectionBoundaryLinetypeScale (
        /*[in]*/ ACAD_NOUNITS ltScale ) = 0;
      virtual HRESULT __stdcall get_IntersectionBoundaryPlotStyleName (
        /*[out,retval]*/ BSTR * plotStyle ) = 0;
      virtual HRESULT __stdcall put_IntersectionBoundaryPlotStyleName (
        /*[in]*/ BSTR plotStyle ) = 0;
      virtual HRESULT __stdcall get_IntersectionBoundaryLineweight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_IntersectionBoundaryLineweight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall get_IntersectionBoundaryDivisionLines (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionBoundaryDivisionLines (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillHatchPatternType (
        /*[out,retval]*/ enum AcPatternType * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillHatchPatternType (
        /*[in]*/ enum AcPatternType pVal ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillHatchPatternName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillHatchPatternName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillHatchAngle (
        /*[out,retval]*/ ACAD_ANGLE * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillHatchAngle (
        /*[in]*/ ACAD_ANGLE pVal ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillHatchScale (
        /*[out,retval]*/ ACAD_NOUNITS * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillHatchScale (
        /*[in]*/ ACAD_NOUNITS pVal ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillHatchSpacing (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillHatchSpacing (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillLayer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillLayer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillLinetypeScale (
        /*[out,retval]*/ ACAD_NOUNITS * ltScale ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillLinetypeScale (
        /*[in]*/ ACAD_NOUNITS ltScale ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillPlotStyleName (
        /*[out,retval]*/ BSTR * plotStyle ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillPlotStyleName (
        /*[in]*/ BSTR plotStyle ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillLineweight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillLineweight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall get_IntersectionFillFaceTransparency (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionFillFaceTransparency (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_BackgroundLinesVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_BackgroundLinesVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_BackgroundLinesHiddenLine (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_BackgroundLinesHiddenLine (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_BackgroundLinesColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_BackgroundLinesColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_BackgroundLinesLayer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall put_BackgroundLinesLayer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_BackgroundLinesLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_BackgroundLinesLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_BackgroundLinesLinetypeScale (
        /*[out,retval]*/ ACAD_NOUNITS * ltScale ) = 0;
      virtual HRESULT __stdcall put_BackgroundLinesLinetypeScale (
        /*[in]*/ ACAD_NOUNITS ltScale ) = 0;
      virtual HRESULT __stdcall get_BackgroundLinesPlotStyleName (
        /*[out,retval]*/ BSTR * plotStyle ) = 0;
      virtual HRESULT __stdcall put_BackgroundLinesPlotStyleName (
        /*[in]*/ BSTR plotStyle ) = 0;
      virtual HRESULT __stdcall get_BackgroundLinesLineweight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_BackgroundLinesLineweight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesHiddenLine (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesHiddenLine (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesLayer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesLayer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesLinetypeScale (
        /*[out,retval]*/ ACAD_NOUNITS * ltScale ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesLinetypeScale (
        /*[in]*/ ACAD_NOUNITS ltScale ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesPlotStyleName (
        /*[out,retval]*/ BSTR * plotStyle ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesPlotStyleName (
        /*[in]*/ BSTR plotStyle ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesLineweight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesLineweight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesFaceTransparency (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesFaceTransparency (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ForegroundLinesEdgeTransparency (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ForegroundLinesEdgeTransparency (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_CurveTangencyLinesVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_CurveTangencyLinesVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CurveTangencyLinesColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_CurveTangencyLinesColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_CurveTangencyLinesLayer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall put_CurveTangencyLinesLayer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_CurveTangencyLinesLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_CurveTangencyLinesLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_CurveTangencyLinesLinetypeScale (
        /*[out,retval]*/ ACAD_NOUNITS * ltScale ) = 0;
      virtual HRESULT __stdcall put_CurveTangencyLinesLinetypeScale (
        /*[in]*/ ACAD_NOUNITS ltScale ) = 0;
      virtual HRESULT __stdcall get_CurveTangencyLinesPlotStyleName (
        /*[out,retval]*/ BSTR * plotStyle ) = 0;
      virtual HRESULT __stdcall put_CurveTangencyLinesPlotStyleName (
        /*[in]*/ BSTR plotStyle ) = 0;
      virtual HRESULT __stdcall get_CurveTangencyLinesLineweight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_CurveTangencyLinesLineweight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
};

struct __declspec(uuid("5b478006-beed-4daa-ac97-3bf847c13c72"))
IAcadDatabasePreferences : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_SolidFill (
        /*[out,retval]*/ VARIANT_BOOL * Fill ) = 0;
      virtual HRESULT __stdcall put_SolidFill (
        /*[in]*/ VARIANT_BOOL Fill ) = 0;
      virtual HRESULT __stdcall get_XRefEdit (
        /*[out,retval]*/ VARIANT_BOOL * Edit ) = 0;
      virtual HRESULT __stdcall put_XRefEdit (
        /*[in]*/ VARIANT_BOOL Edit ) = 0;
      virtual HRESULT __stdcall get_XRefLayerVisibility (
        /*[out,retval]*/ VARIANT_BOOL * XRefLayerVis ) = 0;
      virtual HRESULT __stdcall put_XRefLayerVisibility (
        /*[in]*/ VARIANT_BOOL XRefLayerVis ) = 0;
      virtual HRESULT __stdcall get_OLELaunch (
        /*[out,retval]*/ VARIANT_BOOL * Launch ) = 0;
      virtual HRESULT __stdcall put_OLELaunch (
        /*[in]*/ VARIANT_BOOL Launch ) = 0;
      virtual HRESULT __stdcall get_AllowLongSymbolNames (
        /*[out,retval]*/ VARIANT_BOOL * LongNames ) = 0;
      virtual HRESULT __stdcall put_AllowLongSymbolNames (
        /*[in]*/ VARIANT_BOOL LongNames ) = 0;
      virtual HRESULT __stdcall get_ObjectSortBySelection (
        /*[out,retval]*/ VARIANT_BOOL * Sort ) = 0;
      virtual HRESULT __stdcall put_ObjectSortBySelection (
        /*[in]*/ VARIANT_BOOL Sort ) = 0;
      virtual HRESULT __stdcall get_ObjectSortBySnap (
        /*[out,retval]*/ VARIANT_BOOL * Sort ) = 0;
      virtual HRESULT __stdcall put_ObjectSortBySnap (
        /*[in]*/ VARIANT_BOOL Sort ) = 0;
      virtual HRESULT __stdcall get_ObjectSortByRedraws (
        /*[out,retval]*/ VARIANT_BOOL * Sort ) = 0;
      virtual HRESULT __stdcall put_ObjectSortByRedraws (
        /*[in]*/ VARIANT_BOOL Sort ) = 0;
      virtual HRESULT __stdcall get_ObjectSortByRegens (
        /*[out,retval]*/ VARIANT_BOOL * Sort ) = 0;
      virtual HRESULT __stdcall put_ObjectSortByRegens (
        /*[in]*/ VARIANT_BOOL Sort ) = 0;
      virtual HRESULT __stdcall get_ObjectSortByPlotting (
        /*[out,retval]*/ VARIANT_BOOL * Sort ) = 0;
      virtual HRESULT __stdcall put_ObjectSortByPlotting (
        /*[in]*/ VARIANT_BOOL Sort ) = 0;
      virtual HRESULT __stdcall get_ObjectSortByPSOutput (
        /*[out,retval]*/ VARIANT_BOOL * Sort ) = 0;
      virtual HRESULT __stdcall put_ObjectSortByPSOutput (
        /*[in]*/ VARIANT_BOOL Sort ) = 0;
      virtual HRESULT __stdcall put_ContourLinesPerSurface (
        /*[in]*/ long Path ) = 0;
      virtual HRESULT __stdcall get_ContourLinesPerSurface (
        /*[out,retval]*/ long * Path ) = 0;
      virtual HRESULT __stdcall put_DisplaySilhouette (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_DisplaySilhouette (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_MaxActiveViewports (
        /*[in]*/ long Path ) = 0;
      virtual HRESULT __stdcall get_MaxActiveViewports (
        /*[out,retval]*/ long * Path ) = 0;
      virtual HRESULT __stdcall put_RenderSmoothness (
        /*[in]*/ double Path ) = 0;
      virtual HRESULT __stdcall get_RenderSmoothness (
        /*[out,retval]*/ double * Path ) = 0;
      virtual HRESULT __stdcall put_SegmentPerPolyline (
        /*[in]*/ long Path ) = 0;
      virtual HRESULT __stdcall get_SegmentPerPolyline (
        /*[out,retval]*/ long * Path ) = 0;
      virtual HRESULT __stdcall put_TextFrameDisplay (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_TextFrameDisplay (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_Lineweight (
        /*[in]*/ enum AcLineWeight Path ) = 0;
      virtual HRESULT __stdcall get_Lineweight (
        /*[out,retval]*/ enum AcLineWeight * Path ) = 0;
      virtual HRESULT __stdcall put_LineWeightDisplay (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_LineWeightDisplay (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
};

struct __declspec(uuid("37d2d493-cbfb-474b-b9b9-4bac8cf79678"))
IAcadSummaryInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Author (
        /*[out,retval]*/ BSTR * pAuthor ) = 0;
      virtual HRESULT __stdcall put_Author (
        /*[in]*/ BSTR pAuthor ) = 0;
      virtual HRESULT __stdcall get_Comments (
        /*[out,retval]*/ BSTR * pComments ) = 0;
      virtual HRESULT __stdcall put_Comments (
        /*[in]*/ BSTR pComments ) = 0;
      virtual HRESULT __stdcall get_HyperlinkBase (
        /*[out,retval]*/ BSTR * pHyperlinkBase ) = 0;
      virtual HRESULT __stdcall put_HyperlinkBase (
        /*[in]*/ BSTR pHyperlinkBase ) = 0;
      virtual HRESULT __stdcall get_Keywords (
        /*[out,retval]*/ BSTR * pKeywords ) = 0;
      virtual HRESULT __stdcall put_Keywords (
        /*[in]*/ BSTR pKeywords ) = 0;
      virtual HRESULT __stdcall get_LastSavedBy (
        /*[out,retval]*/ BSTR * pLastSavedBy ) = 0;
      virtual HRESULT __stdcall put_LastSavedBy (
        /*[in]*/ BSTR pLastSavedBy ) = 0;
      virtual HRESULT __stdcall get_RevisionNumber (
        /*[out,retval]*/ BSTR * pRevisionNumber ) = 0;
      virtual HRESULT __stdcall put_RevisionNumber (
        /*[in]*/ BSTR pRevisionNumber ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * pSubject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR pSubject ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * pTitle ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR pTitle ) = 0;
      virtual HRESULT __stdcall NumCustomInfo (
        /*[out,retval]*/ int * Index ) = 0;
      virtual HRESULT __stdcall GetCustomByIndex (
        /*[in]*/ int Index,
        /*[out]*/ BSTR * pKey,
        /*[out]*/ BSTR * pValue ) = 0;
      virtual HRESULT __stdcall GetCustomByKey (
        /*[in]*/ BSTR key,
        /*[out]*/ BSTR * pValue ) = 0;
      virtual HRESULT __stdcall SetCustomByIndex (
        /*[in]*/ int Index,
        /*[in]*/ BSTR key,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall SetCustomByKey (
        /*[in]*/ BSTR key,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall AddCustomInfo (
        /*[in]*/ BSTR key,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall RemoveCustomByIndex (
        /*[in]*/ int Index ) = 0;
      virtual HRESULT __stdcall RemoveCustomByKey (
        /*[in]*/ BSTR key ) = 0;
};

enum __declspec(uuid("289cea20-a636-42be-b968-0cddc5edc869"))
AcWireframeType
{
    acIsolines = 0,
    acIsoparms = 1
};

enum __declspec(uuid("3bbe0a4c-f3df-4271-82e4-a79a1441046b"))
AcPointCloudColorType
{
    acTrueColor = 0,
    acByColor = 1
};

enum __declspec(uuid("5248b0f1-db5e-45c5-a15b-f9a1612def10"))
AcPointCloudStylizationType
{
    acScanColor = 0,
    acObjectColor = 1,
    acNormal = 2,
    acIntensity = 3
};

enum __declspec(uuid("958fc25f-d7e3-4d99-a575-2c5ea9ba7c70"))
AcPointCloudIntensityStyle
{
    acIntensityGrayscale = 0,
    acIntensityRainbow = 1,
    acIntensityRed = 2,
    acIntensityGreen = 3,
    acIntensityBlue = 4,
    acIntensityEditableFlag = 5
};

enum __declspec(uuid("bfb6b85b-21a2-48fb-8482-c567a6535a3a"))
AcPointCloudExStylizationType
{
    acRGB = 0,
    acObject = 1,
    acNormals = 2,
    acIntensities = 3,
    acElevation = 4,
    acClassification = 5
};

struct __declspec(uuid("72e04115-1905-4dfa-b65c-1e941c46a114"))
IAcadSectionTypeSettings2 : IAcadSectionTypeSettings
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IntersectionBoundaryVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IntersectionBoundaryVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("ba1617e9-bec7-4b20-b227-8f490b761242"))
AcadHyperlink;
    // [ default ] interface IAcadHyperlink

struct __declspec(uuid("723b19d6-1957-41ed-b6a3-5a4d2de405bb"))
IAcadDynamicBlockReferenceProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PropertyName (
        /*[out,retval]*/ BSTR * PropertyName ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * ReadOnly ) = 0;
      virtual HRESULT __stdcall get_show (
        /*[out,retval]*/ VARIANT_BOOL * show ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall get_AllowedValues (
        /*[out,retval]*/ VARIANT * AllowedValues ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_UnitsType (
        /*[out,retval]*/ enum AcDynamicBlockReferencePropertyUnitsType * Units ) = 0;
};

struct __declspec(uuid("7eb86ce8-dfae-4cd3-a054-d2ebf2d9821c"))
AcadDynamicBlockReferenceProperty;
    // [ default ] interface IAcadDynamicBlockReferenceProperty

struct __declspec(uuid("125bb201-d62c-4e2d-9243-339f8cd86915"))
AcadAcCmColor;
    // [ default ] interface IAcadAcCmColor

struct __declspec(uuid("5125a948-7cd1-46be-b8cc-9faf2d286e65"))
AcadObject;
    // [ default ] interface IAcadObject
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("f18bce66-ea85-4e1b-98ae-b5d57851185f"))
AcadXRecord;
    // [ default ] interface IAcadXRecord
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("9a79b8bf-a4d2-47c3-b1ee-88e02eea553a"))
AcadSortentsTable;
    // [ default ] interface IAcadSortentsTable
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("8910e3ec-d81a-465c-9c7b-ab036c51d71e"))
AcadDimStyle;
    // [ default ] interface IAcadDimStyle
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("375af0d2-075a-42e2-a0fb-3db6c8e8c11c"))
AcadLayer;
    // [ default ] interface IAcadLayer
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("3b284fb8-d186-4180-894e-f0476932c326"))
AcadLineType;
    // [ default ] interface IAcadLineType
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("ebca2ef7-59d6-4e5d-b6fe-0f8ac60435f8"))
AcadMaterial;
    // [ default ] interface IAcadMaterial
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("02b67ebf-a132-4933-ac54-abdb2b29b0ef"))
AcadRegisteredApplication;
    // [ default ] interface IAcadRegisteredApplication
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("51d16155-25db-47f6-8f4c-888b0037a1af"))
AcadTextStyle;
    // [ default ] interface IAcadTextStyle
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("5b85ebf4-7548-40d3-84f5-8a63830f1689"))
AcadUCS;
    // [ default ] interface IAcadUCS
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("5ed51c8a-bdaa-4528-aeb1-1580a5feeaef"))
AcadView;
    // [ default ] interface IAcadView
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("dddb9583-d227-461b-95c4-61115281cb16"))
AcadViewport;
    // [ default ] interface IAcadViewport
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("d344e9a2-c7ad-4c14-92ce-84e4750c02e1"))
AcadGroup;
    // [ default ] interface IAcadGroup
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("7853f100-4610-4a0d-aecd-6c3d5741212a"))
AcadPlotConfiguration;
    // [ default ] interface IAcadPlotConfiguration
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("2e3519e8-3a7e-46bb-b420-63e621068018"))
AcadLayout;
    // [ default ] interface IAcadLayout
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("96a0858a-afbd-4922-8ff4-06bdd202e229"))
IAcadIdPair : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IsCloned (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_IsOwnerXlated (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_IsPrimary (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_key (
        /*[out,retval]*/ LONG_PTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ LONG_PTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * ApplicationObject ) = 0;
};

struct __declspec(uuid("0ff3c6da-7aa8-4875-a6b4-c8cccf3ba82f"))
AcadIdPair;
    // [ default ] interface IAcadIdPair

struct __declspec(uuid("d3f1b5a8-ef2a-4a98-ba38-0c456d46df0e"))
AcadTableStyle;
    // [ default ] interface IAcadTableStyle
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("ee62e6b0-39a0-426b-a711-fa3ef19a6297"))
AcadSectionSettings;
    // [ default ] interface IAcadSectionSettings
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("e90a9883-f596-4d6e-a006-f4ead1bd5d33"))
AcadSectionTypeSettings;
    // [ default ] interface IAcadSectionTypeSettings2
    // interface IAcadSectionTypeSettings
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("b1705001-3175-414d-a4db-54451008b9dc"))
AcadMLeaderStyle;
    // [ default ] interface IAcadMLeaderStyle
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("457bcf6d-bfd4-400e-932e-890c6d3dd01b"))
AcadHyperlinks;
    // [ default ] interface IAcadHyperlinks

struct __declspec(uuid("833d327e-f7d8-44ea-8be7-881c152d7ba8"))
AcadDictionary;
    // [ default ] interface IAcadDictionary
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("a7b347f4-da20-4ce9-999c-b91a9aab8bb2"))
AcadLayers;
    // [ default ] interface IAcadLayers
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("9cb88c70-6f5d-4b07-97cf-6f2162004e3c"))
AcadDimStyles;
    // [ default ] interface IAcadDimStyles
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("01a30270-908f-4771-bc60-c2c7b91e0576"))
AcadDictionaries;
    // [ default ] interface IAcadDictionaries
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("15ef95bb-28b9-4a7a-b548-7f824b9500eb"))
AcadLineTypes;
    // [ default ] interface IAcadLineTypes
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("cdc8fe2e-2ee7-474d-a440-e90a9d2edf20"))
AcadMaterials;
    // [ default ] interface IAcadMaterials
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("48f3753a-ac72-4e68-91da-549dc3949afe"))
AcadTextStyles;
    // [ default ] interface IAcadTextStyles
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("f0491dd1-27c5-4a66-a9f7-1ef8340ce311"))
AcadUCSs;
    // [ default ] interface IAcadUCSs
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("c5c157d2-67ff-4133-ab97-256581df0fef"))
AcadRegisteredApplications;
    // [ default ] interface IAcadRegisteredApplications
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("a4eff110-ce17-4d60-b6f6-4e339a66a526"))
AcadViews;
    // [ default ] interface IAcadViews
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("10cd632f-39b4-4a1a-994d-691ab5274420"))
AcadViewports;
    // [ default ] interface IAcadViewports
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("49dcb9b7-357d-4c54-8e50-a5eac0cb2c9a"))
AcadGroups;
    // [ default ] interface IAcadGroups
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("08b1f0c3-7649-4ea6-a026-641d1aa48db7"))
AcadBlocks;
    // [ default ] interface IAcadBlocks
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("379e15d6-92ba-4434-b643-74b5bf94436b"))
AcadLayouts;
    // [ default ] interface IAcadLayouts
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("8dd0d1db-0301-49a2-a594-1f91fd87deae"))
AcadPlotConfigurations;
    // [ default ] interface IAcadPlotConfigurations
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("a9932fd5-5009-4436-9347-0928e5a6ca4b"))
AcadEntity;
    // [ default ] interface IAcadEntity
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("c476dbac-1c07-4cf1-a84b-38ad1ed8fe2e"))
IAcadShadowDisplay : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ShadowDisplay (
        /*[out,retval]*/ enum AcShadowDisplayType * ShadowDisplay ) = 0;
      virtual HRESULT __stdcall put_ShadowDisplay (
        /*[in]*/ enum AcShadowDisplayType ShadowDisplay ) = 0;
      virtual HRESULT __stdcall get_EnableShadowDisplay (
        /*[out,retval]*/ long * ShadowDisplay ) = 0;
};

struct __declspec(uuid("1dd039bf-4222-4cae-a26e-0e904ba1028d"))
AcadRasterImage;
    // [ default ] interface IAcadRasterImage
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("f9102229-7424-4cf6-8968-474e67f7ecb7"))
Acad3DFace;
    // [ default ] interface IAcad3DFace
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("301b32f7-c4bb-4fa4-8715-d766caae7dd9"))
Acad3DPolyline;
    // [ default ] interface IAcad3DPolyline
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("e1405564-accd-4198-8bf5-3f4669db8884"))
AcadRegion;
    // [ default ] interface IAcadRegion
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("ecf42d7a-110e-4805-8f12-7d39d3b80103"))
Acad3DSolid;
    // [ default ] interface IAcad3DSolid
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("3fc23b9f-54c2-418e-9ee5-62c6985ab3b4"))
AcadArc;
    // [ default ] interface IAcadArc
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("c7daa988-04ea-4f19-9e71-d0733ae12be5"))
AcadAttribute;
    // [ default ] interface IAcadAttribute
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("c35e52d8-2d92-4241-b992-5de9fdd1725d"))
AcadAttributeReference;
    // [ default ] interface IAcadAttributeReference
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("d16d583d-89d1-4cab-843d-404a1433e743"))
AcadBlockReference;
    // [ default ] interface IAcadBlockReference
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("0d5b7d85-38b7-449f-9cb6-48bc4e8520b0"))
AcadCircle;
    // [ default ] interface IAcadCircle
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("d0e738c2-7182-4040-b935-a6afbe8dfdf8"))
AcadEllipse;
    // [ default ] interface IAcadEllipse
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("c373ea27-d0de-4b87-b239-8a835e8c8285"))
AcadHatch;
    // [ default ] interface IAcadHatch
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("f6fa0699-1fa0-494b-9786-d09de5a5161e"))
AcadLeader;
    // [ default ] interface IAcadLeader
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("d4623034-9d02-475d-b849-fc2e9d94a1a1"))
IAcadSubEntity : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnModified ( ) = 0;
      virtual HRESULT __stdcall get_ObjectName (
        /*[out,retval]*/ BSTR * ObjectName ) = 0;
      virtual HRESULT __stdcall get_color (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_color (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall get_Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall get_LinetypeScale (
        /*[out,retval]*/ ACAD_NOUNITS * ltScale ) = 0;
      virtual HRESULT __stdcall get_PlotStyleName (
        /*[out,retval]*/ BSTR * plotStyle ) = 0;
      virtual HRESULT __stdcall get_Lineweight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall get_Hyperlinks (
        /*[out,retval]*/ struct IAcadHyperlinks * * Hyperlinks ) = 0;
};

struct __declspec(uuid("fd5750fe-c24d-4556-be06-d37f5a1f821a"))
IAcadMLeaderLeader : IAcadSubEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LeaderType (
        /*[out,retval]*/ enum AcMLeaderType * Type ) = 0;
      virtual HRESULT __stdcall put_LeaderType (
        /*[in]*/ enum AcMLeaderType Type ) = 0;
      virtual HRESULT __stdcall get_LeaderLineColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * Type ) = 0;
      virtual HRESULT __stdcall put_LeaderLineColor (
        /*[in]*/ struct IAcadAcCmColor * Type ) = 0;
      virtual HRESULT __stdcall get_LeaderLinetype (
        /*[out,retval]*/ ACAD_LTYPE * Linetype ) = 0;
      virtual HRESULT __stdcall put_LeaderLinetype (
        /*[in]*/ ACAD_LTYPE Linetype ) = 0;
      virtual HRESULT __stdcall get_LeaderLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_LeaderLineWeight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadType (
        /*[out,retval]*/ enum AcDimArrowheadType * BlockName ) = 0;
      virtual HRESULT __stdcall put_ArrowheadType (
        /*[in]*/ enum AcDimArrowheadType BlockName ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_ArrowheadBlock (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_ArrowheadBlock (
        /*[in]*/ BSTR BlockName ) = 0;
};

struct __declspec(uuid("9ead6c8f-b595-4a4f-b315-46540d37d070"))
AcadMLeaderLeader;
    // [ default ] interface IAcadMLeaderLeader
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("0e20cfaf-c21a-4ac3-bdd0-463b307215b6"))
AcadMLeader;
    // [ default ] interface IAcadMLeader
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("1004d324-e19d-4ed5-99ac-256096ea6344"))
AcadLWPolyline;
    // [ default ] interface IAcadLWPolyline
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("23bd224b-6952-4c1f-a114-6510734d6a90"))
AcadLine;
    // [ default ] interface IAcadLine
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("a02afbce-8fb5-442c-a338-47d015425331"))
AcadMText;
    // [ default ] interface IAcadMText
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("99b15887-2265-48bf-a278-dd81d93e00d1"))
AcadPoint;
    // [ default ] interface IAcadPoint
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("ca657076-ec7e-46bc-a29d-a915654ce6f7"))
AcadPolyline;
    // [ default ] interface IAcadPolyline
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("24798d46-e5e6-4cef-9b5c-6f1c91b86416"))
AcadPolygonMesh;
    // [ default ] interface IAcadPolygonMesh
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("21e9cc83-64dd-4340-bd9b-9337581a190c"))
AcadRay;
    // [ default ] interface IAcadRay
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("b8e67790-850a-473f-9b1a-6e1abe686d31"))
AcadShape;
    // [ default ] interface IAcadShape
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("fa2ec09b-ac70-4514-aaae-68d63f994ffe"))
AcadSolid;
    // [ default ] interface IAcadSolid
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("502ebf0d-d4a9-41d0-acdc-8e1723f24a56"))
AcadSpline;
    // [ default ] interface IAcadSpline
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("723bcc26-00d2-4536-8ac2-c374fabb0514"))
AcadText;
    // [ default ] interface IAcadText
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("11b2a176-f9d6-421b-8374-dceddf9e1df3"))
AcadTolerance;
    // [ default ] interface IAcadTolerance
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("dc2e4629-b7d9-4169-acf7-bf249e6e4a82"))
AcadTrace;
    // [ default ] interface IAcadTrace
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("52822f4a-db41-4bad-8e24-7eb749aaa1c0"))
AcadXline;
    // [ default ] interface IAcadXline
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("cd903474-f5d9-4717-a53a-970b98811c6c"))
AcadPViewport;
    // [ default ] interface IAcadPViewport
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("7e3c5fb6-6651-4c00-9a27-925914a86f99"))
AcadMInsertBlock;
    // [ default ] interface IAcadMInsertBlock
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("12a0e456-b9c9-4516-b389-5fe1269dcfc8"))
AcadPolyfaceMesh;
    // [ default ] interface IAcadPolyfaceMesh
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("e1401960-ffa0-425a-b7f9-bb10645325f0"))
AcadMLine;
    // [ default ] interface IAcadMLine
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("323bc6eb-3f64-4c02-8f8a-c6970be3143b"))
AcadExternalReference;
    // [ default ] interface IAcadExternalReference
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("f9e28a62-2115-4784-910e-999a4283f49a"))
AcadTable;
    // [ default ] interface IAcadTable
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("3bfa2118-0236-4801-b7b2-e3dad67778ba"))
AcadOle;
    // [ default ] interface IAcadOle
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("e9a86537-dd8a-46a2-b65e-02e6f364ef59"))
AcadHelix;
    // [ default ] interface IAcadHelix
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("38c88e2f-d908-47a8-abc4-378a4f4b676a"))
AcadSurface;
    // [ default ] interface IAcadSurface
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("6cf03bcd-c149-453b-b9f0-93fcec67e3be"))
AcadPlaneSurface;
    // [ default ] interface IAcadPlaneSurface
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("3fe41eb8-1cbd-4ace-a41e-eb3bf4e26b11"))
AcadExtrudedSurface;
    // [ default ] interface IAcadExtrudedSurface
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("f9d140eb-fb37-4922-8a8d-8c522b943586"))
AcadRevolvedSurface;
    // [ default ] interface IAcadRevolvedSurface
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("062a3e5b-d821-4ae0-b4b7-873ebc51e6e3"))
AcadSweptSurface;
    // [ default ] interface IAcadSweptSurface
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("f69a1c36-d019-49ea-9922-c29a79e2734b"))
AcadLoftedSurface;
    // [ default ] interface IAcadLoftedSurface
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("fca3b245-8eab-48ba-bd2a-6075ce1d65b8"))
AcadSection;
    // [ default ] interface IAcadSection2
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("a02c2829-2703-44a5-9298-c1f4cd7db700"))
AcadSectionManager;
    // [ default ] interface IAcadSectionManager
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("728a5356-0d14-4db8-967b-17db000f5fd0"))
AcadDwfUnderlay;
    // [ default ] interface IAcadUnderlay
    // interface IAcadDwfUnderlay
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("97da9cd9-7890-4c56-aae8-be8cb771ff72"))
AcadDgnUnderlay;
    // [ default ] interface IAcadUnderlay
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("6b32612a-1a18-4bbf-b5ab-3ddaf8a0d5bc"))
AcadPdfUnderlay;
    // [ default ] interface IAcadUnderlay
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("6396720f-ad15-4142-a3d2-fbdeb88dde0f"))
AcadSubEntity;
    // [ default ] interface IAcadSubEntity

struct __declspec(uuid("09d386fe-c2ca-499c-b5c8-04669d31b04b"))
IAcadSubEntSolidFace : IAcadSubEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR Material ) = 0;
};

struct __declspec(uuid("a6ead076-9a07-4d60-b04b-b3f1583d5e08"))
AcadSubEntSolidFace;
    // [ default ] interface IAcadSubEntSolidFace

struct __declspec(uuid("8fa9f8d0-d221-406c-b90d-148df7e05454"))
IAcadSubEntSolidEdge : IAcadSubEntity
{};

struct __declspec(uuid("1d600df1-c0d4-44f1-914b-cdfac06ac82b"))
AcadSubEntSolidEdge;
    // [ default ] interface IAcadSubEntSolidEdge

struct __declspec(uuid("a616de10-4b03-4ba8-a213-6a485eda0f68"))
IAcadSubEntSolidVertex : IAcadSubEntity
{};

struct __declspec(uuid("b64cfc7c-4ae0-4ecd-b530-15f5ff681e99"))
AcadSubEntSolidVertex;
    // [ default ] interface IAcadSubEntSolidVertex

struct __declspec(uuid("9c40da30-7619-4c91-a65f-c714ce7c9179"))
IAcadSubEntSolidNode : IAcadSubEntity
{};

struct __declspec(uuid("496c8f4b-deb2-40e5-8225-4eed2e236cc2"))
AcadSubEntSolidNode;
    // [ default ] interface IAcadSubEntSolidNode

struct __declspec(uuid("18c48794-22fa-4c45-b57c-b16be1cda850"))
AcadWipeout;
    // [ default ] interface IAcadWipeout

struct __declspec(uuid("36fb54b5-ef94-4583-b2f4-0e612a1335d9"))
AcadSubDMesh;
    // [ default ] interface IAcadSubDMesh
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("cd70ef32-6207-4e70-bb30-b0988c7fb089"))
IAcadSubDMeshFace : IAcadSubEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR Material ) = 0;
      virtual HRESULT __stdcall get_CreaseType (
        /*[out,retval]*/ enum AcMeshCreaseType * Type ) = 0;
      virtual HRESULT __stdcall put_CreaseType (
        /*[in]*/ enum AcMeshCreaseType Type ) = 0;
      virtual HRESULT __stdcall get_CreaseLevel (
        /*[out,retval]*/ double * level ) = 0;
      virtual HRESULT __stdcall put_CreaseLevel (
        /*[in]*/ double level ) = 0;
};

struct __declspec(uuid("34872d3b-e551-4fd7-b39f-897b2d505021"))
AcadSubDMeshFace;
    // [ default ] interface IAcadSubDMeshFace
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("b8e2ef9f-2d35-433e-a278-1dc5695c4b5d"))
IAcadSubDMeshEdge : IAcadSubEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CreaseType (
        /*[out,retval]*/ enum AcMeshCreaseType * Type ) = 0;
      virtual HRESULT __stdcall put_CreaseType (
        /*[in]*/ enum AcMeshCreaseType Type ) = 0;
      virtual HRESULT __stdcall get_CreaseLevel (
        /*[out,retval]*/ double * level ) = 0;
      virtual HRESULT __stdcall put_CreaseLevel (
        /*[in]*/ double level ) = 0;
};

struct __declspec(uuid("1bb02970-8912-418a-8f32-74fa9581df07"))
AcadSubDMeshEdge;
    // [ default ] interface IAcadSubDMeshEdge
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("a3fddd7e-946b-48e9-98c3-c23aa15e83fc"))
IAcadSubDMeshVertex : IAcadSubEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * coord ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT coord ) = 0;
      virtual HRESULT __stdcall get_CreaseType (
        /*[out,retval]*/ enum AcMeshCreaseType * Type ) = 0;
      virtual HRESULT __stdcall put_CreaseType (
        /*[in]*/ enum AcMeshCreaseType Type ) = 0;
      virtual HRESULT __stdcall get_CreaseLevel (
        /*[out,retval]*/ double * level ) = 0;
      virtual HRESULT __stdcall put_CreaseLevel (
        /*[in]*/ double level ) = 0;
};

struct __declspec(uuid("f1da93a7-c0fc-4350-9ef0-06b30cc4a8e0"))
AcadSubDMeshVertex;
    // [ default ] interface IAcadSubDMeshVertex
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("2057af3f-932e-4f07-8ccc-6e963827e846"))
AcadNurbSurface;
    // [ default ] interface IAcadNurbSurface
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("7093f7cb-516b-4d7a-99d7-77d7a5782c4e"))
AcadGeoPositionMarker;
    // [ default ] interface IAcadGeoPositionMarker
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("d4e9fe63-1c48-4d39-b131-f56361f58a7e"))
AcadGeomapImage;
    // [ default ] interface IAcadGeomapImage

struct __declspec(uuid("ce9595d7-1ee6-4bb6-a34f-ff9a28218c3f"))
AcadDimension;
    // [ default ] interface IAcadDimension
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("96e9c35c-0f22-4cfb-9767-deb9471784b8"))
AcadDimAligned;
    // [ default ] interface IAcadDimAligned
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("4a539245-2d16-405f-9e60-abe70345e2bd"))
AcadDimAngular;
    // [ default ] interface IAcadDimAngular
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("79e01344-0dcd-4024-b8ca-9ed310b6aafc"))
AcadDimDiametric;
    // [ default ] interface IAcadDimDiametric
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("7aaa3e2e-6170-4917-a467-fbc991ec75f7"))
AcadDimOrdinate;
    // [ default ] interface IAcadDimOrdinate
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("a7481c1c-93f5-4104-b384-b25d94715fdc"))
AcadDimRadial;
    // [ default ] interface IAcadDimRadial
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("9870e5f9-d0b0-49ab-92d9-bd7523c16b62"))
AcadDimRotated;
    // [ default ] interface IAcadDimRotated
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("723c51dd-9592-44c6-a109-09e81ceea83c"))
AcadDim3PointAngular;
    // [ default ] interface IAcadDim3PointAngular
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("d75efd10-3a2b-4302-94b2-7e325dbb0e26"))
AcadDimArcLength;
    // [ default ] interface IAcadDimArcLength
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("6ea5fb73-a8d0-460e-8d5b-5f494e6e3220"))
AcadDimRadialLarge;
    // [ default ] interface IAcadDimRadialLarge
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("d3c339b4-90b3-430e-8ffe-260fe1f83b6f"))
AcadBlock;
    // [ default ] interface IAcadBlock
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("a8182e51-f166-4dd3-bc15-dfe0af6cf55b"))
AcadModelSpace;
    // [ default ] interface IAcadModelSpace
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("557aecba-fd45-400e-bd83-b8be23303ab0"))
AcadPaperSpace;
    // [ default ] interface IAcadPaperSpace
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("4c1cb0cc-e804-44f7-8eb5-61d271bdecf7"))
AcadPointCloud;
    // [ default ] interface IAcadPointCloud
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("36dd8cc6-0474-4eb5-9a04-4b0df49ac516"))
AcadPointCloudEx;
    // [ default ] interface IAcadPointCloudEx2
    // [ default, source ] interface IAcadObjectEvents

struct __declspec(uuid("5ddc42fb-dddb-4bee-8839-9b4189877829"))
AcadSummaryInfo;
    // [ default ] interface IAcadSummaryInfo

struct __declspec(uuid("e7315013-98ca-401b-aa9b-59e4c7000eae"))
AcadDatabasePreferences;
    // [ default ] interface IAcadDatabasePreferences

struct __declspec(uuid("4aff1852-a87e-44d7-8ad6-9e26553f921d"))
AcadDatabase;
    // [ default ] interface IAcadDatabase

enum __declspec(uuid("6016645b-9c1d-46ea-bc15-3807d9561853"))
AcadSecurityParamsType
{
    ACADSECURITYPARAMS_ENCRYPT_DATA = 1,
    ACADSECURITYPARAMS_ENCRYPT_PROPS = 2,
    ACADSECURITYPARAMS_SIGN_DATA = 16,
    ACADSECURITYPARAMS_ADD_TIMESTAMP = 32
};

enum __declspec(uuid("80ad0347-fe8a-4422-b821-da7505219039"))
AcadSecurityParamsConstants
{
    ACADSECURITYPARAMS_ALGID_RC4 = 26625
};

struct __declspec(uuid("a5c61cc3-daf1-47f8-a774-42ffdd9b798b"))
IAcadSecurityParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Action (
        /*[in]*/ long pOperations ) = 0;
      virtual HRESULT __stdcall get_Action (
        /*[out,retval]*/ long * pOperations ) = 0;
      virtual HRESULT __stdcall put_Password (
        /*[in]*/ BSTR pSecret ) = 0;
      virtual HRESULT __stdcall get_Password (
        /*[out,retval]*/ BSTR * pSecret ) = 0;
      virtual HRESULT __stdcall put_ProviderType (
        /*[in]*/ long pProvType ) = 0;
      virtual HRESULT __stdcall get_ProviderType (
        /*[out,retval]*/ long * pProvType ) = 0;
      virtual HRESULT __stdcall put_ProviderName (
        /*[in]*/ BSTR pProvName ) = 0;
      virtual HRESULT __stdcall get_ProviderName (
        /*[out,retval]*/ BSTR * pProvName ) = 0;
      virtual HRESULT __stdcall put_Algorithm (
        /*[in]*/ long pAlgId ) = 0;
      virtual HRESULT __stdcall get_Algorithm (
        /*[out,retval]*/ long * pAlgId ) = 0;
      virtual HRESULT __stdcall put_KeyLength (
        /*[in]*/ long pKeyLen ) = 0;
      virtual HRESULT __stdcall get_KeyLength (
        /*[out,retval]*/ long * pKeyLen ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR pCertSubject ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * pCertSubject ) = 0;
      virtual HRESULT __stdcall put_Issuer (
        /*[in]*/ BSTR pCertIssuer ) = 0;
      virtual HRESULT __stdcall get_Issuer (
        /*[out,retval]*/ BSTR * pCertIssuer ) = 0;
      virtual HRESULT __stdcall put_SerialNumber (
        /*[in]*/ BSTR pSerialNum ) = 0;
      virtual HRESULT __stdcall get_SerialNumber (
        /*[out,retval]*/ BSTR * pSerialNum ) = 0;
      virtual HRESULT __stdcall put_Comment (
        /*[in]*/ BSTR pText ) = 0;
      virtual HRESULT __stdcall get_Comment (
        /*[out,retval]*/ BSTR * pText ) = 0;
      virtual HRESULT __stdcall put_TimeServer (
        /*[in]*/ BSTR pTimeServerName ) = 0;
      virtual HRESULT __stdcall get_TimeServer (
        /*[out,retval]*/ BSTR * pTimeServerName ) = 0;
};

struct __declspec(uuid("0603026a-dd66-4758-9f2d-6be2c8b4b29a"))
AcadSecurityParams;
    // [ default ] interface IAcadSecurityParams

struct __declspec(uuid("619bee9f-50d5-4bae-9a2b-440c97f95f6e"))
AcadLayerStateManager;
    // [ default ] interface IAcadLayerStateManager

struct __declspec(uuid("d523cb7c-30b6-4a7a-8c2d-79b23b4878a9"))
_DAcadApplicationEvents : IDispatch
{};

struct __declspec(uuid("2ce54bf2-0376-4aa5-ba88-1bff47b1c70d"))
IAcadUtility : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AngleToReal (
        /*[in]*/ BSTR Angle,
        /*[in]*/ enum AcAngleUnits Unit,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall AngleToString (
        /*[in]*/ double Angle,
        /*[in]*/ enum AcAngleUnits Unit,
        /*[in]*/ int precision,
        /*[out,retval]*/ BSTR * bstrValue ) = 0;
      virtual HRESULT __stdcall DistanceToReal (
        /*[in]*/ BSTR Distance,
        /*[in]*/ enum AcUnits Unit,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall RealToString (
        /*[in]*/ double Value,
        /*[in]*/ enum AcUnits Unit,
        /*[in]*/ int precision,
        /*[out,retval]*/ BSTR * bstrValue ) = 0;
      virtual HRESULT __stdcall TranslateCoordinates (
        /*[in]*/ VARIANT Point,
        /*[in]*/ enum AcCoordinateSystem FromCoordSystem,
        /*[in]*/ enum AcCoordinateSystem ToCoordSystem,
        /*[in]*/ int Displacement,
        /*[in]*/ VARIANT OCSNormal,
        /*[out,retval]*/ VARIANT * transPt ) = 0;
      virtual HRESULT __stdcall InitializeUserInput (
        /*[in]*/ int Bits,
        /*[in]*/ VARIANT KeyWordList = vtMissing ) = 0;
      virtual HRESULT __stdcall GetInteger (
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ int * Value ) = 0;
      virtual HRESULT __stdcall GetReal (
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall GetInput (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall GetKeyword (
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ BSTR * bstrKeyword ) = 0;
      virtual HRESULT __stdcall GetString (
        /*[in]*/ int HasSpaces,
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ BSTR * bstrValue ) = 0;
      virtual HRESULT __stdcall GetAngle (
        /*[in]*/ VARIANT Point,
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall AngleFromXAxis (
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall GetCorner (
        /*[in]*/ VARIANT Point,
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ VARIANT * corner ) = 0;
      virtual HRESULT __stdcall GetDistance (
        /*[in]*/ VARIANT Point,
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ double * dist ) = 0;
      virtual HRESULT __stdcall GetOrientation (
        /*[in]*/ VARIANT Point,
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall GetPoint (
        /*[in]*/ VARIANT Point,
        /*[in]*/ VARIANT Prompt,
        /*[out,retval]*/ VARIANT * inputPoint ) = 0;
      virtual HRESULT __stdcall PolarPoint (
        /*[in]*/ VARIANT Point,
        /*[in]*/ double Angle,
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * inputPoint ) = 0;
      virtual HRESULT __stdcall CreateTypedArray (
        /*[out]*/ VARIANT * varArr,
        /*[in]*/ int Type,
        /*[in]*/ SAFEARRAY * inArgs ) = 0;
      virtual HRESULT __stdcall GetEntity (
        /*[out]*/ IDispatch * * Object,
        /*[out]*/ VARIANT * PickedPoint,
        /*[in]*/ VARIANT Prompt = vtMissing ) = 0;
      virtual HRESULT __stdcall Prompt (
        /*[in]*/ BSTR Message ) = 0;
      virtual HRESULT __stdcall GetSubEntity (
        /*[out]*/ IDispatch * * Object,
        /*[out]*/ VARIANT * PickedPoint,
        /*[out]*/ VARIANT * transMatrix,
        /*[out]*/ VARIANT * ContextData,
        /*[in]*/ VARIANT Prompt = vtMissing ) = 0;
      virtual HRESULT __stdcall IsURL (
        /*[in]*/ BSTR URL,
        /*[out,retval]*/ VARIANT_BOOL * IsValidURL ) = 0;
      virtual HRESULT __stdcall GetRemoteFile (
        /*[in]*/ BSTR URL,
        /*[out]*/ BSTR * LocalFile,
        /*[in]*/ VARIANT_BOOL IgnoreCache ) = 0;
      virtual HRESULT __stdcall PutRemoteFile (
        /*[in]*/ BSTR URL,
        /*[in]*/ BSTR LocalFile ) = 0;
      virtual HRESULT __stdcall IsRemoteFile (
        /*[in]*/ BSTR LocalFile,
        /*[out]*/ BSTR * URL,
        /*[out,retval]*/ VARIANT_BOOL * IsDownloadedFile ) = 0;
      virtual HRESULT __stdcall LaunchBrowserDialog (
        /*[out]*/ BSTR * SelectedURL,
        /*[in]*/ BSTR DialogTitle,
        /*[in]*/ BSTR OpenButtonCaption,
        /*[in]*/ BSTR StartPageURL,
        /*[in]*/ BSTR RegistryRootKey,
        /*[in]*/ VARIANT_BOOL OpenButtonAlwaysEnabled,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall SendModelessOperationStart (
        BSTR Context ) = 0;
      virtual HRESULT __stdcall SendModelessOperationEnded (
        BSTR Context ) = 0;
      virtual HRESULT __stdcall GetObjectIdString (
        /*[in]*/ IDispatch * Object,
        /*[in]*/ VARIANT_BOOL bHex,
        /*[out,retval]*/ BSTR * ObjectIdString ) = 0;
};

struct __declspec(uuid("0e96437e-2ff3-4269-b646-9ecec2801104"))
AcadState;
    // [ default ] interface IAcadState

struct __declspec(uuid("9aaf0eb6-42d8-46c1-a2ef-679511b37a0d"))
AcadApplication;
    // [ default ] interface IAcadApplication
    // [ default, source ] dispinterface _DAcadApplicationEvents

struct __declspec(uuid("f74a776c-fd6f-4557-ad00-e78e7ac642ab"))
AcadSelectionSet;
    // [ default ] interface IAcadSelectionSet

struct __declspec(uuid("1d6e89ca-8632-44f2-8a96-f8014e58669b"))
AcadSelectionSets;
    // [ default ] interface IAcadSelectionSets

struct __declspec(uuid("dd5c71f1-3da4-4572-9a62-0732cd9868b9"))
AcadPlot;
    // [ default ] interface IAcadPlot

struct __declspec(uuid("d927173f-16e1-4bfa-90f1-f7e3c347cc87"))
AcadPreferences;
    // [ default ] interface IAcadPreferences

struct __declspec(uuid("9ac42ff5-bdd1-4f8c-8f47-9d71847143d0"))
AcadPreferencesDrafting;
    // [ default ] interface IAcadPreferencesDrafting

struct __declspec(uuid("d3adb94c-c51c-41ed-90b1-8ed75b9906a2"))
AcadPreferencesDisplay;
    // [ default ] interface IAcadPreferencesDisplay

struct __declspec(uuid("bc0436ef-ff41-40fe-86d6-8b065b8d7959"))
AcadPreferencesFiles;
    // [ default ] interface IAcadPreferencesFiles

struct __declspec(uuid("5640bd23-2caf-4637-8394-b0b82915be01"))
AcadPreferencesOpenSave;
    // [ default ] interface IAcadPreferencesOpenSave

struct __declspec(uuid("6a15d096-4f73-4cea-b08d-200a851d4092"))
AcadPreferencesOutput;
    // [ default ] interface IAcadPreferencesOutput

struct __declspec(uuid("936c9608-9843-42f0-b791-f55ab31648b7"))
AcadPreferencesProfiles;
    // [ default ] interface IAcadPreferencesProfiles

struct __declspec(uuid("6b391a7e-3bea-4f33-977b-c091b6d91439"))
AcadPreferencesSelection;
    // [ default ] interface IAcadPreferencesSelection

struct __declspec(uuid("623c3614-7401-4a89-ab74-8922dbaa259d"))
AcadPreferencesSystem;
    // [ default ] interface IAcadPreferencesSystem

struct __declspec(uuid("8e54a093-2176-401b-9ebb-af874dd013b5"))
AcadPreferencesUser;
    // [ default ] interface IAcadPreferencesUser

struct __declspec(uuid("4db714a5-5f58-4872-bb4a-69ee0d285d66"))
AcadMenuGroups;
    // [ default ] interface IAcadMenuGroups

struct __declspec(uuid("8075e929-1ff1-4d5d-bd6b-6fe3b849f906"))
AcadMenuGroup;
    // [ default ] interface IAcadMenuGroup

struct __declspec(uuid("30872ee1-93c6-4a80-9ca1-8064bae240db"))
AcadMenuBar;
    // [ default ] interface IAcadMenuBar

struct __declspec(uuid("2dcc7dd1-dde3-4199-91ba-69c3721f6cf0"))
AcadPopupMenus;
    // [ default ] interface IAcadPopupMenus

struct __declspec(uuid("f6e25e03-b9ae-4a88-841b-edfd9c75aa5b"))
AcadPopupMenu;
    // [ default ] interface IAcadPopupMenu

struct __declspec(uuid("b52bd1ce-b63c-4b80-94c9-d2b2b779c5ce"))
AcadPopupMenuItem;
    // [ default ] interface IAcadPopupMenuItem

struct __declspec(uuid("2211978f-48ae-4293-aaea-88ce6ad00d28"))
AcadUtility;
    // [ default ] interface IAcadUtility

struct __declspec(uuid("e701e4a8-5e93-49a3-8a5b-6927dd322bd6"))
_DAcadDocumentEvents : IDispatch
{};

struct __declspec(uuid("b6eb585b-b467-4e46-a9c7-48d7d6fd26cb"))
AcadDocument;
    // [ default ] interface IAcadDocument
    // [ default, source ] dispinterface _DAcadDocumentEvents

struct __declspec(uuid("2cc4c41c-e9d1-4650-8166-b7ad86b8fabc"))
AcadDocuments;
    // [ default ] interface IAcadDocuments

struct __declspec(uuid("196dbede-b2d9-466c-86bf-ab955f3defb3"))
AcadToolbars;
    // [ default ] interface IAcadToolbars

struct __declspec(uuid("0235fb3a-89f6-403b-91f3-743a16808257"))
AcadToolbar;
    // [ default ] interface IAcadToolbar

struct __declspec(uuid("b5ab7be5-3aee-486d-8e7d-cf9abfc0c08d"))
AcadToolbarItem;
    // [ default ] interface IAcadToolbarItem

struct __declspec(uuid("aeb8d2e2-b3e1-499b-a357-7b3f51cec147"))
IAcadObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Handle (
        /*[out,retval]*/ BSTR * Handle ) = 0;
      virtual HRESULT __stdcall get_ObjectName (
        /*[out,retval]*/ BSTR * ObjectName ) = 0;
      virtual HRESULT __stdcall GetXData (
        /*[in]*/ BSTR AppName,
        /*[out]*/ VARIANT * XDataType,
        /*[out]*/ VARIANT * XDataValue ) = 0;
      virtual HRESULT __stdcall SetXData (
        /*[in]*/ VARIANT XDataType,
        /*[in]*/ VARIANT XDataValue ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_ObjectID (
        /*[out,retval]*/ LONG_PTR * ObjectID ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * ApplicationObject ) = 0;
      virtual HRESULT __stdcall get_Database (
        /*[out,retval]*/ struct IAcadDatabase * * pDatabase ) = 0;
      virtual HRESULT __stdcall get_HasExtensionDictionary (
        /*[out,retval]*/ VARIANT_BOOL * bHasDictionary ) = 0;
      virtual HRESULT __stdcall GetExtensionDictionary (
        /*[out,retval]*/ struct IAcadDictionary * * pExtDictionary ) = 0;
      virtual HRESULT __stdcall get_OwnerID (
        /*[out,retval]*/ LONG_PTR * OwnerID ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * pDocument ) = 0;
      virtual HRESULT __stdcall Erase ( ) = 0;
};

struct __declspec(uuid("acf0aa82-ffec-402b-9b87-1568f6c24f82"))
IAcadEntity : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TrueColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_TrueColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_LinetypeScale (
        /*[out,retval]*/ ACAD_NOUNITS * ltScale ) = 0;
      virtual HRESULT __stdcall put_LinetypeScale (
        /*[in]*/ ACAD_NOUNITS ltScale ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall ArrayPolar (
        /*[in]*/ int NumberOfObjects,
        /*[in]*/ double AngleToFill,
        /*[in]*/ VARIANT CenterPoint,
        /*[out,retval]*/ VARIANT * pArrayObjs ) = 0;
      virtual HRESULT __stdcall ArrayRectangular (
        /*[in]*/ int NumberOfRows,
        /*[in]*/ int NumberOfColumns,
        /*[in]*/ int NumberOfLevels,
        /*[in]*/ double DistBetweenRows,
        /*[in]*/ double DistBetweenCols,
        /*[in]*/ double DistBetweenLevels,
        /*[out,retval]*/ VARIANT * pArrayObjs ) = 0;
      virtual HRESULT __stdcall Highlight (
        /*[in]*/ VARIANT_BOOL HighlightFlag ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ IDispatch * * pCopyObj ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ VARIANT FromPoint,
        /*[in]*/ VARIANT ToPoint ) = 0;
      virtual HRESULT __stdcall Rotate (
        /*[in]*/ VARIANT BasePoint,
        /*[in]*/ double RotationAngle ) = 0;
      virtual HRESULT __stdcall Rotate3D (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[in]*/ double RotationAngle ) = 0;
      virtual HRESULT __stdcall Mirror (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[out,retval]*/ IDispatch * * pMirrorObj ) = 0;
      virtual HRESULT __stdcall Mirror3D (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[in]*/ VARIANT point3,
        /*[out,retval]*/ IDispatch * * pMirrorObj ) = 0;
      virtual HRESULT __stdcall ScaleEntity (
        /*[in]*/ VARIANT BasePoint,
        /*[in]*/ double ScaleFactor ) = 0;
      virtual HRESULT __stdcall TransformBy (
        /*[in]*/ VARIANT TransformationMatrix ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall GetBoundingBox (
        /*[out]*/ VARIANT * MinPoint,
        /*[out]*/ VARIANT * MaxPoint ) = 0;
      virtual HRESULT __stdcall IntersectWith (
        /*[in]*/ IDispatch * IntersectObject,
        /*[in]*/ enum AcExtendOption option,
        /*[out,retval]*/ VARIANT * intPoints ) = 0;
      virtual HRESULT __stdcall get_PlotStyleName (
        /*[out,retval]*/ BSTR * plotStyle ) = 0;
      virtual HRESULT __stdcall put_PlotStyleName (
        /*[in]*/ BSTR plotStyle ) = 0;
      virtual HRESULT __stdcall get_Lineweight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_Lineweight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall get_EntityTransparency (
        /*[out,retval]*/ BSTR * transparency ) = 0;
      virtual HRESULT __stdcall put_EntityTransparency (
        /*[in]*/ BSTR transparency ) = 0;
      virtual HRESULT __stdcall get_Hyperlinks (
        /*[out,retval]*/ struct IAcadHyperlinks * * Hyperlinks ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR Material ) = 0;
      virtual HRESULT __stdcall get_EntityName (
        /*[out,retval]*/ BSTR * EntityName ) = 0;
      virtual HRESULT __stdcall get_EntityType (
        /*[out,retval]*/ long * entType ) = 0;
      virtual HRESULT __stdcall get_color (
        /*[out,retval]*/ ACAD_COLOR * color ) = 0;
      virtual HRESULT __stdcall put_color (
        /*[in]*/ ACAD_COLOR color ) = 0;
};

struct __declspec(uuid("1759387a-60a3-41e5-a8c5-90a082b32bb2"))
IAcad3DFace : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * corners ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT corners ) = 0;
      virtual HRESULT __stdcall get_VisibilityEdge1 (
        /*[out,retval]*/ VARIANT_BOOL * visibility ) = 0;
      virtual HRESULT __stdcall put_VisibilityEdge1 (
        /*[in]*/ VARIANT_BOOL visibility ) = 0;
      virtual HRESULT __stdcall get_VisibilityEdge2 (
        /*[out,retval]*/ VARIANT_BOOL * visibility ) = 0;
      virtual HRESULT __stdcall put_VisibilityEdge2 (
        /*[in]*/ VARIANT_BOOL visibility ) = 0;
      virtual HRESULT __stdcall get_VisibilityEdge3 (
        /*[out,retval]*/ VARIANT_BOOL * visibility ) = 0;
      virtual HRESULT __stdcall put_VisibilityEdge3 (
        /*[in]*/ VARIANT_BOOL visibility ) = 0;
      virtual HRESULT __stdcall get_VisibilityEdge4 (
        /*[out,retval]*/ VARIANT_BOOL * visibility ) = 0;
      virtual HRESULT __stdcall put_VisibilityEdge4 (
        /*[in]*/ VARIANT_BOOL visibility ) = 0;
      virtual HRESULT __stdcall GetInvisibleEdge (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall SetInvisibleEdge (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("039b9382-f2e7-4ab6-9461-cf2e763e7a57"))
IAcadPolygonMesh : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * Coordinates ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT Coordinates ) = 0;
      virtual HRESULT __stdcall get_MClose (
        /*[out,retval]*/ VARIANT_BOOL * bClose ) = 0;
      virtual HRESULT __stdcall put_MClose (
        /*[in]*/ VARIANT_BOOL bClose ) = 0;
      virtual HRESULT __stdcall get_NClose (
        /*[out,retval]*/ VARIANT_BOOL * bClose ) = 0;
      virtual HRESULT __stdcall put_NClose (
        /*[in]*/ VARIANT_BOOL bClose ) = 0;
      virtual HRESULT __stdcall get_MDensity (
        /*[out,retval]*/ long * density ) = 0;
      virtual HRESULT __stdcall put_MDensity (
        /*[in]*/ long density ) = 0;
      virtual HRESULT __stdcall get_NDensity (
        /*[out,retval]*/ long * density ) = 0;
      virtual HRESULT __stdcall put_NDensity (
        /*[in]*/ long density ) = 0;
      virtual HRESULT __stdcall get_MVertexCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_NVertexCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AcPolymeshType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum AcPolymeshType Type ) = 0;
      virtual HRESULT __stdcall AppendVertex (
        /*[in]*/ VARIANT vertex ) = 0;
      virtual HRESULT __stdcall Explode (
        /*[out,retval]*/ VARIANT * pArrayObjs ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("4fee5511-1bd7-4ec7-9027-a9113a016345"))
IAcad3DPolyline : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * Coordinates ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT Coordinates ) = 0;
      virtual HRESULT __stdcall AppendVertex (
        /*[in]*/ VARIANT vertex ) = 0;
      virtual HRESULT __stdcall Explode (
        /*[out,retval]*/ VARIANT * pArrayObjs ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Ac3DPolylineType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Ac3DPolylineType Type ) = 0;
      virtual HRESULT __stdcall get_Closed (
        /*[out,retval]*/ VARIANT_BOOL * fClose ) = 0;
      virtual HRESULT __stdcall put_Closed (
        /*[in]*/ VARIANT_BOOL fClose ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
};

struct __declspec(uuid("64dc9029-fd27-48de-85b8-a471f654c20b"))
IAcadArc : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StartPoint (
        /*[out,retval]*/ VARIANT * StartPoint ) = 0;
      virtual HRESULT __stdcall get_Center (
        /*[out,retval]*/ VARIANT * CenterPoint ) = 0;
      virtual HRESULT __stdcall put_Center (
        /*[in]*/ VARIANT CenterPoint ) = 0;
      virtual HRESULT __stdcall get_EndPoint (
        /*[out,retval]*/ VARIANT * EndPoint ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_StartAngle (
        /*[out,retval]*/ ACAD_ANGLE * Angle ) = 0;
      virtual HRESULT __stdcall put_StartAngle (
        /*[in]*/ ACAD_ANGLE Angle ) = 0;
      virtual HRESULT __stdcall get_EndAngle (
        /*[out,retval]*/ ACAD_ANGLE * Angle ) = 0;
      virtual HRESULT __stdcall put_EndAngle (
        /*[in]*/ ACAD_ANGLE Angle ) = 0;
      virtual HRESULT __stdcall get_TotalAngle (
        /*[out,retval]*/ ACAD_ANGLE * TotalAngle ) = 0;
      virtual HRESULT __stdcall get_ArcLength (
        /*[out,retval]*/ ACAD_DISTANCE * ArcLength ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall Offset (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * pOffsetCurves ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
};

struct __declspec(uuid("99b991ad-2222-48dd-be16-59e40d03b561"))
IAcadAttribute : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FieldLength (
        /*[out,retval]*/ long * fieldLen ) = 0;
      virtual HRESULT __stdcall put_FieldLength (
        /*[in]*/ long fieldLen ) = 0;
      virtual HRESULT __stdcall get_TagString (
        /*[out,retval]*/ BSTR * Tag ) = 0;
      virtual HRESULT __stdcall put_TagString (
        /*[in]*/ BSTR Tag ) = 0;
      virtual HRESULT __stdcall get_PromptString (
        /*[out,retval]*/ BSTR * bstrPrompt ) = 0;
      virtual HRESULT __stdcall put_PromptString (
        /*[in]*/ BSTR bstrPrompt ) = 0;
      virtual HRESULT __stdcall get_TextString (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
      virtual HRESULT __stdcall put_TextString (
        /*[in]*/ BSTR bstrText ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum AcAlignment * align ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum AcAlignment align ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ enum AcHorizontalAlignment * horizAlign ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ enum AcHorizontalAlignment horizAlign ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum AcVerticalAlignment * vertiAlign ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum AcVerticalAlignment vertiAlign ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * scalFactor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS scalFactor ) = 0;
      virtual HRESULT __stdcall get_ObliqueAngle (
        /*[out,retval]*/ ACAD_ANGLE * obliAngle ) = 0;
      virtual HRESULT __stdcall put_ObliqueAngle (
        /*[in]*/ ACAD_ANGLE obliAngle ) = 0;
      virtual HRESULT __stdcall get_TextAlignmentPoint (
        /*[out,retval]*/ VARIANT * alignPoint ) = 0;
      virtual HRESULT __stdcall put_TextAlignmentPoint (
        /*[in]*/ VARIANT alignPoint ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_TextGenerationFlag (
        /*[out,retval]*/ long * textGenFlag ) = 0;
      virtual HRESULT __stdcall put_TextGenerationFlag (
        /*[in]*/ long textGenFlag ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ long * Mode ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ long Mode ) = 0;
      virtual HRESULT __stdcall get_UpsideDown (
        /*[out,retval]*/ VARIANT_BOOL * bUpsideDown ) = 0;
      virtual HRESULT __stdcall put_UpsideDown (
        /*[in]*/ VARIANT_BOOL bUpsideDown ) = 0;
      virtual HRESULT __stdcall get_Backward (
        /*[out,retval]*/ VARIANT_BOOL * bBackward ) = 0;
      virtual HRESULT __stdcall put_Backward (
        /*[in]*/ VARIANT_BOOL bBackward ) = 0;
      virtual HRESULT __stdcall get_Invisible (
        /*[out,retval]*/ VARIANT_BOOL * bInvisible ) = 0;
      virtual HRESULT __stdcall put_Invisible (
        /*[in]*/ VARIANT_BOOL bInvisible ) = 0;
      virtual HRESULT __stdcall get_Constant (
        /*[out,retval]*/ VARIANT_BOOL * bConstant ) = 0;
      virtual HRESULT __stdcall put_Constant (
        /*[in]*/ VARIANT_BOOL bConstant ) = 0;
      virtual HRESULT __stdcall get_Verify (
        /*[out,retval]*/ VARIANT_BOOL * bVerify ) = 0;
      virtual HRESULT __stdcall put_Verify (
        /*[in]*/ VARIANT_BOOL bVerify ) = 0;
      virtual HRESULT __stdcall get_Preset (
        /*[out,retval]*/ VARIANT_BOOL * bPreset ) = 0;
      virtual HRESULT __stdcall put_Preset (
        /*[in]*/ VARIANT_BOOL bPreset ) = 0;
      virtual HRESULT __stdcall get_LockPosition (
        /*[out,retval]*/ VARIANT_BOOL * bLockPosition ) = 0;
      virtual HRESULT __stdcall put_LockPosition (
        /*[in]*/ VARIANT_BOOL bLockPosition ) = 0;
      virtual HRESULT __stdcall get_MTextAttribute (
        /*[out,retval]*/ VARIANT_BOOL * bMTextAttribute ) = 0;
      virtual HRESULT __stdcall put_MTextAttribute (
        /*[in]*/ VARIANT_BOOL bMTextAttribute ) = 0;
      virtual HRESULT __stdcall get_MTextAttributeContent (
        /*[out,retval]*/ BSTR * content ) = 0;
      virtual HRESULT __stdcall put_MTextAttributeContent (
        /*[in]*/ BSTR content ) = 0;
      virtual HRESULT __stdcall UpdateMTextAttribute ( ) = 0;
      virtual HRESULT __stdcall get_MTextBoundaryWidth (
        /*[out,retval]*/ double * boundaryWidth ) = 0;
      virtual HRESULT __stdcall put_MTextBoundaryWidth (
        double boundaryWidth ) = 0;
      virtual HRESULT __stdcall get_MTextDrawingDirection (
        /*[out,retval]*/ enum AcDrawingDirection * drawDir ) = 0;
      virtual HRESULT __stdcall put_MTextDrawingDirection (
        /*[in]*/ enum AcDrawingDirection drawDir ) = 0;
};

struct __declspec(uuid("60f904e0-3634-4cc3-b4cd-b15940063bf1"))
IAcadRegion : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall get_Centroid (
        /*[out,retval]*/ VARIANT * Centroid ) = 0;
      virtual HRESULT __stdcall get_MomentOfInertia (
        /*[out,retval]*/ VARIANT * momentInertia ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall get_Perimeter (
        /*[out,retval]*/ double * Perimeter ) = 0;
      virtual HRESULT __stdcall get_PrincipalDirections (
        /*[out,retval]*/ VARIANT * prinDir ) = 0;
      virtual HRESULT __stdcall get_PrincipalMoments (
        /*[out,retval]*/ VARIANT * prinMoments ) = 0;
      virtual HRESULT __stdcall get_ProductOfInertia (
        /*[out,retval]*/ double * prodInertia ) = 0;
      virtual HRESULT __stdcall get_RadiiOfGyration (
        /*[out,retval]*/ VARIANT * radiiGyration ) = 0;
      virtual HRESULT __stdcall Boolean (
        /*[in]*/ enum AcBooleanType Operation,
        /*[in]*/ struct IAcadRegion * Object ) = 0;
      virtual HRESULT __stdcall Explode (
        /*[out,retval]*/ VARIANT * pArrayObjs ) = 0;
};

struct __declspec(uuid("9af5dc27-d177-4810-b524-a63c9f5993c2"))
IAcad3DSolid : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Centroid (
        /*[out,retval]*/ VARIANT * Centroid ) = 0;
      virtual HRESULT __stdcall get_MomentOfInertia (
        /*[out,retval]*/ VARIANT * momentInertia ) = 0;
      virtual HRESULT __stdcall get_PrincipalDirections (
        /*[out,retval]*/ VARIANT * prinDir ) = 0;
      virtual HRESULT __stdcall get_PrincipalMoments (
        /*[out,retval]*/ VARIANT * prinMoments ) = 0;
      virtual HRESULT __stdcall get_ProductOfInertia (
        /*[out,retval]*/ VARIANT * prodInertia ) = 0;
      virtual HRESULT __stdcall get_RadiiOfGyration (
        /*[out,retval]*/ VARIANT * radiiGyration ) = 0;
      virtual HRESULT __stdcall get_Volume (
        /*[out,retval]*/ double * Volume ) = 0;
      virtual HRESULT __stdcall Boolean (
        /*[in]*/ enum AcBooleanType Operation,
        /*[in]*/ struct IAcad3DSolid * SolidObject ) = 0;
      virtual HRESULT __stdcall CheckInterference (
        /*[in]*/ struct IAcad3DSolid * Object,
        /*[in]*/ VARIANT_BOOL CreateInterferenceSolid,
        /*[out]*/ VARIANT_BOOL * SolidsInterfere,
        /*[out,retval]*/ struct IAcad3DSolid * * pIntSolid ) = 0;
      virtual HRESULT __stdcall SectionSolid (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[in]*/ VARIANT point3,
        /*[out,retval]*/ struct IAcadRegion * * pRegion ) = 0;
      virtual HRESULT __stdcall SliceSolid (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[in]*/ VARIANT point3,
        /*[in]*/ VARIANT_BOOL Negative,
        /*[out,retval]*/ struct IAcad3DSolid * * pNegSideSolid ) = 0;
      virtual HRESULT __stdcall get_SolidType (
        /*[out,retval]*/ BSTR * SolidType ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ VARIANT * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ VARIANT Position ) = 0;
      virtual HRESULT __stdcall get_History (
        /*[out,retval]*/ VARIANT_BOOL * bHistory ) = 0;
      virtual HRESULT __stdcall put_History (
        /*[in]*/ VARIANT_BOOL bHistory ) = 0;
      virtual HRESULT __stdcall get_ShowHistory (
        /*[out,retval]*/ VARIANT_BOOL * Position ) = 0;
      virtual HRESULT __stdcall put_ShowHistory (
        /*[in]*/ VARIANT_BOOL Position ) = 0;
};

struct __declspec(uuid("4a749d26-4d00-4ea1-a121-a457c30e6f57"))
IAcadCircle : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Center (
        /*[out,retval]*/ VARIANT * CenterPoint ) = 0;
      virtual HRESULT __stdcall put_Center (
        /*[in]*/ VARIANT CenterPoint ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_Circumference (
        /*[out,retval]*/ double * Circumference ) = 0;
      virtual HRESULT __stdcall put_Circumference (
        /*[in]*/ double Circumference ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall put_Area (
        /*[in]*/ double Area ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall Offset (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * pOffsetCurves ) = 0;
};

struct __declspec(uuid("397baf06-05cd-44dd-a56a-11784c4fb7b5"))
IAcadDimension : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_TextPosition (
        /*[out,retval]*/ VARIANT * textPos ) = 0;
      virtual HRESULT __stdcall put_TextPosition (
        /*[in]*/ VARIANT textPos ) = 0;
      virtual HRESULT __stdcall get_TextRotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_TextRotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_TextOverride (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
      virtual HRESULT __stdcall put_TextOverride (
        /*[in]*/ BSTR bstrText ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ ACAD_COLOR * color ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ ACAD_COLOR color ) = 0;
      virtual HRESULT __stdcall get_DecimalSeparator (
        /*[out,retval]*/ BSTR * character ) = 0;
      virtual HRESULT __stdcall put_DecimalSeparator (
        /*[in]*/ BSTR character ) = 0;
      virtual HRESULT __stdcall get_TextGap (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_TextGap (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_TextPrefix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_TextPrefix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_TextSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_TextSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * factor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS factor ) = 0;
      virtual HRESULT __stdcall get_VerticalTextPosition (
        /*[out,retval]*/ enum AcDimVerticalJustification * Type ) = 0;
      virtual HRESULT __stdcall put_VerticalTextPosition (
        /*[in]*/ enum AcDimVerticalJustification Type ) = 0;
      virtual HRESULT __stdcall get_TolerancePrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_TolerancePrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_ToleranceHeightScale (
        /*[out,retval]*/ ACAD_NOUNITS * scale ) = 0;
      virtual HRESULT __stdcall put_ToleranceHeightScale (
        /*[in]*/ ACAD_NOUNITS scale ) = 0;
      virtual HRESULT __stdcall get_ToleranceLowerLimit (
        /*[out,retval]*/ double * lower ) = 0;
      virtual HRESULT __stdcall put_ToleranceLowerLimit (
        /*[in]*/ double lower ) = 0;
      virtual HRESULT __stdcall get_TextMovement (
        /*[out,retval]*/ enum AcDimTextMovement * Move ) = 0;
      virtual HRESULT __stdcall put_TextMovement (
        /*[in]*/ enum AcDimTextMovement Move ) = 0;
      virtual HRESULT __stdcall get_ToleranceDisplay (
        /*[out,retval]*/ enum AcDimToleranceMethod * method ) = 0;
      virtual HRESULT __stdcall put_ToleranceDisplay (
        /*[in]*/ enum AcDimToleranceMethod method ) = 0;
      virtual HRESULT __stdcall get_ToleranceJustification (
        /*[out,retval]*/ enum AcDimToleranceJustify * method ) = 0;
      virtual HRESULT __stdcall put_ToleranceJustification (
        /*[in]*/ enum AcDimToleranceJustify method ) = 0;
      virtual HRESULT __stdcall get_ToleranceUpperLimit (
        /*[out,retval]*/ double * upper ) = 0;
      virtual HRESULT __stdcall put_ToleranceUpperLimit (
        /*[in]*/ double upper ) = 0;
      virtual HRESULT __stdcall get_TextStyle (
        /*[out,retval]*/ BSTR * style ) = 0;
      virtual HRESULT __stdcall put_TextStyle (
        /*[in]*/ BSTR style ) = 0;
      virtual HRESULT __stdcall get_TextHeight (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_TextHeight (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_SuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_TextFill (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_TextFill (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_TextFillColor (
        /*[out,retval]*/ ACAD_COLOR * color ) = 0;
      virtual HRESULT __stdcall put_TextFillColor (
        /*[in]*/ ACAD_COLOR color ) = 0;
      virtual HRESULT __stdcall get_DimTxtDirection (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_DimTxtDirection (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
};

struct __declspec(uuid("52729d26-9908-469d-a87c-b331059b94ea"))
IAcadDimAligned : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ExtLine1Point (
        /*[out,retval]*/ VARIANT * xLine1Point ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Point (
        /*[in]*/ VARIANT xLine1Point ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Point (
        /*[out,retval]*/ VARIANT * xLine2Point ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Point (
        /*[in]*/ VARIANT xLine2Point ) = 0;
      virtual HRESULT __stdcall get_AltUnits (
        /*[out,retval]*/ VARIANT_BOOL * bAlternate ) = 0;
      virtual HRESULT __stdcall put_AltUnits (
        /*[in]*/ VARIANT_BOOL bAlternate ) = 0;
      virtual HRESULT __stdcall get_AltUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_AltUnitsPrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_AltUnitsScale (
        /*[out,retval]*/ ACAD_NOUNITS * scale ) = 0;
      virtual HRESULT __stdcall put_AltUnitsScale (
        /*[in]*/ ACAD_NOUNITS scale ) = 0;
      virtual HRESULT __stdcall get_AltRoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_AltRoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_AltTolerancePrecision (
        /*[out,retval]*/ enum AcDimPrecision * Distance ) = 0;
      virtual HRESULT __stdcall put_AltTolerancePrecision (
        /*[in]*/ enum AcDimPrecision Distance ) = 0;
      virtual HRESULT __stdcall get_AltUnitsFormat (
        /*[out,retval]*/ enum AcDimUnits * Units ) = 0;
      virtual HRESULT __stdcall put_AltUnitsFormat (
        /*[in]*/ enum AcDimUnits Units ) = 0;
      virtual HRESULT __stdcall get_AltTextPrefix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextPrefix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_AltTextSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_AltTextSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * color ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR color ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * color ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineColor (
        /*[in]*/ ACAD_COLOR color ) = 0;
      virtual HRESULT __stdcall get_PrimaryUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * Prec ) = 0;
      virtual HRESULT __stdcall put_PrimaryUnitsPrecision (
        /*[in]*/ enum AcDimPrecision Prec ) = 0;
      virtual HRESULT __stdcall get_DimensionLineExtend (
        /*[out,retval]*/ double * extend ) = 0;
      virtual HRESULT __stdcall put_DimensionLineExtend (
        /*[in]*/ double extend ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineExtend (
        /*[out,retval]*/ double * extend ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineExtend (
        /*[in]*/ double extend ) = 0;
      virtual HRESULT __stdcall get_Fit (
        /*[out,retval]*/ enum AcDimFit * fittype ) = 0;
      virtual HRESULT __stdcall put_Fit (
        /*[in]*/ enum AcDimFit fittype ) = 0;
      virtual HRESULT __stdcall get_FractionFormat (
        /*[out,retval]*/ enum AcDimFractionType * Type ) = 0;
      virtual HRESULT __stdcall put_FractionFormat (
        /*[in]*/ enum AcDimFractionType Type ) = 0;
      virtual HRESULT __stdcall get_HorizontalTextPosition (
        /*[out,retval]*/ enum AcDimHorizontalJustification * Type ) = 0;
      virtual HRESULT __stdcall put_HorizontalTextPosition (
        /*[in]*/ enum AcDimHorizontalJustification Type ) = 0;
      virtual HRESULT __stdcall get_LinearScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * Type ) = 0;
      virtual HRESULT __stdcall put_LinearScaleFactor (
        /*[in]*/ ACAD_NOUNITS Type ) = 0;
      virtual HRESULT __stdcall get_UnitsFormat (
        /*[out,retval]*/ enum AcDimLUnits * format ) = 0;
      virtual HRESULT __stdcall put_UnitsFormat (
        /*[in]*/ enum AcDimLUnits format ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * lweight ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT lweight ) = 0;
      virtual HRESULT __stdcall get_RoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_RoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_DimLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_DimLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ForceLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_ForceLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextOutsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextOutsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_AltSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ double * bVal ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_DimensionLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_DimensionLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLenSuppress (
        /*[out,retval]*/ VARIANT_BOOL * bFixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLenSuppress (
        /*[in]*/ VARIANT_BOOL bFixedLen ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLen (
        /*[out,retval]*/ double * FixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLen (
        /*[in]*/ double FixedLen ) = 0;
      virtual HRESULT __stdcall get_DimConstrForm (
        /*[out,retval]*/ VARIANT_BOOL * bIsDynamic ) = 0;
      virtual HRESULT __stdcall put_DimConstrForm (
        /*[in]*/ VARIANT_BOOL bIsDynamic ) = 0;
      virtual HRESULT __stdcall get_DimConstrReference (
        /*[out,retval]*/ VARIANT_BOOL * bIsReference ) = 0;
      virtual HRESULT __stdcall put_DimConstrReference (
        /*[in]*/ VARIANT_BOOL bIsReference ) = 0;
      virtual HRESULT __stdcall get_DimConstrName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_DimConstrName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_DimConstrExpression (
        /*[out,retval]*/ BSTR * bstrExpression ) = 0;
      virtual HRESULT __stdcall put_DimConstrExpression (
        /*[in]*/ BSTR bstrExpression ) = 0;
      virtual HRESULT __stdcall get_DimConstrValue (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_DimConstrValue (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DimConstrDesc (
        /*[out,retval]*/ BSTR * bstrDescription ) = 0;
      virtual HRESULT __stdcall put_DimConstrDesc (
        /*[in]*/ BSTR bstrDescription ) = 0;
      virtual HRESULT __stdcall get_SubUnitsSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_SubUnitsSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_SubUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_SubUnitsFactor (
        /*[in]*/ double factor ) = 0;
      virtual HRESULT __stdcall get_AltSubUnitsSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_AltSubUnitsSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_AltSubUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_AltSubUnitsFactor (
        /*[in]*/ double factor ) = 0;
};

struct __declspec(uuid("eb3c91ca-7d5a-42cd-92dc-6a78c50b2edb"))
IAcadDimAngular : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ExtLine1StartPoint (
        /*[out,retval]*/ VARIANT * xLine1Point ) = 0;
      virtual HRESULT __stdcall put_ExtLine1StartPoint (
        /*[in]*/ VARIANT xLine1Point ) = 0;
      virtual HRESULT __stdcall get_ExtLine1EndPoint (
        /*[out,retval]*/ VARIANT * xLine1Point ) = 0;
      virtual HRESULT __stdcall put_ExtLine1EndPoint (
        /*[in]*/ VARIANT xLine1Point ) = 0;
      virtual HRESULT __stdcall get_ExtLine2StartPoint (
        /*[out,retval]*/ VARIANT * xLine2Point ) = 0;
      virtual HRESULT __stdcall put_ExtLine2StartPoint (
        /*[in]*/ VARIANT xLine2Point ) = 0;
      virtual HRESULT __stdcall get_ExtLine2EndPoint (
        /*[out,retval]*/ VARIANT * xLine2Point ) = 0;
      virtual HRESULT __stdcall put_ExtLine2EndPoint (
        /*[in]*/ VARIANT xLine2Point ) = 0;
      virtual HRESULT __stdcall get_AngleFormat (
        /*[out,retval]*/ enum AcAngleUnits * format ) = 0;
      virtual HRESULT __stdcall put_AngleFormat (
        /*[in]*/ enum AcAngleUnits format ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineExtend (
        /*[out,retval]*/ double * extend ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineExtend (
        /*[in]*/ double extend ) = 0;
      virtual HRESULT __stdcall get_Fit (
        /*[out,retval]*/ enum AcDimFit * fittype ) = 0;
      virtual HRESULT __stdcall put_Fit (
        /*[in]*/ enum AcDimFit fittype ) = 0;
      virtual HRESULT __stdcall get_HorizontalTextPosition (
        /*[out,retval]*/ enum AcDimHorizontalJustification * Type ) = 0;
      virtual HRESULT __stdcall put_HorizontalTextPosition (
        /*[in]*/ enum AcDimHorizontalJustification Type ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * lweight ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT lweight ) = 0;
      virtual HRESULT __stdcall get_DimLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_DimLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ForceLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_ForceLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextOutsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextOutsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextPrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_TextPrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ ACAD_ANGLE * bVal ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_DimensionLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_DimensionLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLenSuppress (
        /*[out,retval]*/ VARIANT_BOOL * bFixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLenSuppress (
        /*[in]*/ VARIANT_BOOL bFixedLen ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLen (
        /*[out,retval]*/ double * FixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLen (
        /*[in]*/ double FixedLen ) = 0;
      virtual HRESULT __stdcall get_DimConstrForm (
        /*[out,retval]*/ VARIANT_BOOL * bIsDynamic ) = 0;
      virtual HRESULT __stdcall put_DimConstrForm (
        /*[in]*/ VARIANT_BOOL bIsDynamic ) = 0;
      virtual HRESULT __stdcall get_DimConstrReference (
        /*[out,retval]*/ VARIANT_BOOL * bIsReference ) = 0;
      virtual HRESULT __stdcall put_DimConstrReference (
        /*[in]*/ VARIANT_BOOL bIsReference ) = 0;
      virtual HRESULT __stdcall get_DimConstrName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_DimConstrName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_DimConstrExpression (
        /*[out,retval]*/ BSTR * bstrExpression ) = 0;
      virtual HRESULT __stdcall put_DimConstrExpression (
        /*[in]*/ BSTR bstrExpression ) = 0;
      virtual HRESULT __stdcall get_DimConstrValue (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_DimConstrValue (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DimConstrDesc (
        /*[out,retval]*/ BSTR * bstrDescription ) = 0;
      virtual HRESULT __stdcall put_DimConstrDesc (
        /*[in]*/ BSTR bstrDescription ) = 0;
};

struct __declspec(uuid("896feaf5-0ad9-4414-aac8-0a1ae672ac83"))
IAcadDimDiametric : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_LeaderLength (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall get_AltUnits (
        /*[out,retval]*/ VARIANT_BOOL * bAlternate ) = 0;
      virtual HRESULT __stdcall put_AltUnits (
        /*[in]*/ VARIANT_BOOL bAlternate ) = 0;
      virtual HRESULT __stdcall get_AltUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_AltUnitsPrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_AltUnitsScale (
        /*[out,retval]*/ ACAD_NOUNITS * scale ) = 0;
      virtual HRESULT __stdcall put_AltUnitsScale (
        /*[in]*/ ACAD_NOUNITS scale ) = 0;
      virtual HRESULT __stdcall get_AltRoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_AltRoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_AltTolerancePrecision (
        /*[out,retval]*/ enum AcDimPrecision * Distance ) = 0;
      virtual HRESULT __stdcall put_AltTolerancePrecision (
        /*[in]*/ enum AcDimPrecision Distance ) = 0;
      virtual HRESULT __stdcall get_AltUnitsFormat (
        /*[out,retval]*/ enum AcDimUnits * Units ) = 0;
      virtual HRESULT __stdcall put_AltUnitsFormat (
        /*[in]*/ enum AcDimUnits Units ) = 0;
      virtual HRESULT __stdcall get_AltTextPrefix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextPrefix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_AltTextSuffix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextSuffix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_PrimaryUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * Prec ) = 0;
      virtual HRESULT __stdcall put_PrimaryUnitsPrecision (
        /*[in]*/ enum AcDimPrecision Prec ) = 0;
      virtual HRESULT __stdcall get_FractionFormat (
        /*[out,retval]*/ enum AcDimFractionType * Type ) = 0;
      virtual HRESULT __stdcall put_FractionFormat (
        /*[in]*/ enum AcDimFractionType Type ) = 0;
      virtual HRESULT __stdcall get_Fit (
        /*[out,retval]*/ enum AcDimFit * fittype ) = 0;
      virtual HRESULT __stdcall put_Fit (
        /*[in]*/ enum AcDimFit fittype ) = 0;
      virtual HRESULT __stdcall get_LinearScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * Type ) = 0;
      virtual HRESULT __stdcall put_LinearScaleFactor (
        /*[in]*/ ACAD_NOUNITS Type ) = 0;
      virtual HRESULT __stdcall get_UnitsFormat (
        /*[out,retval]*/ enum AcDimLUnits * format ) = 0;
      virtual HRESULT __stdcall put_UnitsFormat (
        /*[in]*/ enum AcDimLUnits format ) = 0;
      virtual HRESULT __stdcall get_RoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_RoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_DimLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_TextInsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ForceLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_ForceLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextOutsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextOutsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_CenterType (
        /*[out,retval]*/ enum AcDimCenterType * Type ) = 0;
      virtual HRESULT __stdcall put_CenterType (
        /*[in]*/ enum AcDimCenterType Type ) = 0;
      virtual HRESULT __stdcall get_CenterMarkSize (
        /*[out,retval]*/ double * Type ) = 0;
      virtual HRESULT __stdcall put_CenterMarkSize (
        /*[in]*/ double Type ) = 0;
      virtual HRESULT __stdcall get_AltSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ double * bVal ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_DimensionLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_DimensionLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_DimConstrForm (
        /*[out,retval]*/ VARIANT_BOOL * bIsDynamic ) = 0;
      virtual HRESULT __stdcall put_DimConstrForm (
        /*[in]*/ VARIANT_BOOL bIsDynamic ) = 0;
      virtual HRESULT __stdcall get_DimConstrReference (
        /*[out,retval]*/ VARIANT_BOOL * bIsReference ) = 0;
      virtual HRESULT __stdcall put_DimConstrReference (
        /*[in]*/ VARIANT_BOOL bIsReference ) = 0;
      virtual HRESULT __stdcall get_DimConstrName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_DimConstrName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_DimConstrExpression (
        /*[out,retval]*/ BSTR * bstrExpression ) = 0;
      virtual HRESULT __stdcall put_DimConstrExpression (
        /*[in]*/ BSTR bstrExpression ) = 0;
      virtual HRESULT __stdcall get_DimConstrValue (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_DimConstrValue (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DimConstrDesc (
        /*[out,retval]*/ BSTR * bstrDescription ) = 0;
      virtual HRESULT __stdcall put_DimConstrDesc (
        /*[in]*/ BSTR bstrDescription ) = 0;
};

struct __declspec(uuid("3e6efac3-4495-43de-a25f-0259ffab4015"))
IAcadDimRotated : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AltUnits (
        /*[out,retval]*/ VARIANT_BOOL * bAlternate ) = 0;
      virtual HRESULT __stdcall put_AltUnits (
        /*[in]*/ VARIANT_BOOL bAlternate ) = 0;
      virtual HRESULT __stdcall get_AltUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_AltUnitsPrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_AltUnitsScale (
        /*[out,retval]*/ ACAD_NOUNITS * scale ) = 0;
      virtual HRESULT __stdcall put_AltUnitsScale (
        /*[in]*/ ACAD_NOUNITS scale ) = 0;
      virtual HRESULT __stdcall get_AltRoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_AltRoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_AltTolerancePrecision (
        /*[out,retval]*/ enum AcDimPrecision * Distance ) = 0;
      virtual HRESULT __stdcall put_AltTolerancePrecision (
        /*[in]*/ enum AcDimPrecision Distance ) = 0;
      virtual HRESULT __stdcall get_AltUnitsFormat (
        /*[out,retval]*/ enum AcDimUnits * Units ) = 0;
      virtual HRESULT __stdcall put_AltUnitsFormat (
        /*[in]*/ enum AcDimUnits Units ) = 0;
      virtual HRESULT __stdcall get_AltTextPrefix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextPrefix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_AltTextSuffix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextSuffix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_PrimaryUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * Prec ) = 0;
      virtual HRESULT __stdcall put_PrimaryUnitsPrecision (
        /*[in]*/ enum AcDimPrecision Prec ) = 0;
      virtual HRESULT __stdcall get_DimensionLineExtend (
        /*[out,retval]*/ double * extend ) = 0;
      virtual HRESULT __stdcall put_DimensionLineExtend (
        /*[in]*/ double extend ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineExtend (
        /*[out,retval]*/ double * extend ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineExtend (
        /*[in]*/ double extend ) = 0;
      virtual HRESULT __stdcall get_Fit (
        /*[out,retval]*/ enum AcDimFit * fittype ) = 0;
      virtual HRESULT __stdcall put_Fit (
        /*[in]*/ enum AcDimFit fittype ) = 0;
      virtual HRESULT __stdcall get_FractionFormat (
        /*[out,retval]*/ enum AcDimFractionType * Type ) = 0;
      virtual HRESULT __stdcall put_FractionFormat (
        /*[in]*/ enum AcDimFractionType Type ) = 0;
      virtual HRESULT __stdcall get_HorizontalTextPosition (
        /*[out,retval]*/ enum AcDimHorizontalJustification * Type ) = 0;
      virtual HRESULT __stdcall put_HorizontalTextPosition (
        /*[in]*/ enum AcDimHorizontalJustification Type ) = 0;
      virtual HRESULT __stdcall get_LinearScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * Type ) = 0;
      virtual HRESULT __stdcall put_LinearScaleFactor (
        /*[in]*/ ACAD_NOUNITS Type ) = 0;
      virtual HRESULT __stdcall get_UnitsFormat (
        /*[out,retval]*/ enum AcDimLUnits * format ) = 0;
      virtual HRESULT __stdcall put_UnitsFormat (
        /*[in]*/ enum AcDimLUnits format ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * lweight ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT lweight ) = 0;
      virtual HRESULT __stdcall get_RoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_RoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_DimLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_DimLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ForceLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_ForceLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextOutsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextOutsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_AltSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ double * bVal ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_DimensionLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_DimensionLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLenSuppress (
        /*[out,retval]*/ VARIANT_BOOL * bFixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLenSuppress (
        /*[in]*/ VARIANT_BOOL bFixedLen ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLen (
        /*[out,retval]*/ double * FixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLen (
        /*[in]*/ double FixedLen ) = 0;
      virtual HRESULT __stdcall get_DimConstrForm (
        /*[out,retval]*/ VARIANT_BOOL * bIsDynamic ) = 0;
      virtual HRESULT __stdcall put_DimConstrForm (
        /*[in]*/ VARIANT_BOOL bIsDynamic ) = 0;
      virtual HRESULT __stdcall get_DimConstrReference (
        /*[out,retval]*/ VARIANT_BOOL * bIsReference ) = 0;
      virtual HRESULT __stdcall put_DimConstrReference (
        /*[in]*/ VARIANT_BOOL bIsReference ) = 0;
      virtual HRESULT __stdcall get_DimConstrName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_DimConstrName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_DimConstrExpression (
        /*[out,retval]*/ BSTR * bstrExpression ) = 0;
      virtual HRESULT __stdcall put_DimConstrExpression (
        /*[in]*/ BSTR bstrExpression ) = 0;
      virtual HRESULT __stdcall get_DimConstrValue (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_DimConstrValue (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DimConstrDesc (
        /*[out,retval]*/ BSTR * bstrDescription ) = 0;
      virtual HRESULT __stdcall put_DimConstrDesc (
        /*[in]*/ BSTR bstrDescription ) = 0;
      virtual HRESULT __stdcall get_SubUnitsSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_SubUnitsSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_SubUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_SubUnitsFactor (
        /*[in]*/ double factor ) = 0;
      virtual HRESULT __stdcall get_AltSubUnitsSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_AltSubUnitsSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_AltSubUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_AltSubUnitsFactor (
        /*[in]*/ double factor ) = 0;
};

struct __declspec(uuid("671d6427-d2e8-4637-98cc-e5e2b60409e5"))
IAcadDimOrdinate : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AltUnits (
        /*[out,retval]*/ VARIANT_BOOL * bAlternate ) = 0;
      virtual HRESULT __stdcall put_AltUnits (
        /*[in]*/ VARIANT_BOOL bAlternate ) = 0;
      virtual HRESULT __stdcall get_AltUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_AltUnitsPrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_AltUnitsScale (
        /*[out,retval]*/ ACAD_NOUNITS * scale ) = 0;
      virtual HRESULT __stdcall put_AltUnitsScale (
        /*[in]*/ ACAD_NOUNITS scale ) = 0;
      virtual HRESULT __stdcall get_AltRoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_AltRoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_AltTolerancePrecision (
        /*[out,retval]*/ enum AcDimPrecision * Distance ) = 0;
      virtual HRESULT __stdcall put_AltTolerancePrecision (
        /*[in]*/ enum AcDimPrecision Distance ) = 0;
      virtual HRESULT __stdcall get_AltUnitsFormat (
        /*[out,retval]*/ enum AcDimUnits * Units ) = 0;
      virtual HRESULT __stdcall put_AltUnitsFormat (
        /*[in]*/ enum AcDimUnits Units ) = 0;
      virtual HRESULT __stdcall get_AltTextPrefix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextPrefix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_AltTextSuffix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextSuffix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_PrimaryUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * Prec ) = 0;
      virtual HRESULT __stdcall put_PrimaryUnitsPrecision (
        /*[in]*/ enum AcDimPrecision Prec ) = 0;
      virtual HRESULT __stdcall get_FractionFormat (
        /*[out,retval]*/ enum AcDimFractionType * Type ) = 0;
      virtual HRESULT __stdcall put_FractionFormat (
        /*[in]*/ enum AcDimFractionType Type ) = 0;
      virtual HRESULT __stdcall get_LinearScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * Type ) = 0;
      virtual HRESULT __stdcall put_LinearScaleFactor (
        /*[in]*/ ACAD_NOUNITS Type ) = 0;
      virtual HRESULT __stdcall get_UnitsFormat (
        /*[out,retval]*/ enum AcDimLUnits * format ) = 0;
      virtual HRESULT __stdcall put_UnitsFormat (
        /*[in]*/ enum AcDimLUnits format ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * lweight ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT lweight ) = 0;
      virtual HRESULT __stdcall get_RoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_RoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_AltSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ double * bVal ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLenSuppress (
        /*[out,retval]*/ VARIANT_BOOL * bFixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLenSuppress (
        /*[in]*/ VARIANT_BOOL bFixedLen ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLen (
        /*[out,retval]*/ double * FixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLen (
        /*[in]*/ double FixedLen ) = 0;
      virtual HRESULT __stdcall get_SubUnitsSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_SubUnitsSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_SubUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_SubUnitsFactor (
        /*[in]*/ double factor ) = 0;
      virtual HRESULT __stdcall get_AltSubUnitsSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_AltSubUnitsSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_AltSubUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_AltSubUnitsFactor (
        /*[in]*/ double factor ) = 0;
};

struct __declspec(uuid("18da8524-1491-4cc7-afc7-26d1deccd6bf"))
IAcadDimRadial : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_LeaderLength (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall get_AltUnits (
        /*[out,retval]*/ VARIANT_BOOL * bAlternate ) = 0;
      virtual HRESULT __stdcall put_AltUnits (
        /*[in]*/ VARIANT_BOOL bAlternate ) = 0;
      virtual HRESULT __stdcall get_AltUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_AltUnitsPrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_AltUnitsScale (
        /*[out,retval]*/ ACAD_NOUNITS * scale ) = 0;
      virtual HRESULT __stdcall put_AltUnitsScale (
        /*[in]*/ ACAD_NOUNITS scale ) = 0;
      virtual HRESULT __stdcall get_AltRoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_AltRoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_AltTolerancePrecision (
        /*[out,retval]*/ enum AcDimPrecision * Distance ) = 0;
      virtual HRESULT __stdcall put_AltTolerancePrecision (
        /*[in]*/ enum AcDimPrecision Distance ) = 0;
      virtual HRESULT __stdcall get_AltUnitsFormat (
        /*[out,retval]*/ enum AcDimUnits * Units ) = 0;
      virtual HRESULT __stdcall put_AltUnitsFormat (
        /*[in]*/ enum AcDimUnits Units ) = 0;
      virtual HRESULT __stdcall get_AltTextPrefix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextPrefix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_AltTextSuffix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextSuffix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_CenterType (
        /*[out,retval]*/ enum AcDimCenterType * Type ) = 0;
      virtual HRESULT __stdcall put_CenterType (
        /*[in]*/ enum AcDimCenterType Type ) = 0;
      virtual HRESULT __stdcall get_CenterMarkSize (
        /*[out,retval]*/ double * Type ) = 0;
      virtual HRESULT __stdcall put_CenterMarkSize (
        /*[in]*/ double Type ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_PrimaryUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * Prec ) = 0;
      virtual HRESULT __stdcall put_PrimaryUnitsPrecision (
        /*[in]*/ enum AcDimPrecision Prec ) = 0;
      virtual HRESULT __stdcall get_FractionFormat (
        /*[out,retval]*/ enum AcDimFractionType * Type ) = 0;
      virtual HRESULT __stdcall put_FractionFormat (
        /*[in]*/ enum AcDimFractionType Type ) = 0;
      virtual HRESULT __stdcall get_Fit (
        /*[out,retval]*/ enum AcDimFit * fittype ) = 0;
      virtual HRESULT __stdcall put_Fit (
        /*[in]*/ enum AcDimFit fittype ) = 0;
      virtual HRESULT __stdcall get_LinearScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * Type ) = 0;
      virtual HRESULT __stdcall put_LinearScaleFactor (
        /*[in]*/ ACAD_NOUNITS Type ) = 0;
      virtual HRESULT __stdcall get_UnitsFormat (
        /*[out,retval]*/ enum AcDimLUnits * format ) = 0;
      virtual HRESULT __stdcall put_UnitsFormat (
        /*[in]*/ enum AcDimLUnits format ) = 0;
      virtual HRESULT __stdcall get_RoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_RoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_DimLineSuppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLineSuppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_TextInsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ForceLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_ForceLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextOutsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextOutsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_AltSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_ArrowheadType (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_ArrowheadType (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ double * bVal ) = 0;
      virtual HRESULT __stdcall get_ArrowheadBlock (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_ArrowheadBlock (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_DimensionLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_DimensionLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_DimConstrForm (
        /*[out,retval]*/ VARIANT_BOOL * bIsDynamic ) = 0;
      virtual HRESULT __stdcall put_DimConstrForm (
        /*[in]*/ VARIANT_BOOL bIsDynamic ) = 0;
      virtual HRESULT __stdcall get_DimConstrReference (
        /*[out,retval]*/ VARIANT_BOOL * bIsReference ) = 0;
      virtual HRESULT __stdcall put_DimConstrReference (
        /*[in]*/ VARIANT_BOOL bIsReference ) = 0;
      virtual HRESULT __stdcall get_DimConstrName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_DimConstrName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_DimConstrExpression (
        /*[out,retval]*/ BSTR * bstrExpression ) = 0;
      virtual HRESULT __stdcall put_DimConstrExpression (
        /*[in]*/ BSTR bstrExpression ) = 0;
      virtual HRESULT __stdcall get_DimConstrValue (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_DimConstrValue (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DimConstrDesc (
        /*[out,retval]*/ BSTR * bstrDescription ) = 0;
      virtual HRESULT __stdcall put_DimConstrDesc (
        /*[in]*/ BSTR bstrDescription ) = 0;
};

struct __declspec(uuid("a35236d3-c2f2-482d-b272-cce9f236fad2"))
IAcadEllipse : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StartPoint (
        /*[out,retval]*/ VARIANT * StartPoint ) = 0;
      virtual HRESULT __stdcall get_Center (
        /*[out,retval]*/ VARIANT * Center ) = 0;
      virtual HRESULT __stdcall put_Center (
        /*[in]*/ VARIANT Center ) = 0;
      virtual HRESULT __stdcall get_EndPoint (
        /*[out,retval]*/ VARIANT * EndPoint ) = 0;
      virtual HRESULT __stdcall get_MajorRadius (
        /*[out,retval]*/ double * MajorRadius ) = 0;
      virtual HRESULT __stdcall put_MajorRadius (
        /*[in]*/ double MajorRadius ) = 0;
      virtual HRESULT __stdcall get_MinorRadius (
        /*[out,retval]*/ double * MinorRadius ) = 0;
      virtual HRESULT __stdcall put_MinorRadius (
        /*[in]*/ double MinorRadius ) = 0;
      virtual HRESULT __stdcall get_RadiusRatio (
        /*[out,retval]*/ double * RadiusRatio ) = 0;
      virtual HRESULT __stdcall put_RadiusRatio (
        /*[in]*/ double RadiusRatio ) = 0;
      virtual HRESULT __stdcall get_StartAngle (
        /*[out,retval]*/ ACAD_ANGLE * StartAngle ) = 0;
      virtual HRESULT __stdcall put_StartAngle (
        /*[in]*/ ACAD_ANGLE StartAngle ) = 0;
      virtual HRESULT __stdcall get_EndAngle (
        /*[out,retval]*/ ACAD_ANGLE * EndAngle ) = 0;
      virtual HRESULT __stdcall put_EndAngle (
        /*[in]*/ ACAD_ANGLE EndAngle ) = 0;
      virtual HRESULT __stdcall get_StartParameter (
        /*[out,retval]*/ double * StartParameter ) = 0;
      virtual HRESULT __stdcall put_StartParameter (
        /*[in]*/ double StartParameter ) = 0;
      virtual HRESULT __stdcall get_EndParameter (
        /*[out,retval]*/ double * EndParameter ) = 0;
      virtual HRESULT __stdcall put_EndParameter (
        /*[in]*/ double EndParameter ) = 0;
      virtual HRESULT __stdcall get_MajorAxis (
        /*[out,retval]*/ VARIANT * MajorAxis ) = 0;
      virtual HRESULT __stdcall put_MajorAxis (
        /*[in]*/ VARIANT MajorAxis ) = 0;
      virtual HRESULT __stdcall get_MinorAxis (
        /*[out,retval]*/ VARIANT * MinorAxis ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall Offset (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * pOffsetCurves ) = 0;
};

struct __declspec(uuid("aa112a3d-c9da-4851-8199-a465584d9d98"))
IAcadLeader : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * Coordinates ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT Coordinates ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AcLeaderType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum AcLeaderType Type ) = 0;
      virtual HRESULT __stdcall Evaluate ( ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Annotation (
        /*[out,retval]*/ struct IAcadEntity * * pVal ) = 0;
      virtual HRESULT __stdcall put_Annotation (
        /*[in]*/ struct IAcadEntity * pVal ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_ArrowheadType (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_ArrowheadType (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * factor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS factor ) = 0;
      virtual HRESULT __stdcall get_VerticalTextPosition (
        /*[out,retval]*/ enum AcDimVerticalJustification * Type ) = 0;
      virtual HRESULT __stdcall put_VerticalTextPosition (
        /*[in]*/ enum AcDimVerticalJustification Type ) = 0;
      virtual HRESULT __stdcall get_TextGap (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_TextGap (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_ArrowheadBlock (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_ArrowheadBlock (
        /*[in]*/ BSTR BlockName ) = 0;
};

struct __declspec(uuid("95a24d69-4531-4083-925e-69865fbb9a03"))
IAcadMText : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TextString (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
      virtual HRESULT __stdcall put_TextString (
        /*[in]*/ BSTR bstrText ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_AttachmentPoint (
        /*[out,retval]*/ enum AcAttachmentPoint * attPoint ) = 0;
      virtual HRESULT __stdcall put_AttachmentPoint (
        /*[in]*/ enum AcAttachmentPoint attPoint ) = 0;
      virtual HRESULT __stdcall get_DrawingDirection (
        /*[out,retval]*/ enum AcDrawingDirection * drawDir ) = 0;
      virtual HRESULT __stdcall put_DrawingDirection (
        /*[in]*/ enum AcDrawingDirection drawDir ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_LineSpacingFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_LineSpacingFactor (
        /*[in]*/ double factor ) = 0;
      virtual HRESULT __stdcall get_LineSpacingStyle (
        /*[out,retval]*/ enum AcLineSpacingStyle * style ) = 0;
      virtual HRESULT __stdcall put_LineSpacingStyle (
        /*[in]*/ enum AcLineSpacingStyle style ) = 0;
      virtual HRESULT __stdcall get_LineSpacingDistance (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_LineSpacingDistance (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_BackgroundFill (
        /*[out,retval]*/ VARIANT_BOOL * bUseBackgroundFill ) = 0;
      virtual HRESULT __stdcall put_BackgroundFill (
        /*[in]*/ VARIANT_BOOL bUseBackgroundFill ) = 0;
      virtual HRESULT __stdcall FieldCode (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
};

struct __declspec(uuid("52485ac7-5e0d-4da4-b642-0796831aa592"))
IAcadPoint : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * Coordinates ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT Coordinates ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
};

struct __declspec(uuid("0f3fb243-2494-4bac-bfc9-304466f12711"))
IAcadLWPolyline : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * Coordinates ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT Coordinates ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall AddVertex (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT vertex ) = 0;
      virtual HRESULT __stdcall Explode (
        /*[out,retval]*/ VARIANT * pArrayObjs ) = 0;
      virtual HRESULT __stdcall GetBulge (
        /*[in]*/ int Index,
        /*[out,retval]*/ double * bulge ) = 0;
      virtual HRESULT __stdcall SetBulge (
        /*[in]*/ int Index,
        /*[in]*/ double bulge ) = 0;
      virtual HRESULT __stdcall GetWidth (
        /*[in]*/ int Index,
        /*[out]*/ double * StartWidth,
        /*[out]*/ double * EndWidth ) = 0;
      virtual HRESULT __stdcall SetWidth (
        /*[in]*/ int Index,
        /*[in]*/ double StartWidth,
        /*[in]*/ double EndWidth ) = 0;
      virtual HRESULT __stdcall get_ConstantWidth (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_ConstantWidth (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall Offset (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * pOffsetCurves ) = 0;
      virtual HRESULT __stdcall get_Elevation (
        /*[out,retval]*/ double * Elevation ) = 0;
      virtual HRESULT __stdcall put_Elevation (
        /*[in]*/ double Elevation ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Closed (
        /*[out,retval]*/ VARIANT_BOOL * fClose ) = 0;
      virtual HRESULT __stdcall put_Closed (
        /*[in]*/ VARIANT_BOOL fClose ) = 0;
      virtual HRESULT __stdcall get_LinetypeGeneration (
        /*[out,retval]*/ VARIANT_BOOL * bLinetypeGen ) = 0;
      virtual HRESULT __stdcall put_LinetypeGeneration (
        /*[in]*/ VARIANT_BOOL bLinetypeGen ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
};

struct __declspec(uuid("bbc9e18d-538f-43ad-a963-a29e87993cbb"))
IAcadPolyline : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * Coordinates ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT Coordinates ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall AppendVertex (
        /*[in]*/ VARIANT vertex ) = 0;
      virtual HRESULT __stdcall Explode (
        /*[out,retval]*/ VARIANT * pArrayObjs ) = 0;
      virtual HRESULT __stdcall GetBulge (
        /*[in]*/ int Index,
        /*[out,retval]*/ double * bulge ) = 0;
      virtual HRESULT __stdcall SetBulge (
        /*[in]*/ int Index,
        /*[in]*/ double bulge ) = 0;
      virtual HRESULT __stdcall GetWidth (
        /*[in]*/ int Index,
        /*[out]*/ double * StartWidth,
        double * EndWidth ) = 0;
      virtual HRESULT __stdcall SetWidth (
        /*[in]*/ int Index,
        /*[in]*/ double StartWidth,
        double EndWidth ) = 0;
      virtual HRESULT __stdcall get_ConstantWidth (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_ConstantWidth (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall Offset (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * pOffsetCurves ) = 0;
      virtual HRESULT __stdcall get_Elevation (
        /*[out,retval]*/ double * Elevation ) = 0;
      virtual HRESULT __stdcall put_Elevation (
        /*[in]*/ double Elevation ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AcPolylineType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum AcPolylineType Type ) = 0;
      virtual HRESULT __stdcall get_Closed (
        /*[out,retval]*/ VARIANT_BOOL * fClose ) = 0;
      virtual HRESULT __stdcall put_Closed (
        /*[in]*/ VARIANT_BOOL fClose ) = 0;
      virtual HRESULT __stdcall get_LinetypeGeneration (
        /*[out,retval]*/ VARIANT_BOOL * bLinetypeGen ) = 0;
      virtual HRESULT __stdcall put_LinetypeGeneration (
        /*[in]*/ VARIANT_BOOL bLinetypeGen ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
};

struct __declspec(uuid("81989cda-342d-4634-b229-8ace12c27cc3"))
IAcadRay : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BasePoint (
        /*[out,retval]*/ VARIANT * BasePoint ) = 0;
      virtual HRESULT __stdcall put_BasePoint (
        /*[in]*/ VARIANT BasePoint ) = 0;
      virtual HRESULT __stdcall get_SecondPoint (
        /*[out,retval]*/ VARIANT * SecondPoint ) = 0;
      virtual HRESULT __stdcall put_SecondPoint (
        /*[in]*/ VARIANT SecondPoint ) = 0;
      virtual HRESULT __stdcall get_DirectionVector (
        /*[out,retval]*/ VARIANT * dirVector ) = 0;
      virtual HRESULT __stdcall put_DirectionVector (
        /*[in]*/ VARIANT dirVector ) = 0;
};

struct __declspec(uuid("504f080d-45d3-4bfc-bd95-681b1194ec1d"))
IAcadShape : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * scalFactor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS scalFactor ) = 0;
      virtual HRESULT __stdcall get_ObliqueAngle (
        /*[out,retval]*/ ACAD_ANGLE * obliAngle ) = 0;
      virtual HRESULT __stdcall put_ObliqueAngle (
        /*[in]*/ ACAD_ANGLE obliAngle ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
};

struct __declspec(uuid("a2f91ead-d307-4465-b70e-ecf9fb7103e3"))
IAcadSolid : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * corners ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT corners ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("75a55bac-3e9c-47d0-89f6-76fa61bc5366"))
IAcadSpline : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_NumberOfControlPoints (
        /*[out,retval]*/ long * numCtrlPoints ) = 0;
      virtual HRESULT __stdcall get_ControlPoints (
        /*[out,retval]*/ VARIANT * controlPoint ) = 0;
      virtual HRESULT __stdcall put_ControlPoints (
        /*[in]*/ VARIANT controlPoint ) = 0;
      virtual HRESULT __stdcall get_NumberOfFitPoints (
        /*[out,retval]*/ long * numFitPoints ) = 0;
      virtual HRESULT __stdcall get_FitPoints (
        /*[out,retval]*/ VARIANT * fitPoint ) = 0;
      virtual HRESULT __stdcall put_FitPoints (
        /*[in]*/ VARIANT fitPoint ) = 0;
      virtual HRESULT __stdcall get_Degree (
        /*[out,retval]*/ long * Degree ) = 0;
      virtual HRESULT __stdcall get_Closed (
        /*[out,retval]*/ VARIANT_BOOL * fClose ) = 0;
      virtual HRESULT __stdcall get_IsPlanar (
        /*[out,retval]*/ VARIANT_BOOL * fPlanar ) = 0;
      virtual HRESULT __stdcall get_IsRational (
        /*[out,retval]*/ VARIANT_BOOL * fRational ) = 0;
      virtual HRESULT __stdcall get_IsPeriodic (
        /*[out,retval]*/ VARIANT_BOOL * fPeriodic ) = 0;
      virtual HRESULT __stdcall get_StartTangent (
        /*[out,retval]*/ VARIANT * StartTangent ) = 0;
      virtual HRESULT __stdcall put_StartTangent (
        /*[in]*/ VARIANT StartTangent ) = 0;
      virtual HRESULT __stdcall get_EndTangent (
        /*[out,retval]*/ VARIANT * EndTangent ) = 0;
      virtual HRESULT __stdcall put_EndTangent (
        /*[in]*/ VARIANT EndTangent ) = 0;
      virtual HRESULT __stdcall get_FitTolerance (
        /*[out,retval]*/ double * fitTol ) = 0;
      virtual HRESULT __stdcall put_FitTolerance (
        /*[in]*/ double fitTol ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall SetControlPoint (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT controlPoint ) = 0;
      virtual HRESULT __stdcall GetControlPoint (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * controlPoint ) = 0;
      virtual HRESULT __stdcall SetFitPoint (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT fitPoint ) = 0;
      virtual HRESULT __stdcall GetFitPoint (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * fitPoint ) = 0;
      virtual HRESULT __stdcall SetWeight (
        /*[in]*/ int Index,
        /*[in]*/ double weight ) = 0;
      virtual HRESULT __stdcall GetWeight (
        /*[in]*/ int Index,
        /*[out,retval]*/ double * weight ) = 0;
      virtual HRESULT __stdcall AddFitPoint (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT fitPoint ) = 0;
      virtual HRESULT __stdcall DeleteFitPoint (
        /*[in]*/ int Index ) = 0;
      virtual HRESULT __stdcall ElevateOrder (
        /*[in]*/ int Order ) = 0;
      virtual HRESULT __stdcall Offset (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * pOffsetCurves ) = 0;
      virtual HRESULT __stdcall PurgeFitData ( ) = 0;
      virtual HRESULT __stdcall Reverse ( ) = 0;
      virtual HRESULT __stdcall get_Knots (
        /*[out,retval]*/ VARIANT * KnotValues ) = 0;
      virtual HRESULT __stdcall put_Knots (
        /*[in]*/ VARIANT KnotValues ) = 0;
      virtual HRESULT __stdcall get_Weights (
        /*[out,retval]*/ VARIANT * WeightValues ) = 0;
      virtual HRESULT __stdcall put_Weights (
        /*[in]*/ VARIANT WeightValues ) = 0;
      virtual HRESULT __stdcall get_KnotParameterization (
        /*[out,retval]*/ enum AcSplineKnotParameterizationType * knotParamVal ) = 0;
      virtual HRESULT __stdcall put_KnotParameterization (
        /*[in]*/ enum AcSplineKnotParameterizationType knotParamVal ) = 0;
      virtual HRESULT __stdcall get_SplineFrame (
        /*[out,retval]*/ enum AcSplineFrameType * show ) = 0;
      virtual HRESULT __stdcall put_SplineFrame (
        /*[in]*/ enum AcSplineFrameType show ) = 0;
      virtual HRESULT __stdcall get_SplineMethod (
        /*[out,retval]*/ enum AcSplineMethodType * method ) = 0;
      virtual HRESULT __stdcall put_SplineMethod (
        /*[in]*/ enum AcSplineMethodType method ) = 0;
      virtual HRESULT __stdcall put_Degree2 (
        /*[in]*/ long Degree ) = 0;
      virtual HRESULT __stdcall get_Degree2 (
        /*[out,retval]*/ long * Degree ) = 0;
      virtual HRESULT __stdcall put_Closed2 (
        /*[in]*/ VARIANT_BOOL fClose ) = 0;
      virtual HRESULT __stdcall get_Closed2 (
        /*[out,retval]*/ VARIANT_BOOL * fClose ) = 0;
};

struct __declspec(uuid("ca2dd247-d133-4646-ba49-ee3dd475a3bc"))
IAcadText : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TextString (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
      virtual HRESULT __stdcall put_TextString (
        /*[in]*/ BSTR bstrText ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum AcAlignment * align ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum AcAlignment align ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ enum AcHorizontalAlignment * horizAlign ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ enum AcHorizontalAlignment horizAlign ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum AcVerticalAlignment * vertiAlign ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum AcVerticalAlignment vertiAlign ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * scalFactor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS scalFactor ) = 0;
      virtual HRESULT __stdcall get_ObliqueAngle (
        /*[out,retval]*/ ACAD_ANGLE * obliAngle ) = 0;
      virtual HRESULT __stdcall put_ObliqueAngle (
        /*[in]*/ ACAD_ANGLE obliAngle ) = 0;
      virtual HRESULT __stdcall get_TextAlignmentPoint (
        /*[out,retval]*/ VARIANT * alignPoint ) = 0;
      virtual HRESULT __stdcall put_TextAlignmentPoint (
        /*[in]*/ VARIANT alignPoint ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_TextGenerationFlag (
        /*[out,retval]*/ long * textGenFlag ) = 0;
      virtual HRESULT __stdcall put_TextGenerationFlag (
        /*[in]*/ long textGenFlag ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_UpsideDown (
        /*[out,retval]*/ VARIANT_BOOL * UpsideDown ) = 0;
      virtual HRESULT __stdcall put_UpsideDown (
        /*[in]*/ VARIANT_BOOL UpsideDown ) = 0;
      virtual HRESULT __stdcall get_Backward (
        /*[out,retval]*/ VARIANT_BOOL * Backward ) = 0;
      virtual HRESULT __stdcall put_Backward (
        /*[in]*/ VARIANT_BOOL Backward ) = 0;
      virtual HRESULT __stdcall FieldCode (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
};

struct __declspec(uuid("6779b954-8464-496a-8458-53405f035358"))
IAcadTolerance : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DirectionVector (
        /*[out,retval]*/ VARIANT * dirVector ) = 0;
      virtual HRESULT __stdcall put_DirectionVector (
        /*[in]*/ VARIANT dirVector ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ ACAD_COLOR * color ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ ACAD_COLOR color ) = 0;
      virtual HRESULT __stdcall get_TextString (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
      virtual HRESULT __stdcall put_TextString (
        /*[in]*/ BSTR bstrText ) = 0;
      virtual HRESULT __stdcall get_TextStyle (
        /*[out,retval]*/ BSTR * style ) = 0;
      virtual HRESULT __stdcall put_TextStyle (
        /*[in]*/ BSTR style ) = 0;
      virtual HRESULT __stdcall get_TextHeight (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_TextHeight (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * factor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS factor ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
};

struct __declspec(uuid("d295da05-d626-4b03-8ff3-836da9b97de4"))
IAcadTrace : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * corners ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT corners ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
};

struct __declspec(uuid("d70f5268-be6d-4ba6-a289-13fba96c3084"))
IAcadXline : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BasePoint (
        /*[out,retval]*/ VARIANT * BasePoint ) = 0;
      virtual HRESULT __stdcall put_BasePoint (
        /*[in]*/ VARIANT BasePoint ) = 0;
      virtual HRESULT __stdcall get_SecondPoint (
        /*[out,retval]*/ VARIANT * SecondPoint ) = 0;
      virtual HRESULT __stdcall put_SecondPoint (
        /*[in]*/ VARIANT SecondPoint ) = 0;
      virtual HRESULT __stdcall get_DirectionVector (
        /*[out,retval]*/ VARIANT * dirVector ) = 0;
      virtual HRESULT __stdcall put_DirectionVector (
        /*[in]*/ VARIANT dirVector ) = 0;
      virtual HRESULT __stdcall Offset (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * pOffsetCurves ) = 0;
};

struct __declspec(uuid("1d43bc6f-2a8e-4ab4-a171-e05ec82795af"))
IAcadBlockReference : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_XScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_XScaleFactor (
        /*[in]*/ ACAD_NOUNITS ScaleFactor ) = 0;
      virtual HRESULT __stdcall get_YScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_YScaleFactor (
        /*[in]*/ ACAD_NOUNITS ScaleFactor ) = 0;
      virtual HRESULT __stdcall get_ZScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_ZScaleFactor (
        /*[in]*/ ACAD_NOUNITS ScaleFactor ) = 0;
      virtual HRESULT __stdcall Explode (
        /*[out,retval]*/ VARIANT * pArrayObjs ) = 0;
      virtual HRESULT __stdcall GetAttributes (
        /*[out,retval]*/ VARIANT * pAttrObjs ) = 0;
      virtual HRESULT __stdcall GetConstantAttributes (
        /*[out,retval]*/ VARIANT * pAttrObjs ) = 0;
      virtual HRESULT __stdcall get_HasAttributes (
        /*[out,retval]*/ VARIANT_BOOL * bHas ) = 0;
      virtual HRESULT __stdcall get_EffectiveName (
        /*[out,retval]*/ BSTR * EffectiveName ) = 0;
      virtual HRESULT __stdcall get_IsDynamicBlock (
        /*[out,retval]*/ VARIANT_BOOL * pDynamicBlock ) = 0;
      virtual HRESULT __stdcall GetDynamicBlockProperties (
        /*[out,retval]*/ VARIANT * dynamicPropertyArray ) = 0;
      virtual HRESULT __stdcall ResetBlock ( ) = 0;
      virtual HRESULT __stdcall ConvertToAnonymousBlock ( ) = 0;
      virtual HRESULT __stdcall ConvertToStaticBlock (
        /*[in]*/ BSTR newBlockName ) = 0;
      virtual HRESULT __stdcall get_XEffectiveScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_XEffectiveScaleFactor (
        /*[in]*/ ACAD_NOUNITS ScaleFactor ) = 0;
      virtual HRESULT __stdcall get_YEffectiveScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_YEffectiveScaleFactor (
        /*[in]*/ ACAD_NOUNITS ScaleFactor ) = 0;
      virtual HRESULT __stdcall get_ZEffectiveScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_ZEffectiveScaleFactor (
        /*[in]*/ ACAD_NOUNITS ScaleFactor ) = 0;
      virtual HRESULT __stdcall get_InsUnits (
        /*[out,retval]*/ BSTR * Units ) = 0;
      virtual HRESULT __stdcall get_InsUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
};

struct __declspec(uuid("53eb1a05-9449-466f-8e62-a34006ba9d3c"))
IAcadHatch : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_NumberOfLoops (
        /*[out,retval]*/ long * numLoops ) = 0;
      virtual HRESULT __stdcall get_PatternType (
        /*[out,retval]*/ enum AcPatternType * PatternType ) = 0;
      virtual HRESULT __stdcall get_PatternName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall get_PatternAngle (
        /*[out,retval]*/ ACAD_ANGLE * PatternAngle ) = 0;
      virtual HRESULT __stdcall put_PatternAngle (
        /*[in]*/ ACAD_ANGLE PatternAngle ) = 0;
      virtual HRESULT __stdcall get_PatternScale (
        /*[out,retval]*/ ACAD_NOUNITS * PatternScale ) = 0;
      virtual HRESULT __stdcall put_PatternScale (
        /*[in]*/ ACAD_NOUNITS PatternScale ) = 0;
      virtual HRESULT __stdcall get_PatternSpace (
        /*[out,retval]*/ double * PatternSpace ) = 0;
      virtual HRESULT __stdcall put_PatternSpace (
        /*[in]*/ double PatternSpace ) = 0;
      virtual HRESULT __stdcall get_ISOPenWidth (
        /*[out,retval]*/ enum AcISOPenWidth * penWidth ) = 0;
      virtual HRESULT __stdcall put_ISOPenWidth (
        /*[in]*/ enum AcISOPenWidth penWidth ) = 0;
      virtual HRESULT __stdcall get_PatternDouble (
        /*[out,retval]*/ VARIANT_BOOL * bDouble ) = 0;
      virtual HRESULT __stdcall put_PatternDouble (
        /*[in]*/ VARIANT_BOOL bDouble ) = 0;
      virtual HRESULT __stdcall get_Elevation (
        /*[out,retval]*/ double * Elevation ) = 0;
      virtual HRESULT __stdcall put_Elevation (
        /*[in]*/ double Elevation ) = 0;
      virtual HRESULT __stdcall get_AssociativeHatch (
        /*[out,retval]*/ VARIANT_BOOL * fAssoc ) = 0;
      virtual HRESULT __stdcall put_AssociativeHatch (
        /*[in]*/ VARIANT_BOOL fAssoc ) = 0;
      virtual HRESULT __stdcall get_HatchStyle (
        /*[out,retval]*/ enum AcHatchStyle * HatchStyle ) = 0;
      virtual HRESULT __stdcall put_HatchStyle (
        /*[in]*/ enum AcHatchStyle HatchStyle ) = 0;
      virtual HRESULT __stdcall SetPattern (
        /*[in]*/ int PatternType,
        /*[in]*/ BSTR PatternName ) = 0;
      virtual HRESULT __stdcall AppendOuterLoop (
        /*[in]*/ VARIANT ObjectArray ) = 0;
      virtual HRESULT __stdcall AppendInnerLoop (
        /*[in]*/ VARIANT ObjectArray ) = 0;
      virtual HRESULT __stdcall InsertLoopAt (
        /*[in]*/ int Index,
        /*[in]*/ enum AcLoopType LoopType,
        /*[in]*/ VARIANT ObjectArray ) = 0;
      virtual HRESULT __stdcall GetLoopAt (
        /*[in]*/ int Index,
        /*[out]*/ VARIANT * ObjectArray ) = 0;
      virtual HRESULT __stdcall Evaluate ( ) = 0;
      virtual HRESULT __stdcall get_GradientColor1 (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_GradientColor1 (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_GradientColor2 (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_GradientColor2 (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_GradientAngle (
        /*[out,retval]*/ ACAD_ANGLE * GradientAngle ) = 0;
      virtual HRESULT __stdcall put_GradientAngle (
        /*[in]*/ ACAD_ANGLE GradientAngle ) = 0;
      virtual HRESULT __stdcall get_GradientCentered (
        /*[out,retval]*/ VARIANT_BOOL * fCentered ) = 0;
      virtual HRESULT __stdcall put_GradientCentered (
        /*[in]*/ VARIANT_BOOL fCentered ) = 0;
      virtual HRESULT __stdcall get_GradientName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_GradientName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_HatchObjectType (
        /*[out,retval]*/ enum AcHatchObjectType * hatchType ) = 0;
      virtual HRESULT __stdcall put_HatchObjectType (
        /*[in]*/ enum AcHatchObjectType hatchType ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall get_Origin (
        /*[out,retval]*/ VARIANT * Origin ) = 0;
      virtual HRESULT __stdcall put_Origin (
        /*[in]*/ VARIANT Origin ) = 0;
      virtual HRESULT __stdcall get_BackgroundColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_BackgroundColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
};

struct __declspec(uuid("98faf084-febc-425b-b3bc-5d5ec5fee54e"))
IAcadRasterImage : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Brightness (
        /*[out,retval]*/ long * Brightness ) = 0;
      virtual HRESULT __stdcall put_Brightness (
        /*[in]*/ long Brightness ) = 0;
      virtual HRESULT __stdcall get_Contrast (
        /*[out,retval]*/ long * Contrast ) = 0;
      virtual HRESULT __stdcall put_Contrast (
        /*[in]*/ long Contrast ) = 0;
      virtual HRESULT __stdcall get_Fade (
        /*[out,retval]*/ long * Fade ) = 0;
      virtual HRESULT __stdcall put_Fade (
        /*[in]*/ long Fade ) = 0;
      virtual HRESULT __stdcall get_Origin (
        /*[out,retval]*/ VARIANT * Origin ) = 0;
      virtual HRESULT __stdcall put_Origin (
        /*[in]*/ VARIANT Origin ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_ImageWidth (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_ImageWidth (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_ImageHeight (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_ImageHeight (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall put_ImageFile (
        /*[in]*/ BSTR imageFileName ) = 0;
      virtual HRESULT __stdcall get_ImageFile (
        /*[out,retval]*/ BSTR * imageFileName ) = 0;
      virtual HRESULT __stdcall get_ImageVisibility (
        /*[out,retval]*/ VARIANT_BOOL * fVisible ) = 0;
      virtual HRESULT __stdcall put_ImageVisibility (
        /*[in]*/ VARIANT_BOOL fVisible ) = 0;
      virtual HRESULT __stdcall get_ClippingEnabled (
        /*[out,retval]*/ VARIANT_BOOL * kClip ) = 0;
      virtual HRESULT __stdcall put_ClippingEnabled (
        /*[in]*/ VARIANT_BOOL kClip ) = 0;
      virtual HRESULT __stdcall get_transparency (
        /*[out,retval]*/ VARIANT_BOOL * bTransp ) = 0;
      virtual HRESULT __stdcall put_transparency (
        /*[in]*/ VARIANT_BOOL bTransp ) = 0;
      virtual HRESULT __stdcall ClipBoundary (
        /*[in]*/ VARIANT boundry ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * pixelHeight ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * pixelWidth ) = 0;
      virtual HRESULT __stdcall get_ShowRotation (
        /*[out,retval]*/ VARIANT_BOOL * bShow ) = 0;
      virtual HRESULT __stdcall put_ShowRotation (
        /*[in]*/ VARIANT_BOOL bShow ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS ScaleFactor ) = 0;
};

struct __declspec(uuid("a02d3284-e931-40ff-a953-0fa655b07980"))
IAcadLine : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StartPoint (
        /*[out,retval]*/ VARIANT * StartPoint ) = 0;
      virtual HRESULT __stdcall put_StartPoint (
        /*[in]*/ VARIANT StartPoint ) = 0;
      virtual HRESULT __stdcall get_EndPoint (
        /*[out,retval]*/ VARIANT * EndPoint ) = 0;
      virtual HRESULT __stdcall put_EndPoint (
        /*[in]*/ VARIANT EndPoint ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall Offset (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT * pOffsetCurves ) = 0;
      virtual HRESULT __stdcall get_Delta (
        /*[out,retval]*/ VARIANT * Delta ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ ACAD_ANGLE * Angle ) = 0;
};

struct __declspec(uuid("0c6a8b60-415e-4625-81a9-ef84216fd3b4"))
IAcadPlotConfiguration : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pName ) = 0;
      virtual HRESULT __stdcall get_ConfigName (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_ConfigName (
        /*[in]*/ BSTR pName ) = 0;
      virtual HRESULT __stdcall get_CanonicalMediaName (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_CanonicalMediaName (
        /*[in]*/ BSTR pName ) = 0;
      virtual HRESULT __stdcall get_PaperUnits (
        /*[out,retval]*/ enum AcPlotPaperUnits * pPaperUnits ) = 0;
      virtual HRESULT __stdcall put_PaperUnits (
        /*[in]*/ enum AcPlotPaperUnits pPaperUnits ) = 0;
      virtual HRESULT __stdcall get_PlotViewportBorders (
        /*[out,retval]*/ VARIANT_BOOL * pViewportBorders ) = 0;
      virtual HRESULT __stdcall put_PlotViewportBorders (
        /*[in]*/ VARIANT_BOOL pViewportBorders ) = 0;
      virtual HRESULT __stdcall get_ShowPlotStyles (
        /*[out,retval]*/ VARIANT_BOOL * pStyles ) = 0;
      virtual HRESULT __stdcall put_ShowPlotStyles (
        /*[in]*/ VARIANT_BOOL pStyles ) = 0;
      virtual HRESULT __stdcall get_PlotRotation (
        /*[out,retval]*/ enum AcPlotRotation * pRotation ) = 0;
      virtual HRESULT __stdcall put_PlotRotation (
        /*[in]*/ enum AcPlotRotation pRotation ) = 0;
      virtual HRESULT __stdcall get_CenterPlot (
        /*[out,retval]*/ VARIANT_BOOL * pCentered ) = 0;
      virtual HRESULT __stdcall put_CenterPlot (
        /*[in]*/ VARIANT_BOOL pCentered ) = 0;
      virtual HRESULT __stdcall get_PlotHidden (
        /*[out,retval]*/ VARIANT_BOOL * pHidden ) = 0;
      virtual HRESULT __stdcall put_PlotHidden (
        /*[in]*/ VARIANT_BOOL pHidden ) = 0;
      virtual HRESULT __stdcall get_PlotType (
        /*[out,retval]*/ enum AcPlotType * pType ) = 0;
      virtual HRESULT __stdcall put_PlotType (
        /*[in]*/ enum AcPlotType pType ) = 0;
      virtual HRESULT __stdcall get_ViewToPlot (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_ViewToPlot (
        /*[in]*/ BSTR pName ) = 0;
      virtual HRESULT __stdcall get_UseStandardScale (
        /*[out,retval]*/ VARIANT_BOOL * pUseStdScale ) = 0;
      virtual HRESULT __stdcall put_UseStandardScale (
        /*[in]*/ VARIANT_BOOL pUseStdScale ) = 0;
      virtual HRESULT __stdcall get_StandardScale (
        /*[out,retval]*/ enum AcPlotScale * pStdScale ) = 0;
      virtual HRESULT __stdcall put_StandardScale (
        /*[in]*/ enum AcPlotScale pStdScale ) = 0;
      virtual HRESULT __stdcall GetCustomScale (
        /*[out]*/ double * Numerator,
        /*[out]*/ double * Denominator ) = 0;
      virtual HRESULT __stdcall SetCustomScale (
        /*[in]*/ double Numerator,
        /*[in]*/ double Denominator ) = 0;
      virtual HRESULT __stdcall get_ScaleLineweights (
        /*[out,retval]*/ VARIANT_BOOL * pScale ) = 0;
      virtual HRESULT __stdcall put_ScaleLineweights (
        /*[in]*/ VARIANT_BOOL pScale ) = 0;
      virtual HRESULT __stdcall get_PlotWithLineweights (
        /*[out,retval]*/ VARIANT_BOOL * pPlot ) = 0;
      virtual HRESULT __stdcall put_PlotWithLineweights (
        /*[in]*/ VARIANT_BOOL pPlot ) = 0;
      virtual HRESULT __stdcall get_PlotViewportsFirst (
        /*[out,retval]*/ VARIANT_BOOL * pViewportsFirst ) = 0;
      virtual HRESULT __stdcall put_PlotViewportsFirst (
        /*[in]*/ VARIANT_BOOL pViewportsFirst ) = 0;
      virtual HRESULT __stdcall get_StyleSheet (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_StyleSheet (
        /*[in]*/ BSTR pName ) = 0;
      virtual HRESULT __stdcall GetPaperMargins (
        /*[out]*/ VARIANT * LowerLeft,
        /*[out]*/ VARIANT * UpperRight ) = 0;
      virtual HRESULT __stdcall GetPaperSize (
        /*[out]*/ double * Width,
        /*[out]*/ double * Height ) = 0;
      virtual HRESULT __stdcall get_PlotOrigin (
        /*[out,retval]*/ VARIANT * pOrigin ) = 0;
      virtual HRESULT __stdcall put_PlotOrigin (
        /*[in]*/ VARIANT pOrigin ) = 0;
      virtual HRESULT __stdcall GetWindowToPlot (
        /*[out]*/ VARIANT * LowerLeft,
        /*[out]*/ VARIANT * UpperRight ) = 0;
      virtual HRESULT __stdcall SetWindowToPlot (
        /*[in]*/ VARIANT LowerLeft,
        /*[in]*/ VARIANT UpperRight ) = 0;
      virtual HRESULT __stdcall get_PlotWithPlotStyles (
        /*[out,retval]*/ VARIANT_BOOL * pStyles ) = 0;
      virtual HRESULT __stdcall put_PlotWithPlotStyles (
        /*[in]*/ VARIANT_BOOL pStyles ) = 0;
      virtual HRESULT __stdcall get_ModelType (
        /*[out,retval]*/ VARIANT_BOOL * pType ) = 0;
      virtual HRESULT __stdcall CopyFrom (
        /*[in]*/ struct IAcadPlotConfiguration * pPlotConfig ) = 0;
      virtual HRESULT __stdcall GetCanonicalMediaNames (
        /*[out,retval]*/ VARIANT * pNames ) = 0;
      virtual HRESULT __stdcall GetPlotDeviceNames (
        /*[out,retval]*/ VARIANT * pNames ) = 0;
      virtual HRESULT __stdcall GetPlotStyleTableNames (
        /*[out,retval]*/ VARIANT * pNames ) = 0;
      virtual HRESULT __stdcall RefreshPlotDeviceInfo ( ) = 0;
      virtual HRESULT __stdcall GetLocaleMediaName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ BSTR * pLocalName ) = 0;
};

struct __declspec(uuid("1ff467d1-2ef7-4426-a0db-f96572c26b13"))
IAcadMInsertBlock : IAcadBlockReference
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Columns (
        /*[in]*/ long NumColumns ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ long * NumColumns ) = 0;
      virtual HRESULT __stdcall put_ColumnSpacing (
        /*[in]*/ double Spacing ) = 0;
      virtual HRESULT __stdcall get_ColumnSpacing (
        /*[out,retval]*/ double * Spacing ) = 0;
      virtual HRESULT __stdcall put_Rows (
        /*[in]*/ long NumRows ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ long * NumRows ) = 0;
      virtual HRESULT __stdcall put_RowSpacing (
        /*[in]*/ double Spacing ) = 0;
      virtual HRESULT __stdcall get_RowSpacing (
        /*[out,retval]*/ double * Spacing ) = 0;
};

struct __declspec(uuid("4647dce6-d132-4edd-9447-11b523af4c9e"))
IAcadPolyfaceMesh : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT Vertices ) = 0;
      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * Vertices ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_NumberOfVertices (
        /*[out,retval]*/ long * NumVertices ) = 0;
      virtual HRESULT __stdcall get_NumberOfFaces (
        /*[out,retval]*/ long * NumFaces ) = 0;
      virtual HRESULT __stdcall put_Faces (
        /*[in]*/ VARIANT _arg1 ) = 0;
};

struct __declspec(uuid("5f26c199-3259-4a39-8fd9-60285db2f765"))
IAcadMLine : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * Vertices ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT Vertices ) = 0;
      virtual HRESULT __stdcall get_Justification (
        /*[out,retval]*/ enum AcMLineJustification * Justification ) = 0;
      virtual HRESULT __stdcall put_Justification (
        /*[in]*/ enum AcMLineJustification Justification ) = 0;
      virtual HRESULT __stdcall get_MLineScale (
        /*[out,retval]*/ double * scale ) = 0;
      virtual HRESULT __stdcall put_MLineScale (
        /*[in]*/ double scale ) = 0;
};

struct __declspec(uuid("0ae304c8-61ef-4d52-be60-7a87dedc2c4e"))
IAcadDim3PointAngular : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ExtLine1EndPoint (
        /*[out,retval]*/ VARIANT * xLine1Point ) = 0;
      virtual HRESULT __stdcall put_ExtLine1EndPoint (
        /*[in]*/ VARIANT xLine1Point ) = 0;
      virtual HRESULT __stdcall get_ExtLine2EndPoint (
        /*[out,retval]*/ VARIANT * xLine2Point ) = 0;
      virtual HRESULT __stdcall put_ExtLine2EndPoint (
        /*[in]*/ VARIANT xLine2Point ) = 0;
      virtual HRESULT __stdcall get_AngleVertex (
        /*[out,retval]*/ VARIANT * AngleVertex ) = 0;
      virtual HRESULT __stdcall put_AngleVertex (
        /*[in]*/ VARIANT AngleVertex ) = 0;
      virtual HRESULT __stdcall get_TextPrecision (
        /*[out,retval]*/ enum AcDimPrecision * AngleVertex ) = 0;
      virtual HRESULT __stdcall put_TextPrecision (
        /*[in]*/ enum AcDimPrecision AngleVertex ) = 0;
      virtual HRESULT __stdcall get_AngleFormat (
        /*[out,retval]*/ enum AcAngleUnits * format ) = 0;
      virtual HRESULT __stdcall put_AngleFormat (
        /*[in]*/ enum AcAngleUnits format ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineExtend (
        /*[out,retval]*/ double * extend ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineExtend (
        /*[in]*/ double extend ) = 0;
      virtual HRESULT __stdcall get_Fit (
        /*[out,retval]*/ enum AcDimFit * fittype ) = 0;
      virtual HRESULT __stdcall put_Fit (
        /*[in]*/ enum AcDimFit fittype ) = 0;
      virtual HRESULT __stdcall get_HorizontalTextPosition (
        /*[out,retval]*/ enum AcDimHorizontalJustification * Type ) = 0;
      virtual HRESULT __stdcall put_HorizontalTextPosition (
        /*[in]*/ enum AcDimHorizontalJustification Type ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * lweight ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT lweight ) = 0;
      virtual HRESULT __stdcall get_DimLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_DimLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ForceLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_ForceLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextOutsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextOutsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ ACAD_ANGLE * bVal ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_DimensionLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_DimensionLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLenSuppress (
        /*[out,retval]*/ VARIANT_BOOL * bFixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLenSuppress (
        /*[in]*/ VARIANT_BOOL bFixedLen ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLen (
        /*[out,retval]*/ double * FixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLen (
        /*[in]*/ double FixedLen ) = 0;
      virtual HRESULT __stdcall get_DimConstrForm (
        /*[out,retval]*/ VARIANT_BOOL * bIsDynamic ) = 0;
      virtual HRESULT __stdcall put_DimConstrForm (
        /*[in]*/ VARIANT_BOOL bIsDynamic ) = 0;
      virtual HRESULT __stdcall get_DimConstrReference (
        /*[out,retval]*/ VARIANT_BOOL * bIsReference ) = 0;
      virtual HRESULT __stdcall put_DimConstrReference (
        /*[in]*/ VARIANT_BOOL bIsReference ) = 0;
      virtual HRESULT __stdcall get_DimConstrName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_DimConstrName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_DimConstrExpression (
        /*[out,retval]*/ BSTR * bstrExpression ) = 0;
      virtual HRESULT __stdcall put_DimConstrExpression (
        /*[in]*/ BSTR bstrExpression ) = 0;
      virtual HRESULT __stdcall get_DimConstrValue (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_DimConstrValue (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DimConstrDesc (
        /*[out,retval]*/ BSTR * bstrDescription ) = 0;
      virtual HRESULT __stdcall put_DimConstrDesc (
        /*[in]*/ BSTR bstrDescription ) = 0;
};

struct __declspec(uuid("a3aa22e3-7b15-4bda-83fa-80336989010d"))
IAcadExternalReference : IAcadBlockReference
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Path (
        /*[in]*/ BSTR bstrName ) = 0;
};

struct __declspec(uuid("84fed720-777d-479e-9b15-13cd56f96173"))
IAcadTable : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ int * pRows ) = 0;
      virtual HRESULT __stdcall put_Rows (
        /*[in]*/ int pRows ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ int * pColumns ) = 0;
      virtual HRESULT __stdcall put_Columns (
        /*[in]*/ int pColumns ) = 0;
      virtual HRESULT __stdcall get_FlowDirection (
        /*[out,retval]*/ enum AcTableDirection * pFlow ) = 0;
      virtual HRESULT __stdcall put_FlowDirection (
        /*[in]*/ enum AcTableDirection pFlow ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * pWidth ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double pWidth ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * pHeight ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double pHeight ) = 0;
      virtual HRESULT __stdcall get_VertCellMargin (
        /*[out,retval]*/ double * pGap ) = 0;
      virtual HRESULT __stdcall put_VertCellMargin (
        /*[in]*/ double pGap ) = 0;
      virtual HRESULT __stdcall get_HorzCellMargin (
        /*[out,retval]*/ double * pGap ) = 0;
      virtual HRESULT __stdcall put_HorzCellMargin (
        /*[in]*/ double pGap ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall GetColumnWidth (
        /*[in]*/ int col,
        /*[out,retval]*/ double * pWidth ) = 0;
      virtual HRESULT __stdcall SetColumnWidth (
        /*[in]*/ int col,
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall put_ColumnWidth (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall GetRowHeight (
        /*[in]*/ int row,
        /*[out,retval]*/ double * pHeight ) = 0;
      virtual HRESULT __stdcall SetRowHeight (
        /*[in]*/ int row,
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall put_RowHeight (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall GetMinimumColumnWidth (
        /*[in]*/ int col,
        /*[out,retval]*/ double * pWidth ) = 0;
      virtual HRESULT __stdcall GetMinimumRowHeight (
        /*[in]*/ int row,
        /*[out,retval]*/ double * pHeight ) = 0;
      virtual HRESULT __stdcall get_MinimumTableWidth (
        /*[out,retval]*/ double * pWidth ) = 0;
      virtual HRESULT __stdcall get_MinimumTableHeight (
        /*[out,retval]*/ double * pHeight ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ VARIANT * DirectionVector ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ VARIANT DirectionVector ) = 0;
      virtual HRESULT __stdcall get_TitleSuppressed (
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall put_TitleSuppressed (
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall get_HeaderSuppressed (
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall put_HeaderSuppressed (
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall GetAlignment (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ enum AcCellAlignment * pCellAlignment ) = 0;
      virtual HRESULT __stdcall SetAlignment (
        /*[in]*/ int rowTypes,
        /*[in]*/ enum AcCellAlignment cellAlignment ) = 0;
      virtual HRESULT __stdcall GetBackgroundColorNone (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall SetBackgroundColorNone (
        /*[in]*/ int rowTypes,
        /*[in]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall GetBackgroundColor (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetBackgroundColor (
        /*[in]*/ int rowTypes,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetContentColor (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetContentColor (
        /*[in]*/ int rowTypes,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetTextStyle (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall SetTextStyle (
        /*[in]*/ int rowTypes,
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall GetTextHeight (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ double * pTextHeight ) = 0;
      virtual HRESULT __stdcall SetTextHeight (
        /*[in]*/ int rowTypes,
        /*[in]*/ double TextHeight ) = 0;
      virtual HRESULT __stdcall GetGridLineWeight (
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall SetGridLineWeight (
        /*[in]*/ int gridLineTypes,
        /*[in]*/ int rowTypes,
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall GetGridColor (
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetGridColor (
        /*[in]*/ int gridLineTypes,
        /*[in]*/ int rowTypes,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetGridVisibility (
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall SetGridVisibility (
        /*[in]*/ int gridLineTypes,
        /*[in]*/ int rowTypes,
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall get_TableStyleOverrides (
        /*[out,retval]*/ VARIANT * pIntArray ) = 0;
      virtual HRESULT __stdcall ClearTableStyleOverrides (
        /*[in]*/ int flag ) = 0;
      virtual HRESULT __stdcall GetCellType (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ enum AcCellType * pCellType ) = 0;
      virtual HRESULT __stdcall SetCellType (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ enum AcCellType CellType ) = 0;
      virtual HRESULT __stdcall GetCellExtents (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ VARIANT_BOOL bOuterCell,
        /*[out,retval]*/ VARIANT * pPts ) = 0;
      virtual HRESULT __stdcall GetAttachmentPoint (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ VARIANT * pAttachmentPoint ) = 0;
      virtual HRESULT __stdcall GetCellAlignment (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ enum AcCellAlignment * pCellAlignment ) = 0;
      virtual HRESULT __stdcall SetCellAlignment (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ enum AcCellAlignment cellAlignment ) = 0;
      virtual HRESULT __stdcall GetCellBackgroundColorNone (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall SetCellBackgroundColorNone (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall GetCellBackgroundColor (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetCellBackgroundColor (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetCellContentColor (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetCellContentColor (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetCellStyleOverrides (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ VARIANT * pIntArray ) = 0;
      virtual HRESULT __stdcall DeleteCellContent (
        /*[in]*/ int row,
        /*[in]*/ int col ) = 0;
      virtual HRESULT __stdcall GetRowType (
        /*[in]*/ int row,
        /*[out,retval]*/ enum AcRowType * pRowType ) = 0;
      virtual HRESULT __stdcall GetText (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ BSTR * pStr ) = 0;
      virtual HRESULT __stdcall SetText (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ BSTR pStr ) = 0;
      virtual HRESULT __stdcall GetCellTextStyle (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall SetCellTextStyle (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall GetCellTextHeight (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ double * pTextHeight ) = 0;
      virtual HRESULT __stdcall SetCellTextHeight (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ double TextHeight ) = 0;
      virtual HRESULT __stdcall GetTextRotation (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ enum AcRotationAngle * TextRotation ) = 0;
      virtual HRESULT __stdcall SetTextRotation (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ enum AcRotationAngle TextRotation ) = 0;
      virtual HRESULT __stdcall GetAutoScale (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall SetAutoScale (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall GetBlockTableRecordId (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ LONG_PTR * blkId ) = 0;
      virtual HRESULT __stdcall SetBlockTableRecordId (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ LONG_PTR blkId,
        /*[in]*/ VARIANT_BOOL bAutoFit ) = 0;
      virtual HRESULT __stdcall GetBlockScale (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ double * blkScale ) = 0;
      virtual HRESULT __stdcall SetBlockScale (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ double blkScale ) = 0;
      virtual HRESULT __stdcall GetBlockRotation (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ double * blkRotation ) = 0;
      virtual HRESULT __stdcall SetBlockRotation (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ double blkRotation ) = 0;
      virtual HRESULT __stdcall GetBlockAttributeValue (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ LONG_PTR attdefId,
        /*[out,retval]*/ BSTR * bstrValue ) = 0;
      virtual HRESULT __stdcall SetBlockAttributeValue (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ LONG_PTR attdefId,
        /*[in]*/ BSTR bstrValue ) = 0;
      virtual HRESULT __stdcall GetCellGridLineWeight (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ enum AcCellEdgeMask edge,
        /*[out,retval]*/ ACAD_LWEIGHT * plineweight ) = 0;
      virtual HRESULT __stdcall SetCellGridLineWeight (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ int edges,
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall GetCellGridColor (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ enum AcCellEdgeMask edge,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetCellGridColor (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ int edges,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetCellGridVisibility (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ enum AcCellEdgeMask edge,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall SetCellGridVisibility (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ int edges,
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall InsertColumns (
        /*[in]*/ int col,
        /*[in]*/ double Width,
        /*[in]*/ int cols ) = 0;
      virtual HRESULT __stdcall DeleteColumns (
        /*[in]*/ int col,
        /*[in]*/ int cols ) = 0;
      virtual HRESULT __stdcall InsertRows (
        /*[in]*/ int row,
        /*[in]*/ double Height,
        /*[in]*/ int Rows ) = 0;
      virtual HRESULT __stdcall DeleteRows (
        /*[in]*/ int row,
        /*[in]*/ int Rows ) = 0;
      virtual HRESULT __stdcall MergeCells (
        /*[in]*/ int minRow,
        /*[in]*/ int maxRow,
        /*[in]*/ int minCol,
        /*[in]*/ int maxCol ) = 0;
      virtual HRESULT __stdcall UnmergeCells (
        /*[in]*/ int minRow,
        /*[in]*/ int maxRow,
        /*[in]*/ int minCol,
        /*[in]*/ int maxCol ) = 0;
      virtual HRESULT __stdcall IsMergedCell (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out]*/ int * minRow,
        /*[out]*/ int * maxRow,
        /*[out]*/ int * minCol,
        /*[out]*/ int * maxCol,
        /*[out,retval]*/ VARIANT_BOOL * pbValue ) = 0;
      virtual HRESULT __stdcall GetFieldId (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ LONG_PTR * fieldId ) = 0;
      virtual HRESULT __stdcall SetFieldId (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ LONG_PTR fieldId ) = 0;
      virtual HRESULT __stdcall GenerateLayout ( ) = 0;
      virtual HRESULT __stdcall RecomputeTableBlock (
        /*[in]*/ VARIANT_BOOL bForceUpdate ) = 0;
      virtual HRESULT __stdcall HitTest (
        /*[in]*/ VARIANT wpt,
        /*[in]*/ VARIANT wviewVec,
        /*[out]*/ int * resultRowIndex,
        /*[out]*/ int * resultColumnIndex,
        /*[out,retval]*/ VARIANT_BOOL * bReturn ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT wpt,
        /*[in]*/ VARIANT wvwVec,
        /*[in]*/ VARIANT wvwxVec,
        /*[in]*/ double wxaper,
        /*[in]*/ double wyaper,
        /*[in]*/ VARIANT_BOOL allowOutside,
        /*[out]*/ int * resultRowIndex,
        /*[out]*/ int * resultColumnIndex ) = 0;
      virtual HRESULT __stdcall SelectSubRegion (
        /*[in]*/ VARIANT wpt1,
        /*[in]*/ VARIANT wpt2,
        /*[in]*/ VARIANT wvwVec,
        /*[in]*/ VARIANT wvwxVec,
        /*[in]*/ enum AcSelectType seltype,
        /*[in]*/ VARIANT_BOOL bIncludeCurrentSelection,
        /*[out]*/ int * rowMin,
        /*[out]*/ int * rowMax,
        /*[out]*/ int * colMin,
        /*[out]*/ int * colMax ) = 0;
      virtual HRESULT __stdcall ReselectSubRegion ( ) = 0;
      virtual HRESULT __stdcall GetSubSelection (
        /*[out]*/ int * rowMin,
        /*[out]*/ int * rowMax,
        /*[out]*/ int * colMin,
        /*[out]*/ int * colMax ) = 0;
      virtual HRESULT __stdcall SetSubSelection (
        /*[in]*/ int rowMin,
        /*[in]*/ int rowMax,
        /*[in]*/ int colMin,
        /*[in]*/ int colMax ) = 0;
      virtual HRESULT __stdcall ClearSubSelection ( ) = 0;
      virtual HRESULT __stdcall get_HasSubSelection (
        /*[out,retval]*/ VARIANT_BOOL * pbValue ) = 0;
      virtual HRESULT __stdcall get_RegenerateTableSuppressed (
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall put_RegenerateTableSuppressed (
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall GetDataType (
        /*[in]*/ enum AcRowType rowType,
        /*[out]*/ enum AcValueDataType * pDataType,
        /*[out]*/ enum AcValueUnitType * pUnitType ) = 0;
      virtual HRESULT __stdcall SetDataType (
        /*[in]*/ int rowTypes,
        /*[in]*/ enum AcValueDataType dataType,
        /*[in]*/ enum AcValueUnitType unitType ) = 0;
      virtual HRESULT __stdcall GetFormat (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ BSTR * pFormat ) = 0;
      virtual HRESULT __stdcall SetFormat (
        /*[in]*/ int rowTypes,
        BSTR pFormat ) = 0;
      virtual HRESULT __stdcall FormatValue (
        /*[in]*/ int row,
        /*[in]*/ int col,
        enum AcFormatOption nOption,
        BSTR * pVal ) = 0;
      virtual HRESULT __stdcall GetCellDataType (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out]*/ enum AcValueDataType * pDataType,
        /*[out]*/ enum AcValueUnitType * pUnitType ) = 0;
      virtual HRESULT __stdcall SetCellDataType (
        /*[in]*/ int row,
        /*[in]*/ int col,
        enum AcValueDataType dataType,
        enum AcValueUnitType unitType ) = 0;
      virtual HRESULT __stdcall GetCellFormat (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ BSTR * pFormat ) = 0;
      virtual HRESULT __stdcall SetCellFormat (
        /*[in]*/ int row,
        /*[in]*/ int col,
        BSTR pFormat ) = 0;
      virtual HRESULT __stdcall GetCellValue (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall SetCellValue (
        /*[in]*/ int row,
        /*[in]*/ int col,
        VARIANT val ) = 0;
      virtual HRESULT __stdcall SetCellValueFromText (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ BSTR val,
        /*[in]*/ enum AcParseOption nOption ) = 0;
      virtual HRESULT __stdcall ResetCellValue (
        /*[in]*/ int row,
        /*[in]*/ int col ) = 0;
      virtual HRESULT __stdcall IsEmpty (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall CreateContent (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nIndex,
        /*[out,retval]*/ int * pInt ) = 0;
      virtual HRESULT __stdcall MoveContent (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nFromIndex,
        /*[in]*/ int nToIndex ) = 0;
      virtual HRESULT __stdcall DeleteContent (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol ) = 0;
      virtual HRESULT __stdcall GetValue (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ VARIANT * pAcValue ) = 0;
      virtual HRESULT __stdcall SetValue (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ VARIANT acValue ) = 0;
      virtual HRESULT __stdcall SetValueFromText (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ BSTR szText,
        /*[in]*/ enum AcParseOption nOption ) = 0;
      virtual HRESULT __stdcall GetDataFormat (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ BSTR * pValue ) = 0;
      virtual HRESULT __stdcall SetDataFormat (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ BSTR szFormat ) = 0;
      virtual HRESULT __stdcall GetTextString (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ BSTR * pTextString ) = 0;
      virtual HRESULT __stdcall SetTextString (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall GetFieldId2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ LONG_PTR * pAcDbObjectId ) = 0;
      virtual HRESULT __stdcall SetFieldId2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ LONG_PTR acDbObjectId,
        /*[in]*/ enum AcCellOption nflag ) = 0;
      virtual HRESULT __stdcall GetBlockTableRecordId2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ LONG_PTR * pAcDbObjectId ) = 0;
      virtual HRESULT __stdcall SetBlockTableRecordId2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ LONG_PTR blkId,
        /*[in]*/ VARIANT_BOOL autoFit ) = 0;
      virtual HRESULT __stdcall GetBlockAttributeValue2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ LONG_PTR blkId,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall SetBlockAttributeValue2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ LONG_PTR blkId,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall GetCustomData (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ BSTR szKey,
        /*[out]*/ VARIANT * pData ) = 0;
      virtual HRESULT __stdcall SetCustomData (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ BSTR szKey,
        /*[in]*/ VARIANT data ) = 0;
      virtual HRESULT __stdcall GetCellStyle (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[out,retval]*/ BSTR * pCellStyle ) = 0;
      virtual HRESULT __stdcall SetCellStyle (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ BSTR szCellStyle ) = 0;
      virtual HRESULT __stdcall GetContentColor2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetContentColor2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetDataType2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out]*/ enum AcValueDataType * pDataType,
        /*[out]*/ enum AcValueUnitType * pUnitType ) = 0;
      virtual HRESULT __stdcall SetDataType2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ enum AcValueDataType dataType,
        /*[in]*/ enum AcValueUnitType unitType ) = 0;
      virtual HRESULT __stdcall GetTextStyle2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ BSTR * pbstrStyleName ) = 0;
      virtual HRESULT __stdcall SetTextStyle2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ BSTR bstrStyleName ) = 0;
      virtual HRESULT __stdcall GetTextHeight2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ double * pHeight ) = 0;
      virtual HRESULT __stdcall SetTextHeight2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall GetRotation (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ double * pValue ) = 0;
      virtual HRESULT __stdcall SetRotation (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall GetAutoScale2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ VARIANT_BOOL * bAutoScale ) = 0;
      virtual HRESULT __stdcall SetAutoScale2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ VARIANT_BOOL bAutoFit ) = 0;
      virtual HRESULT __stdcall GetScale (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ double * pScale ) = 0;
      virtual HRESULT __stdcall SetScale (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ double scale ) = 0;
      virtual HRESULT __stdcall RemoveAllOverrides (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol ) = 0;
      virtual HRESULT __stdcall GetGridLineWeight2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[out,retval]*/ ACAD_LWEIGHT * plineweight ) = 0;
      virtual HRESULT __stdcall SetGridLineWeight2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall GetGridLinetype (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[out,retval]*/ LONG_PTR * pacDbObjId ) = 0;
      virtual HRESULT __stdcall SetGridLinetype (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[in]*/ LONG_PTR idLinetype ) = 0;
      virtual HRESULT __stdcall GetGridColor2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetGridColor2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetGridVisibility2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall SetGridVisibility2 (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall GetGridDoubleLineSpacing (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[out,retval]*/ double * pValue ) = 0;
      virtual HRESULT __stdcall SetGridDoubleLineSpacing (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[in]*/ double fSpacing ) = 0;
      virtual HRESULT __stdcall put_EnableBreak (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall GetBreakHeight (
        /*[in]*/ int nIndex,
        /*[out,retval]*/ double * pHeight ) = 0;
      virtual HRESULT __stdcall SetBreakHeight (
        /*[in]*/ int nIndex,
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall GetContentType (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[out,retval]*/ enum AcCellContentType * pType ) = 0;
      virtual HRESULT __stdcall GetMargin (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcCellMargin nMargin,
        /*[out,retval]*/ double * pValue ) = 0;
      virtual HRESULT __stdcall SetMargin (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcCellMargin nMargins,
        /*[in]*/ double fMargin ) = 0;
      virtual HRESULT __stdcall GetContentLayout (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[out,retval]*/ enum AcCellContentLayout * pLayout ) = 0;
      virtual HRESULT __stdcall SetContentLayout (
        /*[in]*/ int row,
        /*[in]*/ int col,
        /*[in]*/ enum AcCellContentLayout nLayout ) = 0;
      virtual HRESULT __stdcall GetOverride (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ enum AcCellProperty * pValue ) = 0;
      virtual HRESULT __stdcall SetOverride (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ enum AcCellProperty nProp ) = 0;
      virtual HRESULT __stdcall GetGridLineStyle (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineType,
        /*[out,retval]*/ enum AcGridLineStyle * pStyle ) = 0;
      virtual HRESULT __stdcall SetGridLineStyle (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcGridLineType nGridLineTypes,
        /*[in]*/ enum AcGridLineStyle nLineStyle ) = 0;
      virtual HRESULT __stdcall InsertRowsAndInherit (
        /*[in]*/ int nIndex,
        /*[in]*/ int nInheritFrom,
        /*[in]*/ int nNumRows ) = 0;
      virtual HRESULT __stdcall InsertColumnsAndInherit (
        /*[in]*/ int col,
        /*[in]*/ int nInheritFrom,
        /*[in]*/ int nNumCols ) = 0;
      virtual HRESULT __stdcall GetHasFormula (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall GetFormula (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[out,retval]*/ BSTR * pszFormula ) = 0;
      virtual HRESULT __stdcall SetFormula (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ int nContent,
        /*[in]*/ BSTR pszFormula ) = 0;
      virtual HRESULT __stdcall IsContentEditable (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall IsFormatEditable (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall GetCellState (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[out,retval]*/ enum AcCellState * pCellState ) = 0;
      virtual HRESULT __stdcall SetCellState (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ enum AcCellState nLock ) = 0;
      virtual HRESULT __stdcall EnableMergeAll (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ VARIANT_BOOL bEnable ) = 0;
      virtual HRESULT __stdcall IsMergeAllEnabled (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall get_BreaksEnabled (
        /*[out,retval]*/ VARIANT_BOOL * bEnabled ) = 0;
      virtual HRESULT __stdcall put_BreaksEnabled (
        /*[in]*/ VARIANT_BOOL bEnabled ) = 0;
      virtual HRESULT __stdcall get_RepeatTopLabels (
        /*[out,retval]*/ VARIANT_BOOL * bEnabled ) = 0;
      virtual HRESULT __stdcall put_RepeatTopLabels (
        /*[in]*/ VARIANT_BOOL bEnabled ) = 0;
      virtual HRESULT __stdcall get_RepeatBottomLabels (
        /*[out,retval]*/ VARIANT_BOOL * bEnabled ) = 0;
      virtual HRESULT __stdcall put_RepeatBottomLabels (
        /*[in]*/ VARIANT_BOOL bEnabled ) = 0;
      virtual HRESULT __stdcall get_TableBreakFlowDirection (
        /*[out,retval]*/ enum AcTableFlowDirection * pDir ) = 0;
      virtual HRESULT __stdcall put_TableBreakFlowDirection (
        /*[in]*/ enum AcTableFlowDirection pDir ) = 0;
      virtual HRESULT __stdcall get_AllowManualPositions (
        /*[out,retval]*/ VARIANT_BOOL * bEnabled ) = 0;
      virtual HRESULT __stdcall put_AllowManualPositions (
        /*[in]*/ VARIANT_BOOL bEnabled ) = 0;
      virtual HRESULT __stdcall get_AllowManualHeights (
        /*[out,retval]*/ VARIANT_BOOL * bEnabled ) = 0;
      virtual HRESULT __stdcall put_AllowManualHeights (
        /*[in]*/ VARIANT_BOOL bEnabled ) = 0;
      virtual HRESULT __stdcall get_TableBreakHeight (
        /*[out,retval]*/ double * pHeight ) = 0;
      virtual HRESULT __stdcall put_TableBreakHeight (
        /*[in]*/ double pHeight ) = 0;
      virtual HRESULT __stdcall get_BreakSpacing (
        /*[out,retval]*/ double * pSpacing ) = 0;
      virtual HRESULT __stdcall put_BreakSpacing (
        /*[in]*/ double pSpacing ) = 0;
      virtual HRESULT __stdcall GetColumnName (
        /*[in]*/ int nIndex,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall SetColumnName (
        /*[in]*/ int nIndex,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall SetToolTip (
        /*[in]*/ int nRow,
        /*[in]*/ int nCol,
        /*[in]*/ BSTR tip ) = 0;
};

struct __declspec(uuid("84618c65-48f9-450e-bbeb-7149909c0ce4"))
IAcadDimArcLength : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AltUnits (
        /*[out,retval]*/ VARIANT_BOOL * bAlternate ) = 0;
      virtual HRESULT __stdcall put_AltUnits (
        /*[in]*/ VARIANT_BOOL bAlternate ) = 0;
      virtual HRESULT __stdcall get_AltUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_AltUnitsPrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_AltUnitsScale (
        /*[out,retval]*/ ACAD_NOUNITS * scale ) = 0;
      virtual HRESULT __stdcall put_AltUnitsScale (
        /*[in]*/ ACAD_NOUNITS scale ) = 0;
      virtual HRESULT __stdcall get_AltRoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_AltRoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_AltTolerancePrecision (
        /*[out,retval]*/ enum AcDimPrecision * Distance ) = 0;
      virtual HRESULT __stdcall put_AltTolerancePrecision (
        /*[in]*/ enum AcDimPrecision Distance ) = 0;
      virtual HRESULT __stdcall get_AltUnitsFormat (
        /*[out,retval]*/ enum AcDimUnits * Units ) = 0;
      virtual HRESULT __stdcall put_AltUnitsFormat (
        /*[in]*/ enum AcDimUnits Units ) = 0;
      virtual HRESULT __stdcall get_AltTextPrefix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextPrefix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_AltTextSuffix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextSuffix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_PrimaryUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * Prec ) = 0;
      virtual HRESULT __stdcall put_PrimaryUnitsPrecision (
        /*[in]*/ enum AcDimPrecision Prec ) = 0;
      virtual HRESULT __stdcall get_DimensionLineExtend (
        /*[out,retval]*/ double * extend ) = 0;
      virtual HRESULT __stdcall put_DimensionLineExtend (
        /*[in]*/ double extend ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineExtend (
        /*[out,retval]*/ double * extend ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineExtend (
        /*[in]*/ double extend ) = 0;
      virtual HRESULT __stdcall get_Fit (
        /*[out,retval]*/ enum AcDimFit * fittype ) = 0;
      virtual HRESULT __stdcall put_Fit (
        /*[in]*/ enum AcDimFit fittype ) = 0;
      virtual HRESULT __stdcall get_FractionFormat (
        /*[out,retval]*/ enum AcDimFractionType * Type ) = 0;
      virtual HRESULT __stdcall put_FractionFormat (
        /*[in]*/ enum AcDimFractionType Type ) = 0;
      virtual HRESULT __stdcall get_HorizontalTextPosition (
        /*[out,retval]*/ enum AcDimHorizontalJustification * Type ) = 0;
      virtual HRESULT __stdcall put_HorizontalTextPosition (
        /*[in]*/ enum AcDimHorizontalJustification Type ) = 0;
      virtual HRESULT __stdcall get_LinearScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * Type ) = 0;
      virtual HRESULT __stdcall put_LinearScaleFactor (
        /*[in]*/ ACAD_NOUNITS Type ) = 0;
      virtual HRESULT __stdcall get_UnitsFormat (
        /*[out,retval]*/ enum AcDimLUnits * format ) = 0;
      virtual HRESULT __stdcall put_UnitsFormat (
        /*[in]*/ enum AcDimLUnits format ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * lweight ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT lweight ) = 0;
      virtual HRESULT __stdcall get_RoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_RoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_DimLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_DimLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_DimLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ForceLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_ForceLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextOutsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextOutsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_AltSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Type (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Type (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ double * bVal ) = 0;
      virtual HRESULT __stdcall get_Arrowhead1Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead1Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_Arrowhead2Block (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_Arrowhead2Block (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_ArcPoint (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ArcPoint (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Point (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Point (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Point (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Point (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_CenterPoint (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_CenterPoint (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Leader1Point (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Leader1Point (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Leader2Point (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Leader2Point (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_IsPartial (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IsPartial (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ArcStartParam (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ArcStartParam (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_ArcEndParam (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_ArcEndParam (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_HasLeader (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_HasLeader (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SymbolPosition (
        /*[out,retval]*/ enum AcDimArcLengthSymbol * Position ) = 0;
      virtual HRESULT __stdcall put_SymbolPosition (
        /*[in]*/ enum AcDimArcLengthSymbol Position ) = 0;
      virtual HRESULT __stdcall get_DimensionLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_DimensionLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine1Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine1Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLine2Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_ExtLine2Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLenSuppress (
        /*[out,retval]*/ VARIANT_BOOL * bFixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLenSuppress (
        /*[in]*/ VARIANT_BOOL bFixedLen ) = 0;
      virtual HRESULT __stdcall get_ExtLineFixedLen (
        /*[out,retval]*/ double * FixedLen ) = 0;
      virtual HRESULT __stdcall put_ExtLineFixedLen (
        /*[in]*/ double FixedLen ) = 0;
      virtual HRESULT __stdcall get_SubUnitsSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_SubUnitsSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_SubUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_SubUnitsFactor (
        /*[in]*/ double factor ) = 0;
      virtual HRESULT __stdcall get_AltSubUnitsSuffix (
        /*[out,retval]*/ BSTR * suffix ) = 0;
      virtual HRESULT __stdcall put_AltSubUnitsSuffix (
        /*[in]*/ BSTR suffix ) = 0;
      virtual HRESULT __stdcall get_AltSubUnitsFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_AltSubUnitsFactor (
        /*[in]*/ double factor ) = 0;
};

struct __declspec(uuid("fbd4807f-e100-4326-ae79-ff93f5dfc2f3"))
IAcadDimRadialLarge : IAcadDimension
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AltUnits (
        /*[out,retval]*/ VARIANT_BOOL * bAlternate ) = 0;
      virtual HRESULT __stdcall put_AltUnits (
        /*[in]*/ VARIANT_BOOL bAlternate ) = 0;
      virtual HRESULT __stdcall get_AltUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * precision ) = 0;
      virtual HRESULT __stdcall put_AltUnitsPrecision (
        /*[in]*/ enum AcDimPrecision precision ) = 0;
      virtual HRESULT __stdcall get_AltUnitsScale (
        /*[out,retval]*/ ACAD_NOUNITS * scale ) = 0;
      virtual HRESULT __stdcall put_AltUnitsScale (
        /*[in]*/ ACAD_NOUNITS scale ) = 0;
      virtual HRESULT __stdcall get_AltRoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_AltRoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_AltTolerancePrecision (
        /*[out,retval]*/ enum AcDimPrecision * Distance ) = 0;
      virtual HRESULT __stdcall put_AltTolerancePrecision (
        /*[in]*/ enum AcDimPrecision Distance ) = 0;
      virtual HRESULT __stdcall get_AltUnitsFormat (
        /*[out,retval]*/ enum AcDimUnits * Units ) = 0;
      virtual HRESULT __stdcall put_AltUnitsFormat (
        /*[in]*/ enum AcDimUnits Units ) = 0;
      virtual HRESULT __stdcall get_AltTextPrefix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextPrefix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_AltTextSuffix (
        /*[out,retval]*/ BSTR * prefix ) = 0;
      virtual HRESULT __stdcall put_AltTextSuffix (
        /*[in]*/ BSTR prefix ) = 0;
      virtual HRESULT __stdcall get_CenterType (
        /*[out,retval]*/ enum AcDimCenterType * Type ) = 0;
      virtual HRESULT __stdcall put_CenterType (
        /*[in]*/ enum AcDimCenterType Type ) = 0;
      virtual HRESULT __stdcall get_CenterMarkSize (
        /*[out,retval]*/ double * Type ) = 0;
      virtual HRESULT __stdcall put_CenterMarkSize (
        /*[in]*/ double Type ) = 0;
      virtual HRESULT __stdcall get_DimensionLineColor (
        /*[out,retval]*/ ACAD_COLOR * Type ) = 0;
      virtual HRESULT __stdcall put_DimensionLineColor (
        /*[in]*/ ACAD_COLOR Type ) = 0;
      virtual HRESULT __stdcall get_PrimaryUnitsPrecision (
        /*[out,retval]*/ enum AcDimPrecision * Prec ) = 0;
      virtual HRESULT __stdcall put_PrimaryUnitsPrecision (
        /*[in]*/ enum AcDimPrecision Prec ) = 0;
      virtual HRESULT __stdcall get_FractionFormat (
        /*[out,retval]*/ enum AcDimFractionType * Type ) = 0;
      virtual HRESULT __stdcall put_FractionFormat (
        /*[in]*/ enum AcDimFractionType Type ) = 0;
      virtual HRESULT __stdcall get_Fit (
        /*[out,retval]*/ enum AcDimFit * fittype ) = 0;
      virtual HRESULT __stdcall put_Fit (
        /*[in]*/ enum AcDimFit fittype ) = 0;
      virtual HRESULT __stdcall get_LinearScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * Type ) = 0;
      virtual HRESULT __stdcall put_LinearScaleFactor (
        /*[in]*/ ACAD_NOUNITS Type ) = 0;
      virtual HRESULT __stdcall get_UnitsFormat (
        /*[out,retval]*/ enum AcDimLUnits * format ) = 0;
      virtual HRESULT __stdcall put_UnitsFormat (
        /*[in]*/ enum AcDimLUnits format ) = 0;
      virtual HRESULT __stdcall get_RoundDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_RoundDistance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_DimLineSuppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_DimLineSuppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_TextInsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_ForceLineInside (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_ForceLineInside (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_TextOutsideAlign (
        /*[out,retval]*/ VARIANT_BOOL * bInside ) = 0;
      virtual HRESULT __stdcall put_TextOutsideAlign (
        /*[in]*/ VARIANT_BOOL bInside ) = 0;
      virtual HRESULT __stdcall get_AltSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressLeadingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressTrailingZeros (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_AltToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_AltToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_SuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_SuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroFeet (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroFeet (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_ToleranceSuppressZeroInches (
        /*[out,retval]*/ VARIANT_BOOL * bVal ) = 0;
      virtual HRESULT __stdcall put_ToleranceSuppressZeroInches (
        /*[in]*/ VARIANT_BOOL bVal ) = 0;
      virtual HRESULT __stdcall get_DimensionLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * weight ) = 0;
      virtual HRESULT __stdcall put_DimensionLineWeight (
        /*[in]*/ ACAD_LWEIGHT weight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_ArrowheadType (
        /*[out,retval]*/ enum AcDimArrowheadType * Type ) = 0;
      virtual HRESULT __stdcall put_ArrowheadType (
        /*[in]*/ enum AcDimArrowheadType Type ) = 0;
      virtual HRESULT __stdcall get_Measurement (
        /*[out,retval]*/ double * bVal ) = 0;
      virtual HRESULT __stdcall get_ArrowheadBlock (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_ArrowheadBlock (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_OverrideCenter (
        /*[out,retval]*/ VARIANT * overrideCenterPos ) = 0;
      virtual HRESULT __stdcall put_OverrideCenter (
        /*[in]*/ VARIANT overrideCenterPos ) = 0;
      virtual HRESULT __stdcall get_JogLocation (
        /*[out,retval]*/ VARIANT * jogPos ) = 0;
      virtual HRESULT __stdcall put_JogLocation (
        /*[in]*/ VARIANT jogPos ) = 0;
      virtual HRESULT __stdcall get_JogAngle (
        /*[out,retval]*/ ACAD_ANGLE * JogAngle ) = 0;
      virtual HRESULT __stdcall put_JogAngle (
        /*[in]*/ ACAD_ANGLE JogAngle ) = 0;
      virtual HRESULT __stdcall get_Center (
        /*[out,retval]*/ VARIANT * pVar ) = 0;
      virtual HRESULT __stdcall put_Center (
        /*[in]*/ VARIANT pVar ) = 0;
      virtual HRESULT __stdcall get_ChordPoint (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ChordPoint (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DimensionLinetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_DimensionLinetype (
        /*[in]*/ BSTR Linetype ) = 0;
};

struct __declspec(uuid("a240ec7f-14cf-4da1-b3d4-74b9062895da"))
IAcadSectionSettings : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CurrentSectionType (
        /*[out,retval]*/ enum AcSectionType * pVal ) = 0;
      virtual HRESULT __stdcall put_CurrentSectionType (
        /*[in]*/ enum AcSectionType pVal ) = 0;
      virtual HRESULT __stdcall GetSectionTypeSettings (
        /*[in]*/ enum AcSectionType secType,
        /*[out,retval]*/ struct IAcadSectionTypeSettings * * pUnk ) = 0;
};

struct __declspec(uuid("23ab4987-f991-408c-a2e9-1c77b50befc3"))
IAcadSection : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pbstrName ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum AcSectionState * pVal ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum AcSectionState pVal ) = 0;
      virtual HRESULT __stdcall get_ViewingDirection (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_ViewingDirection (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VerticalDirection (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_VerticalDirection (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_LiveSectionEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_LiveSectionEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IndicatorTransparency (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall put_IndicatorTransparency (
        /*[in]*/ int pVal ) = 0;
      virtual HRESULT __stdcall get_IndicatorFillColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_IndicatorFillColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_Elevation (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Elevation (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TopHeight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_TopHeight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_BottomHeight (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_BottomHeight (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_NumVertices (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Vertices (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall AddVertex (
        /*[in]*/ int nIndex,
        /*[in]*/ VARIANT val ) = 0;
      virtual HRESULT __stdcall RemoveVertex (
        /*[in]*/ int nIndex ) = 0;
      virtual HRESULT __stdcall HitTest (
        /*[in]*/ VARIANT varPtHit,
        /*[out]*/ VARIANT_BOOL * pHit,
        /*[out]*/ int * pSegmentIndex,
        /*[out]*/ VARIANT * pPtOnSegment,
        /*[out]*/ enum AcSectionSubItem * pSubItem ) = 0;
      virtual HRESULT __stdcall CreateJog (
        /*[in]*/ VARIANT varPt ) = 0;
      virtual HRESULT __stdcall get_Settings (
        /*[out,retval]*/ struct IAcadSectionSettings * * pUnk ) = 0;
      virtual HRESULT __stdcall GenerateSectionGeometry (
        /*[in]*/ struct IAcadEntity * pEntity,
        /*[out]*/ VARIANT * pIntersectionBoundaryObjs,
        /*[out]*/ VARIANT * pIntersectionFillObjs,
        /*[out]*/ VARIANT * pBackgroudnObjs,
        /*[out]*/ VARIANT * pForegroudObjs,
        /*[out]*/ VARIANT * pCurveTangencyObjs ) = 0;
};

struct __declspec(uuid("8ee08989-6f86-4685-99c4-3f48a1242bd8"))
IAcadMLeader : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ double * scale ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ double scale ) = 0;
      virtual HRESULT __stdcall get_LeaderType (
        /*[out,retval]*/ enum AcMLeaderType * Type ) = 0;
      virtual HRESULT __stdcall put_LeaderType (
        /*[in]*/ enum AcMLeaderType Type ) = 0;
      virtual HRESULT __stdcall get_LeaderLineColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * Type ) = 0;
      virtual HRESULT __stdcall put_LeaderLineColor (
        /*[in]*/ struct IAcadAcCmColor * Type ) = 0;
      virtual HRESULT __stdcall get_LeaderLinetype (
        /*[out,retval]*/ ACAD_LTYPE * Linetype ) = 0;
      virtual HRESULT __stdcall put_LeaderLinetype (
        /*[in]*/ ACAD_LTYPE Linetype ) = 0;
      virtual HRESULT __stdcall get_LeaderLineWeight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_LeaderLineWeight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall get_ArrowheadType (
        /*[out,retval]*/ enum AcDimArrowheadType * BlockName ) = 0;
      virtual HRESULT __stdcall put_ArrowheadType (
        /*[in]*/ enum AcDimArrowheadType BlockName ) = 0;
      virtual HRESULT __stdcall get_ArrowheadSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowheadSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_DogLegged (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_DogLegged (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_DoglegLength (
        /*[out,retval]*/ double * DoglegLength ) = 0;
      virtual HRESULT __stdcall put_DoglegLength (
        /*[in]*/ double DoglegLength ) = 0;
      virtual HRESULT __stdcall get_ContentBlockName (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_ContentBlockName (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_BlockConnectionType (
        /*[out,retval]*/ enum AcBlockConnectionType * Type ) = 0;
      virtual HRESULT __stdcall put_BlockConnectionType (
        /*[in]*/ enum AcBlockConnectionType Type ) = 0;
      virtual HRESULT __stdcall get_BlockScale (
        /*[out,retval]*/ ACAD_NOUNITS * factor ) = 0;
      virtual HRESULT __stdcall put_BlockScale (
        /*[in]*/ ACAD_NOUNITS factor ) = 0;
      virtual HRESULT __stdcall get_TextString (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
      virtual HRESULT __stdcall put_TextString (
        /*[in]*/ BSTR bstrText ) = 0;
      virtual HRESULT __stdcall get_TextStyleName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_TextStyleName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_TextJustify (
        /*[out,retval]*/ enum AcAttachmentPoint * attPoint ) = 0;
      virtual HRESULT __stdcall put_TextJustify (
        /*[in]*/ enum AcAttachmentPoint attPoint ) = 0;
      virtual HRESULT __stdcall get_TextDirection (
        /*[out,retval]*/ enum AcDrawingDirection * drawDir ) = 0;
      virtual HRESULT __stdcall put_TextDirection (
        /*[in]*/ enum AcDrawingDirection drawDir ) = 0;
      virtual HRESULT __stdcall get_TextWidth (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_TextWidth (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_TextHeight (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_TextHeight (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_TextRotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_TextRotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_TextLineSpacingFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_TextLineSpacingFactor (
        /*[in]*/ double factor ) = 0;
      virtual HRESULT __stdcall get_TextLineSpacingDistance (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TextLineSpacingDistance (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TextLineSpacingStyle (
        /*[out,retval]*/ enum AcLineSpacingStyle * style ) = 0;
      virtual HRESULT __stdcall put_TextLineSpacingStyle (
        /*[in]*/ enum AcLineSpacingStyle style ) = 0;
      virtual HRESULT __stdcall get_TextBackgroundFill (
        /*[out,retval]*/ VARIANT_BOOL * bUseBackgroundFill ) = 0;
      virtual HRESULT __stdcall put_TextBackgroundFill (
        /*[in]*/ VARIANT_BOOL bUseBackgroundFill ) = 0;
      virtual HRESULT __stdcall get_TextAttachmentDirection (
        /*[out,retval]*/ enum AcTextAttachmentDirection * dir ) = 0;
      virtual HRESULT __stdcall put_TextAttachmentDirection (
        /*[in]*/ enum AcTextAttachmentDirection dir ) = 0;
      virtual HRESULT __stdcall get_TextLeftAttachmentType (
        /*[out,retval]*/ enum AcTextAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextLeftAttachmentType (
        /*[in]*/ enum AcTextAttachmentType Type ) = 0;
      virtual HRESULT __stdcall get_TextRightAttachmentType (
        /*[out,retval]*/ enum AcTextAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextRightAttachmentType (
        /*[in]*/ enum AcTextAttachmentType Type ) = 0;
      virtual HRESULT __stdcall get_TextTopAttachmentType (
        /*[out,retval]*/ enum AcVerticalTextAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextTopAttachmentType (
        /*[in]*/ enum AcVerticalTextAttachmentType Type ) = 0;
      virtual HRESULT __stdcall get_TextBottomAttachmentType (
        /*[out,retval]*/ enum AcVerticalTextAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextBottomAttachmentType (
        /*[in]*/ enum AcVerticalTextAttachmentType Type ) = 0;
      virtual HRESULT __stdcall get_LandingGap (
        /*[out,retval]*/ double * gap ) = 0;
      virtual HRESULT __stdcall put_LandingGap (
        /*[in]*/ double gap ) = 0;
      virtual HRESULT __stdcall get_ArrowheadBlock (
        /*[out,retval]*/ BSTR * BlockName ) = 0;
      virtual HRESULT __stdcall put_ArrowheadBlock (
        /*[in]*/ BSTR BlockName ) = 0;
      virtual HRESULT __stdcall get_ContentBlockType (
        /*[out,retval]*/ enum AcPredefBlockType * Type ) = 0;
      virtual HRESULT __stdcall put_ContentBlockType (
        /*[in]*/ enum AcPredefBlockType Type ) = 0;
      virtual HRESULT __stdcall get_LeaderCount (
        /*[out,retval]*/ int * number ) = 0;
      virtual HRESULT __stdcall AddLeader (
        /*[out,retval]*/ int * leaderIndex ) = 0;
      virtual HRESULT __stdcall RemoveLeader (
        /*[in]*/ int leaderIndex ) = 0;
      virtual HRESULT __stdcall AddLeaderLine (
        /*[in]*/ int leaderIndex,
        /*[in]*/ VARIANT pointArray,
        /*[out,retval]*/ int * leaderLineIndex ) = 0;
      virtual HRESULT __stdcall AddLeaderLineEx (
        /*[in]*/ VARIANT pointArray,
        /*[out,retval]*/ int * leaderLineIndex ) = 0;
      virtual HRESULT __stdcall RemoveLeaderLine (
        /*[in]*/ int leaderLineIndex ) = 0;
      virtual HRESULT __stdcall SetLeaderLineVertices (
        /*[in]*/ int leaderLineIndex,
        /*[in]*/ VARIANT pointArray ) = 0;
      virtual HRESULT __stdcall GetLeaderLineVertices (
        /*[in]*/ int leaderLineIndex,
        /*[out,retval]*/ VARIANT * pointArray ) = 0;
      virtual HRESULT __stdcall put_ContentType (
        /*[in]*/ enum AcMLeaderContentType Type ) = 0;
      virtual HRESULT __stdcall get_ContentType (
        /*[out,retval]*/ enum AcMLeaderContentType * Type ) = 0;
      virtual HRESULT __stdcall GetLeaderIndex (
        /*[in]*/ int leaderLineIndex,
        /*[out,retval]*/ int * leaderIndex ) = 0;
      virtual HRESULT __stdcall GetLeaderLineIndexes (
        /*[in]*/ int leaderIndex,
        /*[out,retval]*/ VARIANT * leaderLineIndexes ) = 0;
      virtual HRESULT __stdcall GetVertexCount (
        /*[in]*/ int leaderLineIndex,
        /*[out,retval]*/ int * number ) = 0;
      virtual HRESULT __stdcall get_TextFrameDisplay (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_TextFrameDisplay (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall GetDoglegDirection (
        /*[in]*/ int leaderIndex,
        /*[out,retval]*/ VARIANT * dirVec ) = 0;
      virtual HRESULT __stdcall SetDoglegDirection (
        /*[in]*/ int leaderIndex,
        /*[in]*/ VARIANT dirVec ) = 0;
      virtual HRESULT __stdcall GetBlockAttributeValue (
        /*[in]*/ LONG_PTR attdefId,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall SetBlockAttributeValue (
        /*[in]*/ LONG_PTR attdefId,
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("d886f48c-94ab-4240-877b-a22428d6ffcd"))
IAcadView : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Center (
        /*[out,retval]*/ VARIANT * Center ) = 0;
      virtual HRESULT __stdcall put_Center (
        /*[in]*/ VARIANT Center ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ VARIANT * targetPoint ) = 0;
      virtual HRESULT __stdcall put_Target (
        /*[in]*/ VARIANT targetPoint ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ VARIANT * dirVec ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ VARIANT dirVec ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_CategoryName (
        /*[out,retval]*/ BSTR * category ) = 0;
      virtual HRESULT __stdcall put_CategoryName (
        /*[in]*/ BSTR category ) = 0;
      virtual HRESULT __stdcall get_LayoutId (
        /*[out,retval]*/ LONG_PTR * ObjectID ) = 0;
      virtual HRESULT __stdcall put_LayoutId (
        /*[in]*/ LONG_PTR ObjectID ) = 0;
      virtual HRESULT __stdcall get_LayerState (
        /*[out,retval]*/ BSTR * LayerState ) = 0;
      virtual HRESULT __stdcall put_LayerState (
        /*[in]*/ BSTR LayerState ) = 0;
      virtual HRESULT __stdcall get_HasVpAssociation (
        /*[out,retval]*/ VARIANT_BOOL * bVpAssoc ) = 0;
      virtual HRESULT __stdcall put_HasVpAssociation (
        /*[in]*/ VARIANT_BOOL bVpAssoc ) = 0;
};

struct __declspec(uuid("d71870d2-e2fe-43c5-90fa-8ff4711fc984"))
IAcadPViewport : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Center (
        /*[out,retval]*/ VARIANT * CenterPoint ) = 0;
      virtual HRESULT __stdcall put_Center (
        /*[in]*/ VARIANT CenterPoint ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ VARIANT * dirVector ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ VARIANT dirVector ) = 0;
      virtual HRESULT __stdcall get_GridOn (
        /*[out,retval]*/ VARIANT_BOOL * bGridOn ) = 0;
      virtual HRESULT __stdcall put_GridOn (
        /*[in]*/ VARIANT_BOOL bGridOn ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_ViewportOn (
        /*[out,retval]*/ VARIANT_BOOL * bOn ) = 0;
      virtual HRESULT __stdcall put_ViewportOn (
        /*[in]*/ VARIANT_BOOL bOn ) = 0;
      virtual HRESULT __stdcall get_Clipped (
        /*[out,retval]*/ VARIANT_BOOL * bClipped ) = 0;
      virtual HRESULT __stdcall get_DisplayLocked (
        /*[out,retval]*/ VARIANT_BOOL * bLocked ) = 0;
      virtual HRESULT __stdcall put_DisplayLocked (
        /*[in]*/ VARIANT_BOOL bLocked ) = 0;
      virtual HRESULT __stdcall get_StandardScale (
        /*[out,retval]*/ enum AcViewportScale * scale ) = 0;
      virtual HRESULT __stdcall put_StandardScale (
        /*[in]*/ enum AcViewportScale scale ) = 0;
      virtual HRESULT __stdcall get_CustomScale (
        /*[out,retval]*/ double * scale ) = 0;
      virtual HRESULT __stdcall put_CustomScale (
        /*[in]*/ double scale ) = 0;
      virtual HRESULT __stdcall get_StyleSheet (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_StyleSheet (
        /*[in]*/ BSTR pName ) = 0;
      virtual HRESULT __stdcall get_UCSPerViewport (
        /*[out,retval]*/ VARIANT_BOOL * UCSSaved ) = 0;
      virtual HRESULT __stdcall put_UCSPerViewport (
        /*[in]*/ VARIANT_BOOL UCSSaved ) = 0;
      virtual HRESULT __stdcall get_SnapBasePoint (
        /*[out,retval]*/ VARIANT * lowLeft ) = 0;
      virtual HRESULT __stdcall put_SnapBasePoint (
        /*[in]*/ VARIANT lowLeft ) = 0;
      virtual HRESULT __stdcall get_SnapOn (
        /*[out,retval]*/ VARIANT_BOOL * bSnapOn ) = 0;
      virtual HRESULT __stdcall put_SnapOn (
        /*[in]*/ VARIANT_BOOL bSnapOn ) = 0;
      virtual HRESULT __stdcall get_SnapRotationAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_SnapRotationAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_UCSIconOn (
        /*[out,retval]*/ VARIANT_BOOL * bIconOn ) = 0;
      virtual HRESULT __stdcall put_UCSIconOn (
        /*[in]*/ VARIANT_BOOL bIconOn ) = 0;
      virtual HRESULT __stdcall get_UCSIconAtOrigin (
        /*[out,retval]*/ VARIANT_BOOL * bIconAtOrigin ) = 0;
      virtual HRESULT __stdcall put_UCSIconAtOrigin (
        /*[in]*/ VARIANT_BOOL bIconAtOrigin ) = 0;
      virtual HRESULT __stdcall GetGridSpacing (
        /*[out]*/ double * XSpacing,
        /*[out]*/ double * YSpacing ) = 0;
      virtual HRESULT __stdcall SetGridSpacing (
        /*[in]*/ double XSpacing,
        /*[in]*/ double YSpacing ) = 0;
      virtual HRESULT __stdcall GetSnapSpacing (
        /*[out]*/ double * XSpacing,
        /*[out]*/ double * YSpacing ) = 0;
      virtual HRESULT __stdcall SetSnapSpacing (
        /*[in]*/ double XSpacing,
        /*[in]*/ double YSpacing ) = 0;
      virtual HRESULT __stdcall Display (
        /*[in]*/ VARIANT_BOOL bStatus ) = 0;
      virtual HRESULT __stdcall get_TwistAngle (
        /*[out,retval]*/ ACAD_ANGLE * Angle ) = 0;
      virtual HRESULT __stdcall put_TwistAngle (
        /*[in]*/ ACAD_ANGLE Angle ) = 0;
      virtual HRESULT __stdcall get_LensLength (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_LensLength (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_RemoveHiddenLines (
        /*[out,retval]*/ VARIANT_BOOL * bRemoval ) = 0;
      virtual HRESULT __stdcall put_RemoveHiddenLines (
        /*[in]*/ VARIANT_BOOL bRemoval ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ VARIANT * targetPoint ) = 0;
      virtual HRESULT __stdcall put_Target (
        /*[in]*/ VARIANT targetPoint ) = 0;
      virtual HRESULT __stdcall get_ArcSmoothness (
        /*[out,retval]*/ long * arcSmooth ) = 0;
      virtual HRESULT __stdcall put_ArcSmoothness (
        /*[in]*/ long arcSmooth ) = 0;
      virtual HRESULT __stdcall get_VisualStyle (
        /*[out,retval]*/ int * pVisualStyleIndex ) = 0;
      virtual HRESULT __stdcall put_VisualStyle (
        /*[in]*/ int pVisualStyleIndex ) = 0;
      virtual HRESULT __stdcall get_ShadePlot (
        /*[out,retval]*/ int * pShadePlotIndex ) = 0;
      virtual HRESULT __stdcall put_ShadePlot (
        /*[in]*/ int pShadePlotIndex ) = 0;
      virtual HRESULT __stdcall get_ModelView (
        /*[out,retval]*/ struct IAcadView * * View ) = 0;
      virtual HRESULT __stdcall put_ModelView (
        /*[in]*/ struct IAcadView * View ) = 0;
      virtual HRESULT __stdcall get_SheetView (
        /*[out,retval]*/ struct IAcadView * * View ) = 0;
      virtual HRESULT __stdcall put_SheetView (
        /*[in]*/ struct IAcadView * View ) = 0;
      virtual HRESULT __stdcall get_LabelBlockId (
        /*[out,retval]*/ LONG_PTR * ObjectID ) = 0;
      virtual HRESULT __stdcall put_LabelBlockId (
        /*[in]*/ LONG_PTR * ObjectID ) = 0;
      virtual HRESULT __stdcall get_HasSheetView (
        /*[out,retval]*/ VARIANT_BOOL * bSheetView ) = 0;
      virtual HRESULT __stdcall SyncModelView ( ) = 0;
      virtual HRESULT __stdcall get_StandardScale2 (
        /*[out,retval]*/ int * scale ) = 0;
      virtual HRESULT __stdcall put_StandardScale2 (
        /*[in]*/ int scale ) = 0;
      virtual HRESULT __stdcall get_LayerPropertyOverrides (
        /*[out,retval]*/ VARIANT_BOOL * bOverrides ) = 0;
};

struct __declspec(uuid("9f470d4d-44b7-4d3c-82e5-493da2e94215"))
IAcadGroup : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadEntity * * ppEntity ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_TrueColor (
        /*[in]*/ struct IAcadAcCmColor * _arg1 ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_Linetype (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_LinetypeScale (
        /*[in]*/ ACAD_NOUNITS _arg1 ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall Highlight (
        /*[in]*/ VARIANT_BOOL HighlightFlag ) = 0;
      virtual HRESULT __stdcall put_PlotStyleName (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_Lineweight (
        /*[in]*/ ACAD_LWEIGHT _arg1 ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall AppendItems (
        /*[in]*/ VARIANT Objects ) = 0;
      virtual HRESULT __stdcall RemoveItems (
        /*[in]*/ VARIANT Objects ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_color (
        /*[in]*/ enum AcColor _arg1 ) = 0;
};

struct __declspec(uuid("15f4cd6c-78c7-4e34-97bb-88866ab7234c"))
IAcadGroups : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadGroup * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadGroup * * pDimStyle ) = 0;
};

struct __declspec(uuid("5f64b0a6-1728-41c4-93e6-24c2daa48e93"))
IAcadDimStyle : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall CopyFrom (
        /*[in]*/ IDispatch * StyleSource ) = 0;
};

struct __declspec(uuid("ddae1905-b805-4444-8c99-0db4ae89f517"))
IAcadDimStyles : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadDimStyle * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadDimStyle * * pDimStyle ) = 0;
};

struct __declspec(uuid("7abc3225-0845-44cd-96e3-dc73e280aca0"))
IAcadLayer : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_color (
        /*[out,retval]*/ enum AcColor * color ) = 0;
      virtual HRESULT __stdcall put_color (
        /*[in]*/ enum AcColor color ) = 0;
      virtual HRESULT __stdcall get_TrueColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall put_TrueColor (
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall get_Freeze (
        /*[out,retval]*/ VARIANT_BOOL * bFreeze ) = 0;
      virtual HRESULT __stdcall put_Freeze (
        /*[in]*/ VARIANT_BOOL bFreeze ) = 0;
      virtual HRESULT __stdcall get_LayerOn (
        /*[out,retval]*/ VARIANT_BOOL * bOn ) = 0;
      virtual HRESULT __stdcall put_LayerOn (
        /*[in]*/ VARIANT_BOOL bOn ) = 0;
      virtual HRESULT __stdcall get_Linetype (
        /*[out,retval]*/ BSTR * Linetype ) = 0;
      virtual HRESULT __stdcall put_Linetype (
        /*[in]*/ BSTR Linetype ) = 0;
      virtual HRESULT __stdcall get_Lock (
        /*[out,retval]*/ VARIANT_BOOL * Block ) = 0;
      virtual HRESULT __stdcall put_Lock (
        /*[in]*/ VARIANT_BOOL Block ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Plottable (
        /*[out,retval]*/ VARIANT_BOOL * bPlottable ) = 0;
      virtual HRESULT __stdcall put_Plottable (
        /*[in]*/ VARIANT_BOOL bPlottable ) = 0;
      virtual HRESULT __stdcall get_ViewportDefault (
        /*[out,retval]*/ VARIANT_BOOL * bDefault ) = 0;
      virtual HRESULT __stdcall put_ViewportDefault (
        /*[in]*/ VARIANT_BOOL bDefault ) = 0;
      virtual HRESULT __stdcall get_PlotStyleName (
        /*[out,retval]*/ BSTR * plotStyle ) = 0;
      virtual HRESULT __stdcall put_PlotStyleName (
        /*[in]*/ BSTR plotStyle ) = 0;
      virtual HRESULT __stdcall get_Lineweight (
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall put_Lineweight (
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_Used (
        /*[out,retval]*/ VARIANT_BOOL * bUsed ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR Material ) = 0;
};

struct __declspec(uuid("713e7af3-1517-49fc-b6b4-429bdcd83b40"))
IAcadLayers : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadLayer * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadLayer * * pLayer ) = 0;
      virtual HRESULT __stdcall GenerateUsageData ( ) = 0;
};

struct __declspec(uuid("545d3abe-3b77-45c3-afcc-0aff39d25dd5"))
IAcadLineType : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * bstrDes ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR bstrDes ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
};

struct __declspec(uuid("122c5869-568a-4df0-9b0d-fb113e8defce"))
IAcadLineTypes : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadLineType * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadLineType * * pLinetype ) = 0;
      virtual HRESULT __stdcall Load (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR FileName ) = 0;
};

struct __declspec(uuid("67433105-639d-42fb-abc4-1a4e70b638b5"))
IAcadXRecord : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall GetXRecordData (
        /*[out]*/ VARIANT * XRecordDataType,
        /*[out]*/ VARIANT * XRecordDataValue ) = 0;
      virtual HRESULT __stdcall SetXRecordData (
        /*[in]*/ VARIANT XRecordDataType,
        /*[in]*/ VARIANT XRecordDataValue ) = 0;
      virtual HRESULT __stdcall get_TranslateIDs (
        /*[out,retval]*/ VARIANT_BOOL * xlateIds ) = 0;
      virtual HRESULT __stdcall put_TranslateIDs (
        /*[in]*/ VARIANT_BOOL xlateIds ) = 0;
};

struct __declspec(uuid("42828358-7505-416b-9a56-98f4e9bb35c6"))
IAcadDictionary : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall AddObject (
        /*[in]*/ BSTR Keyword,
        /*[in]*/ BSTR ObjectName,
        /*[out,retval]*/ struct IAcadObject * * pNewObj ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[in]*/ struct IAcadObject * Object,
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall GetObject (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadObject * * pObj ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadObject * * pObj ) = 0;
      virtual HRESULT __stdcall Rename (
        /*[in]*/ BSTR OldName,
        /*[in]*/ BSTR NewName ) = 0;
      virtual HRESULT __stdcall Replace (
        /*[in]*/ BSTR OldName,
        /*[in]*/ struct IAcadObject * pObj ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadObject * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall AddXRecord (
        /*[in]*/ BSTR Keyword,
        /*[out,retval]*/ struct IAcadXRecord * * pNewXRecord ) = 0;
};

struct __declspec(uuid("c2521948-f0c1-4af7-8507-baea76be3687"))
IAcadDictionaries : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadObject * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadDictionary * * pDimStyle ) = 0;
};

struct __declspec(uuid("553652d5-2c7e-4e81-bbeb-65579ec58471"))
IAcadRegisteredApplication : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
};

struct __declspec(uuid("97beb443-7259-4377-87fa-1a3e5e882b3c"))
IAcadRegisteredApplications : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadRegisteredApplication * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadRegisteredApplication * * pRegApp ) = 0;
};

struct __declspec(uuid("3b4c686e-d760-4b2e-9737-0cfd0a434d5d"))
IAcadTextStyle : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BigFontFile (
        /*[out,retval]*/ BSTR * fontFile ) = 0;
      virtual HRESULT __stdcall put_BigFontFile (
        /*[in]*/ BSTR fontFile ) = 0;
      virtual HRESULT __stdcall get_fontFile (
        /*[out,retval]*/ BSTR * fontFile ) = 0;
      virtual HRESULT __stdcall put_fontFile (
        /*[in]*/ BSTR fontFile ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_LastHeight (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_LastHeight (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall get_ObliqueAngle (
        /*[out,retval]*/ ACAD_ANGLE * obliAngle ) = 0;
      virtual HRESULT __stdcall put_ObliqueAngle (
        /*[in]*/ ACAD_ANGLE obliAngle ) = 0;
      virtual HRESULT __stdcall get_TextGenerationFlag (
        /*[out,retval]*/ long * textGenFlag ) = 0;
      virtual HRESULT __stdcall put_TextGenerationFlag (
        /*[in]*/ long textGenFlag ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall GetFont (
        /*[out]*/ BSTR * TypeFace,
        /*[out]*/ VARIANT_BOOL * Bold,
        /*[out]*/ VARIANT_BOOL * Italic,
        /*[out]*/ long * Charset,
        /*[out]*/ long * PitchAndFamily ) = 0;
      virtual HRESULT __stdcall SetFont (
        /*[in]*/ BSTR TypeFace,
        /*[in]*/ VARIANT_BOOL Bold,
        /*[in]*/ VARIANT_BOOL Italic,
        /*[in]*/ long Charset,
        /*[in]*/ long PitchAndFamily ) = 0;
};

struct __declspec(uuid("49ed276a-716c-4700-999f-e44f1d10dd8c"))
IAcadTextStyles : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadTextStyle * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadTextStyle * * pTextStyle ) = 0;
};

struct __declspec(uuid("27ca935e-e9c4-44e9-88fb-e6d22eed3f64"))
IAcadUCS : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Origin (
        /*[out,retval]*/ VARIANT * Origin ) = 0;
      virtual HRESULT __stdcall put_Origin (
        /*[in]*/ VARIANT Origin ) = 0;
      virtual HRESULT __stdcall get_XVector (
        /*[out,retval]*/ VARIANT * XVector ) = 0;
      virtual HRESULT __stdcall put_XVector (
        /*[in]*/ VARIANT XVector ) = 0;
      virtual HRESULT __stdcall get_YVector (
        /*[out,retval]*/ VARIANT * YVector ) = 0;
      virtual HRESULT __stdcall put_YVector (
        /*[in]*/ VARIANT YVector ) = 0;
      virtual HRESULT __stdcall GetUCSMatrix (
        /*[out,retval]*/ VARIANT * transMatrix ) = 0;
};

struct __declspec(uuid("1da18452-ee21-4ba4-83f8-80c52fb781fc"))
IAcadUCSs : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadUCS * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Origin,
        /*[in]*/ VARIANT XAxisPoint,
        /*[in]*/ VARIANT YAxisPoint,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadUCS * * pUCS ) = 0;
};

struct __declspec(uuid("692a60f2-6e56-41be-ac25-054aa8b4dd2d"))
IAcadViews : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadView * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadView * * pRegApp ) = 0;
};

struct __declspec(uuid("6fe5c544-2694-48fc-9c50-5b32e38f6ea2"))
IAcadViewport : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Center (
        /*[out,retval]*/ VARIANT * Center ) = 0;
      virtual HRESULT __stdcall put_Center (
        /*[in]*/ VARIANT Center ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ VARIANT * targetPoint ) = 0;
      virtual HRESULT __stdcall put_Target (
        /*[in]*/ VARIANT targetPoint ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ VARIANT * dirVec ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ VARIANT dirVec ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_GridOn (
        /*[out,retval]*/ VARIANT_BOOL * bGridOn ) = 0;
      virtual HRESULT __stdcall put_GridOn (
        /*[in]*/ VARIANT_BOOL bGridOn ) = 0;
      virtual HRESULT __stdcall get_OrthoOn (
        /*[out,retval]*/ VARIANT_BOOL * bOrthoOn ) = 0;
      virtual HRESULT __stdcall put_OrthoOn (
        /*[in]*/ VARIANT_BOOL bOrthoOn ) = 0;
      virtual HRESULT __stdcall get_SnapBasePoint (
        /*[out,retval]*/ VARIANT * lowLeft ) = 0;
      virtual HRESULT __stdcall put_SnapBasePoint (
        /*[in]*/ VARIANT lowLeft ) = 0;
      virtual HRESULT __stdcall get_SnapOn (
        /*[out,retval]*/ VARIANT_BOOL * bSnapOn ) = 0;
      virtual HRESULT __stdcall put_SnapOn (
        /*[in]*/ VARIANT_BOOL bSnapOn ) = 0;
      virtual HRESULT __stdcall get_SnapRotationAngle (
        /*[out,retval]*/ ACAD_ANGLE * Angle ) = 0;
      virtual HRESULT __stdcall put_SnapRotationAngle (
        /*[in]*/ ACAD_ANGLE Angle ) = 0;
      virtual HRESULT __stdcall get_UCSIconOn (
        /*[out,retval]*/ VARIANT_BOOL * bIconOn ) = 0;
      virtual HRESULT __stdcall put_UCSIconOn (
        /*[in]*/ VARIANT_BOOL bIconOn ) = 0;
      virtual HRESULT __stdcall get_UCSIconAtOrigin (
        /*[out,retval]*/ VARIANT_BOOL * bIconAtOrigin ) = 0;
      virtual HRESULT __stdcall put_UCSIconAtOrigin (
        /*[in]*/ VARIANT_BOOL bIconAtOrigin ) = 0;
      virtual HRESULT __stdcall get_LowerLeftCorner (
        /*[out,retval]*/ VARIANT * lowLeft ) = 0;
      virtual HRESULT __stdcall get_UpperRightCorner (
        /*[out,retval]*/ VARIANT * UpperRight ) = 0;
      virtual HRESULT __stdcall Split (
        /*[in]*/ enum AcViewportSplitType NumWins ) = 0;
      virtual HRESULT __stdcall GetGridSpacing (
        /*[out]*/ double * XSpacing,
        /*[out]*/ double * YSpacing ) = 0;
      virtual HRESULT __stdcall SetGridSpacing (
        /*[in]*/ double XSpacing,
        /*[in]*/ double YSpacing ) = 0;
      virtual HRESULT __stdcall GetSnapSpacing (
        /*[out]*/ double * XSpacing,
        /*[out]*/ double * YSpacing ) = 0;
      virtual HRESULT __stdcall SetSnapSpacing (
        /*[in]*/ double XSpacing,
        /*[in]*/ double YSpacing ) = 0;
      virtual HRESULT __stdcall SetView (
        /*[in]*/ struct IAcadView * View ) = 0;
      virtual HRESULT __stdcall get_ArcSmoothness (
        /*[out,retval]*/ long * arcSmooth ) = 0;
      virtual HRESULT __stdcall put_ArcSmoothness (
        /*[in]*/ long arcSmooth ) = 0;
};

struct __declspec(uuid("8caaf247-a4ae-486a-a886-37f07aa461a0"))
IAcadViewports : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadViewport * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadViewport * * pRegApp ) = 0;
      virtual HRESULT __stdcall DeleteConfiguration (
        /*[in]*/ BSTR Name ) = 0;
};

struct __declspec(uuid("b863a2f4-4fcd-4269-9f67-14ed9e75a7ce"))
IAcadPlotConfigurations : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadPlotConfiguration * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT ModelType,
        /*[out,retval]*/ struct IAcadPlotConfiguration * * pPlotConfig ) = 0;
};

struct __declspec(uuid("38d109f9-00b7-47bf-89bd-272084478231"))
IAcadSectionManager : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadSection * * pSection ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall GetLiveSection (
        /*[out,retval]*/ struct IAcadSection * * pSection ) = 0;
      virtual HRESULT __stdcall GetUniqueSectionName (
        /*[in]*/ BSTR pBaseName,
        /*[out,retval]*/ BSTR * ppUniqueName ) = 0;
};

struct __declspec(uuid("0c755ca3-0d6a-493a-8a3a-cf00550d7a3c"))
IAcadMaterial : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * bstrDes ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR bstrDes ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
};

struct __declspec(uuid("0f9a3916-cc82-4177-aabd-74d243a15a04"))
IAcadMaterials : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadMaterial * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadMaterial * * pDimStyle ) = 0;
};

struct __declspec(uuid("a0df146c-6a67-4497-b546-85af42b60244"))
IAcadObjectEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Modified (
        /*[in]*/ struct IAcadObject * pObject ) = 0;
};

struct __declspec(uuid("0978b906-02e7-42d8-a014-28ea9d61084e"))
IAcadTableStyle : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrValue ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrValue ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * bstr ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR bstr ) = 0;
      virtual HRESULT __stdcall get_BitFlags (
        /*[out,retval]*/ long * bitFlag ) = 0;
      virtual HRESULT __stdcall put_BitFlags (
        /*[in]*/ long bitFlag ) = 0;
      virtual HRESULT __stdcall get_FlowDirection (
        /*[out,retval]*/ enum AcTableDirection * pFlow ) = 0;
      virtual HRESULT __stdcall put_FlowDirection (
        /*[in]*/ enum AcTableDirection pFlow ) = 0;
      virtual HRESULT __stdcall get_HorzCellMargin (
        /*[out,retval]*/ double * dHorzCellMargin ) = 0;
      virtual HRESULT __stdcall put_HorzCellMargin (
        /*[in]*/ double dHorzCellMargin ) = 0;
      virtual HRESULT __stdcall get_VertCellMargin (
        /*[out,retval]*/ double * dVertCellMargin ) = 0;
      virtual HRESULT __stdcall put_VertCellMargin (
        /*[in]*/ double dVertCellMargin ) = 0;
      virtual HRESULT __stdcall get_TitleSuppressed (
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall put_TitleSuppressed (
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall get_HeaderSuppressed (
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall put_HeaderSuppressed (
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall GetTextStyle (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall SetTextStyle (
        /*[in]*/ int rowTypes,
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall GetTextHeight (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ double * pTextHeight ) = 0;
      virtual HRESULT __stdcall SetTextHeight (
        /*[in]*/ int rowTypes,
        /*[in]*/ double TextHeight ) = 0;
      virtual HRESULT __stdcall GetAlignment (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ enum AcCellAlignment * pCellAlignment ) = 0;
      virtual HRESULT __stdcall SetAlignment (
        /*[in]*/ int rowTypes,
        /*[in]*/ enum AcCellAlignment cellAlignment ) = 0;
      virtual HRESULT __stdcall GetColor (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetColor (
        /*[in]*/ int rowTypes,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetBackgroundColor (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetBackgroundColor (
        /*[in]*/ int rowTypes,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetBackgroundColorNone (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall SetBackgroundColorNone (
        /*[in]*/ int rowTypes,
        /*[in]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall GetGridLineWeight (
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall SetGridLineWeight (
        /*[in]*/ int gridLineTypes,
        /*[in]*/ int rowTypes,
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall GetGridColor (
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetGridColor (
        /*[in]*/ int gridLineTypes,
        /*[in]*/ int rowTypes,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetGridVisibility (
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall SetGridVisibility (
        /*[in]*/ int gridLineTypes,
        /*[in]*/ int rowTypes,
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall GetDataType (
        /*[in]*/ enum AcRowType rowType,
        /*[out]*/ enum AcValueDataType * pDataType,
        /*[out]*/ enum AcValueUnitType * pUnitType ) = 0;
      virtual HRESULT __stdcall SetDataType (
        /*[in]*/ int rowTypes,
        /*[in]*/ enum AcValueDataType nDataType,
        /*[in]*/ enum AcValueUnitType nUnitType ) = 0;
      virtual HRESULT __stdcall GetFormat (
        /*[in]*/ enum AcRowType rowType,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall SetFormat (
        /*[in]*/ int rowTypes,
        /*[in]*/ BSTR val ) = 0;
      virtual HRESULT __stdcall CreateCellStyle (
        /*[in]*/ BSTR bstrCellStyle ) = 0;
      virtual HRESULT __stdcall CreateCellStyleFromStyle (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ BSTR bstrSourceCellStyle ) = 0;
      virtual HRESULT __stdcall RenameCellStyle (
        /*[in]*/ BSTR bstrOldName,
        /*[in]*/ BSTR bstrNewName ) = 0;
      virtual HRESULT __stdcall DeleteCellStyle (
        /*[in]*/ BSTR bstrCellStyle ) = 0;
      virtual HRESULT __stdcall GetUniqueCellStyleName (
        /*[in]*/ BSTR pszBaseName,
        /*[out,retval]*/ BSTR * pbstrUniqueName ) = 0;
      virtual HRESULT __stdcall GetIsCellStyleInUse (
        /*[in]*/ BSTR pszCellStyle,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_NumCellStyles (
        /*[out,retval]*/ long * NumCellStyles ) = 0;
      virtual HRESULT __stdcall GetCellStyles (
        /*[in]*/ VARIANT * cellStylesArray ) = 0;
      virtual HRESULT __stdcall GetTextStyleId (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out,retval]*/ LONG_PTR * pVal ) = 0;
      virtual HRESULT __stdcall SetTextStyleId (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ LONG_PTR val ) = 0;
      virtual HRESULT __stdcall GetTextHeight2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out,retval]*/ double * pHeight ) = 0;
      virtual HRESULT __stdcall SetTextHeight2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall GetAlignment2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out,retval]*/ enum AcCellAlignment * pCellAlignment ) = 0;
      virtual HRESULT __stdcall SetAlignment2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ enum AcCellAlignment cellAlignment ) = 0;
      virtual HRESULT __stdcall GetColor2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out,retval]*/ struct IAcadAcCmColor * * color ) = 0;
      virtual HRESULT __stdcall SetColor2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ struct IAcadAcCmColor * color ) = 0;
      virtual HRESULT __stdcall GetBackgroundColor2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out,retval]*/ struct IAcadAcCmColor * * color ) = 0;
      virtual HRESULT __stdcall SetBackgroundColor2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ struct IAcadAcCmColor * color ) = 0;
      virtual HRESULT __stdcall GetDataType2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out]*/ enum AcValueDataType * pDataType,
        /*[out]*/ enum AcValueUnitType * pUnitType ) = 0;
      virtual HRESULT __stdcall SetDataType2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ enum AcValueDataType nDataType,
        /*[in]*/ enum AcValueUnitType nUnitType ) = 0;
      virtual HRESULT __stdcall GetFormat2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out]*/ BSTR * pbstrFormat ) = 0;
      virtual HRESULT __stdcall SetFormat2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ BSTR bstrFormat ) = 0;
      virtual HRESULT __stdcall GetCellClass (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out,retval]*/ int * cellClass ) = 0;
      virtual HRESULT __stdcall SetCellClass (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ int cellClass ) = 0;
      virtual HRESULT __stdcall GetRotation (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out,retval]*/ double * Rotation ) = 0;
      virtual HRESULT __stdcall SetRotation (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ double Rotation ) = 0;
      virtual HRESULT __stdcall GetIsMergeAllEnabled (
        /*[in]*/ BSTR bstrCellStyle,
        /*[out,retval]*/ VARIANT_BOOL * bEnable ) = 0;
      virtual HRESULT __stdcall EnableMergeAll (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ VARIANT_BOOL bEnable ) = 0;
      virtual HRESULT __stdcall GetGridLineWeight2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[out,retval]*/ ACAD_LWEIGHT * Lineweight ) = 0;
      virtual HRESULT __stdcall SetGridLineWeight2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ enum AcGridLineType gridLineTypes,
        /*[in]*/ ACAD_LWEIGHT Lineweight ) = 0;
      virtual HRESULT __stdcall GetGridColor2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[out,retval]*/ struct IAcadAcCmColor * * pColor ) = 0;
      virtual HRESULT __stdcall SetGridColor2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ enum AcGridLineType gridLineTypes,
        /*[in]*/ struct IAcadAcCmColor * pColor ) = 0;
      virtual HRESULT __stdcall GetGridVisibility2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ enum AcGridLineType gridLineType,
        /*[out,retval]*/ VARIANT_BOOL * bValue ) = 0;
      virtual HRESULT __stdcall SetGridVisibility2 (
        /*[in]*/ BSTR bstrCellStyle,
        /*[in]*/ enum AcGridLineType gridLineTypes,
        /*[in]*/ VARIANT_BOOL bValue ) = 0;
      virtual HRESULT __stdcall get_TemplateId (
        /*[out,retval]*/ LONG_PTR * pVal ) = 0;
      virtual HRESULT __stdcall put_TemplateId (
        /*[in]*/ LONG_PTR pVal ) = 0;
      virtual HRESULT __stdcall SetTemplateId (
        /*[in]*/ LONG_PTR val,
        enum AcMergeCellStyleOption option ) = 0;
};

struct __declspec(uuid("67388466-a056-4740-97c6-d81837fc8199"))
IAcadMLeaderStyle : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_BitFlags (
        /*[out,retval]*/ long * bitFlag ) = 0;
      virtual HRESULT __stdcall put_BitFlags (
        /*[in]*/ long bitFlag ) = 0;
      virtual HRESULT __stdcall get_ContentType (
        /*[out,retval]*/ enum AcMLeaderContentType * Type ) = 0;
      virtual HRESULT __stdcall put_ContentType (
        /*[in]*/ enum AcMLeaderContentType Type ) = 0;
      virtual HRESULT __stdcall get_DrawMLeaderOrderType (
        /*[out,retval]*/ enum AcDrawMLeaderOrderType * Type ) = 0;
      virtual HRESULT __stdcall put_DrawMLeaderOrderType (
        /*[in]*/ enum AcDrawMLeaderOrderType Type ) = 0;
      virtual HRESULT __stdcall get_DrawLeaderOrderType (
        /*[out,retval]*/ enum AcDrawLeaderOrderType * Type ) = 0;
      virtual HRESULT __stdcall put_DrawLeaderOrderType (
        /*[in]*/ enum AcDrawLeaderOrderType Type ) = 0;
      virtual HRESULT __stdcall get_MaxLeaderSegmentsPoints (
        /*[out,retval]*/ int * number ) = 0;
      virtual HRESULT __stdcall put_MaxLeaderSegmentsPoints (
        /*[in]*/ int number ) = 0;
      virtual HRESULT __stdcall get_FirstSegmentAngleConstraint (
        /*[out,retval]*/ enum AcSegmentAngleType * constraint ) = 0;
      virtual HRESULT __stdcall put_FirstSegmentAngleConstraint (
        /*[in]*/ enum AcSegmentAngleType constraint ) = 0;
      virtual HRESULT __stdcall get_SecondSegmentAngleConstraint (
        /*[out,retval]*/ enum AcSegmentAngleType * constraint ) = 0;
      virtual HRESULT __stdcall put_SecondSegmentAngleConstraint (
        /*[in]*/ enum AcSegmentAngleType constraint ) = 0;
      virtual HRESULT __stdcall get_LeaderLinetype (
        /*[out,retval]*/ enum AcMLeaderType * Type ) = 0;
      virtual HRESULT __stdcall put_LeaderLinetype (
        /*[in]*/ enum AcMLeaderType Type ) = 0;
      virtual HRESULT __stdcall get_LeaderLineColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * color ) = 0;
      virtual HRESULT __stdcall put_LeaderLineColor (
        /*[in]*/ struct IAcadAcCmColor * color ) = 0;
      virtual HRESULT __stdcall get_LeaderLineTypeId (
        /*[out,retval]*/ ACAD_LTYPE * Type ) = 0;
      virtual HRESULT __stdcall put_LeaderLineTypeId (
        /*[in]*/ ACAD_LTYPE Type ) = 0;
      virtual HRESULT __stdcall get_LeaderLineWeight (
        /*[out,retval]*/ enum AcLineWeight * weight ) = 0;
      virtual HRESULT __stdcall put_LeaderLineWeight (
        /*[in]*/ enum AcLineWeight weight ) = 0;
      virtual HRESULT __stdcall get_EnableLanding (
        /*[out,retval]*/ VARIANT_BOOL * enabled ) = 0;
      virtual HRESULT __stdcall put_EnableLanding (
        /*[in]*/ VARIANT_BOOL enabled ) = 0;
      virtual HRESULT __stdcall get_LandingGap (
        /*[out,retval]*/ double * LandingGap ) = 0;
      virtual HRESULT __stdcall put_LandingGap (
        /*[in]*/ double LandingGap ) = 0;
      virtual HRESULT __stdcall get_EnableDogleg (
        /*[out,retval]*/ VARIANT_BOOL * enabled ) = 0;
      virtual HRESULT __stdcall put_EnableDogleg (
        /*[in]*/ VARIANT_BOOL enabled ) = 0;
      virtual HRESULT __stdcall get_DoglegLength (
        /*[out,retval]*/ double * DoglegLength ) = 0;
      virtual HRESULT __stdcall put_DoglegLength (
        /*[in]*/ double DoglegLength ) = 0;
      virtual HRESULT __stdcall get_ArrowSymbol (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ArrowSymbol (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ArrowSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_ArrowSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_TextStyle (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_TextStyle (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_TextAttachmentDirection (
        /*[out,retval]*/ enum AcTextAttachmentDirection * dir ) = 0;
      virtual HRESULT __stdcall put_TextAttachmentDirection (
        /*[in]*/ enum AcTextAttachmentDirection dir ) = 0;
      virtual HRESULT __stdcall get_TextLeftAttachmentType (
        /*[out,retval]*/ enum AcTextAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextLeftAttachmentType (
        /*[in]*/ enum AcTextAttachmentType Type ) = 0;
      virtual HRESULT __stdcall get_TextRightAttachmentType (
        /*[out,retval]*/ enum AcTextAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextRightAttachmentType (
        /*[in]*/ enum AcTextAttachmentType Type ) = 0;
      virtual HRESULT __stdcall get_TextTopAttachmentType (
        /*[out,retval]*/ enum AcVerticalTextAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextTopAttachmentType (
        /*[in]*/ enum AcVerticalTextAttachmentType Type ) = 0;
      virtual HRESULT __stdcall get_TextBottomAttachmentType (
        /*[out,retval]*/ enum AcVerticalTextAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextBottomAttachmentType (
        /*[in]*/ enum AcVerticalTextAttachmentType Type ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * color ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ struct IAcadAcCmColor * color ) = 0;
      virtual HRESULT __stdcall get_TextHeight (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_TextHeight (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_EnableFrameText (
        /*[out,retval]*/ VARIANT_BOOL * enabled ) = 0;
      virtual HRESULT __stdcall put_EnableFrameText (
        /*[in]*/ VARIANT_BOOL enabled ) = 0;
      virtual HRESULT __stdcall get_AlignSpace (
        /*[out,retval]*/ double * AlignSpace ) = 0;
      virtual HRESULT __stdcall put_AlignSpace (
        /*[in]*/ double AlignSpace ) = 0;
      virtual HRESULT __stdcall get_Block (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Block (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_BlockColor (
        /*[out,retval]*/ struct IAcadAcCmColor * * color ) = 0;
      virtual HRESULT __stdcall put_BlockColor (
        /*[in]*/ struct IAcadAcCmColor * color ) = 0;
      virtual HRESULT __stdcall get_EnableBlockScale (
        /*[out,retval]*/ VARIANT_BOOL * enabled ) = 0;
      virtual HRESULT __stdcall put_EnableBlockScale (
        /*[in]*/ VARIANT_BOOL enabled ) = 0;
      virtual HRESULT __stdcall get_BlockScale (
        /*[out,retval]*/ double * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_BlockScale (
        /*[in]*/ double ScaleFactor ) = 0;
      virtual HRESULT __stdcall get_EnableBlockRotation (
        /*[out,retval]*/ VARIANT_BOOL * enabled ) = 0;
      virtual HRESULT __stdcall put_EnableBlockRotation (
        /*[in]*/ VARIANT_BOOL enabled ) = 0;
      virtual HRESULT __stdcall get_BlockRotation (
        /*[out,retval]*/ double * Rotation ) = 0;
      virtual HRESULT __stdcall put_BlockRotation (
        /*[in]*/ double Rotation ) = 0;
      virtual HRESULT __stdcall get_BlockConnectionType (
        /*[out,retval]*/ enum AcBlockConnectionType * Type ) = 0;
      virtual HRESULT __stdcall put_BlockConnectionType (
        /*[in]*/ enum AcBlockConnectionType Type ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ double * scale ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ double scale ) = 0;
      virtual HRESULT __stdcall get_OverwritePropChanged (
        /*[out,retval]*/ VARIANT_BOOL * changed ) = 0;
      virtual HRESULT __stdcall get_Annotative (
        /*[out,retval]*/ VARIANT_BOOL * Annotative ) = 0;
      virtual HRESULT __stdcall put_Annotative (
        /*[in]*/ VARIANT_BOOL Annotative ) = 0;
      virtual HRESULT __stdcall get_BreakSize (
        /*[out,retval]*/ double * size ) = 0;
      virtual HRESULT __stdcall put_BreakSize (
        /*[in]*/ double size ) = 0;
      virtual HRESULT __stdcall get_TextString (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_TextString (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_TextAngleType (
        /*[out,retval]*/ enum AcTextAngleType * Type ) = 0;
      virtual HRESULT __stdcall put_TextAngleType (
        /*[in]*/ enum AcTextAngleType Type ) = 0;
      virtual HRESULT __stdcall get_TextAlignmentType (
        /*[out,retval]*/ enum AcTextAlignmentType * Type ) = 0;
      virtual HRESULT __stdcall put_TextAlignmentType (
        /*[in]*/ enum AcTextAlignmentType Type ) = 0;
};

struct __declspec(uuid("d867a88e-e78d-4eca-8637-74a342fa32b2"))
IAcadAttributeReference : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ enum AcHorizontalAlignment * horizAlign ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ enum AcHorizontalAlignment horizAlign ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Normal ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Normal ) = 0;
      virtual HRESULT __stdcall get_ObliqueAngle (
        /*[out,retval]*/ ACAD_ANGLE * obliAngle ) = 0;
      virtual HRESULT __stdcall put_ObliqueAngle (
        /*[in]*/ ACAD_ANGLE obliAngle ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * scalFactor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS scalFactor ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_TagString (
        /*[out,retval]*/ BSTR * bstrTag ) = 0;
      virtual HRESULT __stdcall put_TagString (
        /*[in]*/ BSTR bstrTag ) = 0;
      virtual HRESULT __stdcall get_TextAlignmentPoint (
        /*[out,retval]*/ VARIANT * alignPoint ) = 0;
      virtual HRESULT __stdcall put_TextAlignmentPoint (
        /*[in]*/ VARIANT alignPoint ) = 0;
      virtual HRESULT __stdcall get_TextGenerationFlag (
        /*[out,retval]*/ long * textGenFlag ) = 0;
      virtual HRESULT __stdcall put_TextGenerationFlag (
        /*[in]*/ long textGenFlag ) = 0;
      virtual HRESULT __stdcall get_TextString (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
      virtual HRESULT __stdcall put_TextString (
        /*[in]*/ BSTR bstrText ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum AcVerticalAlignment * vertiAlign ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum AcVerticalAlignment vertiAlign ) = 0;
      virtual HRESULT __stdcall get_FieldLength (
        /*[out,retval]*/ long * fieldLen ) = 0;
      virtual HRESULT __stdcall put_FieldLength (
        /*[in]*/ long fieldLen ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum AcAlignment * align ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum AcAlignment align ) = 0;
      virtual HRESULT __stdcall get_UpsideDown (
        /*[out,retval]*/ VARIANT_BOOL * bUpsideDown ) = 0;
      virtual HRESULT __stdcall put_UpsideDown (
        /*[in]*/ VARIANT_BOOL bUpsideDown ) = 0;
      virtual HRESULT __stdcall get_Backward (
        /*[out,retval]*/ VARIANT_BOOL * bBackward ) = 0;
      virtual HRESULT __stdcall put_Backward (
        /*[in]*/ VARIANT_BOOL bBackward ) = 0;
      virtual HRESULT __stdcall get_Invisible (
        /*[out,retval]*/ VARIANT_BOOL * bInvisible ) = 0;
      virtual HRESULT __stdcall put_Invisible (
        /*[in]*/ VARIANT_BOOL bInvisible ) = 0;
      virtual HRESULT __stdcall get_Constant (
        /*[out,retval]*/ VARIANT_BOOL * bConstant ) = 0;
      virtual HRESULT __stdcall get_LockPosition (
        /*[out,retval]*/ VARIANT_BOOL * bLockPosition ) = 0;
      virtual HRESULT __stdcall get_MTextAttribute (
        /*[out,retval]*/ VARIANT_BOOL * bMTextAttribute ) = 0;
      virtual HRESULT __stdcall put_MTextAttribute (
        /*[in]*/ VARIANT_BOOL bMTextAttribute ) = 0;
      virtual HRESULT __stdcall get_MTextAttributeContent (
        /*[out,retval]*/ BSTR * content ) = 0;
      virtual HRESULT __stdcall put_MTextAttributeContent (
        /*[in]*/ BSTR content ) = 0;
      virtual HRESULT __stdcall UpdateMTextAttribute ( ) = 0;
      virtual HRESULT __stdcall get_MTextBoundaryWidth (
        /*[out,retval]*/ double * boundaryWidth ) = 0;
      virtual HRESULT __stdcall put_MTextBoundaryWidth (
        double boundaryWidth ) = 0;
      virtual HRESULT __stdcall get_MTextDrawingDirection (
        /*[out,retval]*/ enum AcDrawingDirection * drawDir ) = 0;
      virtual HRESULT __stdcall put_MTextDrawingDirection (
        /*[in]*/ enum AcDrawingDirection drawDir ) = 0;
};

struct __declspec(uuid("5be299ec-70bb-4fe3-8609-d74ec8ff0eaf"))
IAcadOle : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * insPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT insPoint ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rot ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rot ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_ScaleWidth (
        /*[out,retval]*/ double * swidth ) = 0;
      virtual HRESULT __stdcall put_ScaleWidth (
        /*[in]*/ double swidth ) = 0;
      virtual HRESULT __stdcall get_ScaleHeight (
        /*[out,retval]*/ double * sheight ) = 0;
      virtual HRESULT __stdcall put_ScaleHeight (
        /*[in]*/ double sheight ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ VARIANT_BOOL * aspect ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ VARIANT_BOOL aspect ) = 0;
      virtual HRESULT __stdcall get_OleItemType (
        /*[out,retval]*/ enum AcOleType * pType ) = 0;
      virtual HRESULT __stdcall put_OleItemType (
        /*[in]*/ enum AcOleType pType ) = 0;
      virtual HRESULT __stdcall get_OlePlotQuality (
        /*[out,retval]*/ enum AcOlePlotQuality * pPQuality ) = 0;
      virtual HRESULT __stdcall put_OlePlotQuality (
        /*[in]*/ enum AcOlePlotQuality pPQuality ) = 0;
      virtual HRESULT __stdcall get_OleSourceApp (
        /*[out,retval]*/ BSTR * srcApp ) = 0;
      virtual HRESULT __stdcall put_OleSourceApp (
        /*[in]*/ BSTR srcApp ) = 0;
};

struct __declspec(uuid("be461951-c77e-4c70-bd83-c392820c11fc"))
IAcadHelix : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ VARIANT * StartPoint ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ VARIANT StartPoint ) = 0;
      virtual HRESULT __stdcall get_Constrain (
        /*[out,retval]*/ enum AcHelixConstrainType * constrainType ) = 0;
      virtual HRESULT __stdcall put_Constrain (
        /*[in]*/ enum AcHelixConstrainType constrainType ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_Turns (
        /*[out,retval]*/ ACAD_NOUNITS * Turns ) = 0;
      virtual HRESULT __stdcall put_Turns (
        /*[in]*/ ACAD_NOUNITS Turns ) = 0;
      virtual HRESULT __stdcall get_TurnHeight (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_TurnHeight (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_BaseRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BaseRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_TopRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_TopRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_Twist (
        /*[out,retval]*/ enum AcHelixTwistType * twistType ) = 0;
      virtual HRESULT __stdcall put_Twist (
        /*[in]*/ enum AcHelixTwistType twistType ) = 0;
      virtual HRESULT __stdcall get_TurnSlope (
        /*[out,retval]*/ ACAD_ANGLE * slopeAngle ) = 0;
      virtual HRESULT __stdcall get_TotalLength (
        /*[out,retval]*/ double * TotalLength ) = 0;
};

struct __declspec(uuid("3d3962e2-e12b-4559-96cf-f32134a0577b"))
IAcadSurface : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SurfaceType (
        /*[out,retval]*/ BSTR * SurfaceType ) = 0;
      virtual HRESULT __stdcall get_UIsolineDensity (
        /*[out,retval]*/ long * density ) = 0;
      virtual HRESULT __stdcall put_UIsolineDensity (
        /*[in]*/ long density ) = 0;
      virtual HRESULT __stdcall get_VIsolineDensity (
        /*[out,retval]*/ long * density ) = 0;
      virtual HRESULT __stdcall put_VIsolineDensity (
        /*[in]*/ long density ) = 0;
      virtual HRESULT __stdcall get_WireframeType (
        /*[out,retval]*/ enum AcWireframeType * Type ) = 0;
      virtual HRESULT __stdcall put_WireframeType (
        /*[in]*/ enum AcWireframeType Type ) = 0;
      virtual HRESULT __stdcall get_MaintainAssociativity (
        /*[out,retval]*/ int * maintainAssoc ) = 0;
      virtual HRESULT __stdcall put_MaintainAssociativity (
        /*[in]*/ int maintainAssoc ) = 0;
      virtual HRESULT __stdcall get_ShowAssociativity (
        /*[out,retval]*/ VARIANT_BOOL * bEnabled ) = 0;
      virtual HRESULT __stdcall put_ShowAssociativity (
        /*[in]*/ VARIANT_BOOL bEnabled ) = 0;
      virtual HRESULT __stdcall get_EdgeExtensionDistances (
        /*[out,retval]*/ VARIANT * extDistances ) = 0;
      virtual HRESULT __stdcall put_EdgeExtensionDistances (
        /*[in]*/ VARIANT extDistances ) = 0;
      virtual HRESULT __stdcall get_SurfTrimAssociativity (
        /*[out,retval]*/ VARIANT * associative ) = 0;
      virtual HRESULT __stdcall put_SurfTrimAssociativity (
        /*[in]*/ VARIANT associative ) = 0;
};

struct __declspec(uuid("fb3fac8e-4f36-4a96-ae22-194b9b686d9f"))
IAcadPlaneSurface : IAcadSurface
{};

struct __declspec(uuid("813198dd-ef1c-4838-95f4-13a484cae932"))
IAcadExtrudedSurface : IAcadSurface
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_TaperAngle (
        /*[out,retval]*/ ACAD_ANGLE * TaperAngle ) = 0;
      virtual HRESULT __stdcall put_TaperAngle (
        /*[in]*/ ACAD_ANGLE TaperAngle ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ VARIANT * Direction ) = 0;
};

struct __declspec(uuid("60834ece-8e4a-4aec-a217-d0dd2de1b45f"))
IAcadRevolvedSurface : IAcadSurface
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RevolutionAngle (
        /*[out,retval]*/ ACAD_ANGLE * revAngle ) = 0;
      virtual HRESULT __stdcall put_RevolutionAngle (
        /*[in]*/ ACAD_ANGLE revAngle ) = 0;
      virtual HRESULT __stdcall get_AxisPosition (
        /*[out,retval]*/ VARIANT * AxisPosition ) = 0;
      virtual HRESULT __stdcall put_AxisPosition (
        /*[in]*/ VARIANT AxisPosition ) = 0;
      virtual HRESULT __stdcall get_AxisDirection (
        /*[out,retval]*/ VARIANT * AxisDirection ) = 0;
};

struct __declspec(uuid("b4ad389f-2624-4670-a480-dc8b29fbc3af"))
IAcadSweptSurface : IAcadSurface
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ProfileRotation (
        /*[out,retval]*/ ACAD_ANGLE * profileRotationAngle ) = 0;
      virtual HRESULT __stdcall put_ProfileRotation (
        /*[in]*/ ACAD_ANGLE profileRotationAngle ) = 0;
      virtual HRESULT __stdcall get_Bank (
        /*[out,retval]*/ VARIANT_BOOL * bBank ) = 0;
      virtual HRESULT __stdcall put_Bank (
        /*[in]*/ VARIANT_BOOL bBank ) = 0;
      virtual HRESULT __stdcall get_Twist (
        /*[out,retval]*/ ACAD_ANGLE * TwistAngle ) = 0;
      virtual HRESULT __stdcall put_Twist (
        /*[in]*/ ACAD_ANGLE TwistAngle ) = 0;
      virtual HRESULT __stdcall get_scale (
        /*[out,retval]*/ double * scale ) = 0;
      virtual HRESULT __stdcall put_scale (
        /*[in]*/ double scale ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
};

struct __declspec(uuid("a501529b-d232-42a5-91c1-71479187900e"))
IAcadLoftedSurface : IAcadSurface
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_NumCrossSections (
        /*[out,retval]*/ long * NumCrossSections ) = 0;
      virtual HRESULT __stdcall get_NumGuidePaths (
        /*[out,retval]*/ long * NumGuidePaths ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormals (
        /*[out,retval]*/ enum AcLoftedSurfaceNormalType * surfaceNormal ) = 0;
      virtual HRESULT __stdcall put_SurfaceNormals (
        /*[in]*/ enum AcLoftedSurfaceNormalType surfaceNormal ) = 0;
      virtual HRESULT __stdcall get_StartDraftAngle (
        /*[out,retval]*/ ACAD_ANGLE * StartDraftAngle ) = 0;
      virtual HRESULT __stdcall put_StartDraftAngle (
        /*[in]*/ ACAD_ANGLE StartDraftAngle ) = 0;
      virtual HRESULT __stdcall get_StartDraftMagnitude (
        /*[out,retval]*/ double * startDraftMag ) = 0;
      virtual HRESULT __stdcall put_StartDraftMagnitude (
        /*[in]*/ double startDraftMag ) = 0;
      virtual HRESULT __stdcall get_EndDraftAngle (
        /*[out,retval]*/ ACAD_ANGLE * EndDraftAngle ) = 0;
      virtual HRESULT __stdcall put_EndDraftAngle (
        /*[in]*/ ACAD_ANGLE EndDraftAngle ) = 0;
      virtual HRESULT __stdcall get_EndDraftMagnitude (
        /*[out,retval]*/ double * endDraftMag ) = 0;
      virtual HRESULT __stdcall put_EndDraftMagnitude (
        /*[in]*/ double endDraftMag ) = 0;
      virtual HRESULT __stdcall get_Closed (
        /*[out,retval]*/ VARIANT_BOOL * bClosed ) = 0;
      virtual HRESULT __stdcall put_Closed (
        /*[in]*/ VARIANT_BOOL bClosed ) = 0;
      virtual HRESULT __stdcall get_StartSmoothMagnitude (
        /*[out,retval]*/ double * startSmoothMag ) = 0;
      virtual HRESULT __stdcall put_StartSmoothMagnitude (
        /*[in]*/ double startSmoothMag ) = 0;
      virtual HRESULT __stdcall get_EndSmoothMagnitude (
        /*[out,retval]*/ double * endSmoothMag ) = 0;
      virtual HRESULT __stdcall put_EndSmoothMagnitude (
        /*[in]*/ double endSmoothMag ) = 0;
      virtual HRESULT __stdcall get_StartSmoothContinuity (
        /*[out,retval]*/ int * StartSmoothContinuity ) = 0;
      virtual HRESULT __stdcall put_StartSmoothContinuity (
        /*[in]*/ int StartSmoothContinuity ) = 0;
      virtual HRESULT __stdcall get_EndSmoothContinuity (
        /*[out,retval]*/ int * EndSmoothContinuity ) = 0;
      virtual HRESULT __stdcall put_EndSmoothContinuity (
        /*[in]*/ int EndSmoothContinuity ) = 0;
      virtual HRESULT __stdcall get_Periodic (
        /*[out,retval]*/ VARIANT_BOOL * bPeriodic ) = 0;
      virtual HRESULT __stdcall put_Periodic (
        /*[in]*/ VARIANT_BOOL bPeriodic ) = 0;
};

struct __declspec(uuid("010c960c-b734-4c93-a50c-e73d8f29d6de"))
IAcadSection2 : IAcadSection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_State2 (
        /*[out,retval]*/ enum AcSectionState2 * pVal ) = 0;
      virtual HRESULT __stdcall put_State2 (
        /*[in]*/ enum AcSectionState2 pVal ) = 0;
      virtual HRESULT __stdcall get_SliceDepth (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SliceDepth (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_SectionPlaneOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_SectionPlaneOffset (
        /*[in]*/ double pVal ) = 0;
};

struct __declspec(uuid("92f36a6f-7faf-49de-93f0-93e9bcb8aa6c"))
IAcadUnderlay : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Contrast (
        /*[out,retval]*/ long * Contrast ) = 0;
      virtual HRESULT __stdcall put_Contrast (
        /*[in]*/ long Contrast ) = 0;
      virtual HRESULT __stdcall get_Fade (
        /*[out,retval]*/ long * Fade ) = 0;
      virtual HRESULT __stdcall put_Fade (
        /*[in]*/ long Fade ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ VARIANT * pos ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ VARIANT pos ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_UnderlayName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_UnderlayName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall put_ItemName (
        /*[in]*/ BSTR sheetName ) = 0;
      virtual HRESULT __stdcall get_ItemName (
        /*[out,retval]*/ BSTR * sheetName ) = 0;
      virtual HRESULT __stdcall get_Monochrome (
        /*[out,retval]*/ VARIANT_BOOL * bMono ) = 0;
      virtual HRESULT __stdcall put_Monochrome (
        /*[in]*/ VARIANT_BOOL bMono ) = 0;
      virtual HRESULT __stdcall get_AdjustForBackground (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_AdjustForBackground (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall ClipBoundary (
        /*[in]*/ VARIANT boundry ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ ACAD_NOUNITS * ScaleFactor ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ ACAD_NOUNITS ScaleFactor ) = 0;
      virtual HRESULT __stdcall get_File (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_File (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_UnderlayVisibility (
        /*[out,retval]*/ VARIANT_BOOL * fVisible ) = 0;
      virtual HRESULT __stdcall put_UnderlayVisibility (
        /*[in]*/ VARIANT_BOOL fVisible ) = 0;
      virtual HRESULT __stdcall get_ClippingEnabled (
        /*[out,retval]*/ VARIANT_BOOL * kClip ) = 0;
      virtual HRESULT __stdcall put_ClippingEnabled (
        /*[in]*/ VARIANT_BOOL kClip ) = 0;
      virtual HRESULT __stdcall get_UnderlayLayerOverrideApplied (
        /*[out,retval]*/ enum AcUnderlayLayerOverrideType * bOverride ) = 0;
      virtual HRESULT __stdcall put_UnderlayLayerOverrideApplied (
        /*[in]*/ enum AcUnderlayLayerOverrideType bOverride ) = 0;
};

struct __declspec(uuid("9e607850-b9bd-4516-8865-58d1ec3d2133"))
IAcadDwfUnderlay : IAcadUnderlay
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DWFFormat (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_DWFFormat (
        /*[in]*/ BSTR Name ) = 0;
};

struct __declspec(uuid("03be17b5-89b0-4341-a5fc-31934bdb5482"))
IAcadWipeout : IAcadRasterImage
{};

struct __declspec(uuid("7b142040-0b30-4e59-966d-fa1277604017"))
IAcadSubDMesh : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Smoothness (
        /*[out,retval]*/ int * level ) = 0;
      virtual HRESULT __stdcall put_Smoothness (
        /*[in]*/ int level ) = 0;
      virtual HRESULT __stdcall get_Coordinates (
        /*[out,retval]*/ VARIANT * corners ) = 0;
      virtual HRESULT __stdcall put_Coordinates (
        /*[in]*/ VARIANT corners ) = 0;
      virtual HRESULT __stdcall get_Coordinate (
        /*[in]*/ int Index,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Coordinate (
        /*[in]*/ int Index,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VertexCount (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall get_FaceCount (
        /*[out,retval]*/ int * Count ) = 0;
};

struct __declspec(uuid("be4e6da9-6602-4f83-b458-df0fe7602cc8"))
IAcadNurbSurface : IAcadSurface
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CvHullDisplay (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_CvHullDisplay (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
};

struct __declspec(uuid("030fbed4-476a-4db5-84c0-6f2cd856fcc3"))
IAcadGeoPositionMarker : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ VARIANT * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ VARIANT Position ) = 0;
      virtual HRESULT __stdcall get_TextString (
        /*[out,retval]*/ BSTR * bstrText ) = 0;
      virtual HRESULT __stdcall put_TextString (
        /*[in]*/ BSTR bstrText ) = 0;
      virtual HRESULT __stdcall get_TextStyleName (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_TextStyleName (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_TextJustify (
        /*[out,retval]*/ enum AcAttachmentPoint * attPoint ) = 0;
      virtual HRESULT __stdcall put_TextJustify (
        /*[in]*/ enum AcAttachmentPoint attPoint ) = 0;
      virtual HRESULT __stdcall get_DrawingDirection (
        /*[out,retval]*/ enum AcDrawingDirection * drawDir ) = 0;
      virtual HRESULT __stdcall put_DrawingDirection (
        /*[in]*/ enum AcDrawingDirection drawDir ) = 0;
      virtual HRESULT __stdcall get_TextWidth (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_TextWidth (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * rotAngle ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE rotAngle ) = 0;
      virtual HRESULT __stdcall get_LineSpacingFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_LineSpacingFactor (
        /*[in]*/ double factor ) = 0;
      virtual HRESULT __stdcall get_LineSpacingDistance (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_LineSpacingDistance (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_LineSpacingStyle (
        /*[out,retval]*/ enum AcLineSpacingStyle * style ) = 0;
      virtual HRESULT __stdcall put_LineSpacingStyle (
        /*[in]*/ enum AcLineSpacingStyle style ) = 0;
      virtual HRESULT __stdcall get_BackgroundFill (
        /*[out,retval]*/ VARIANT_BOOL * bUseBackgroundFill ) = 0;
      virtual HRESULT __stdcall put_BackgroundFill (
        /*[in]*/ VARIANT_BOOL bUseBackgroundFill ) = 0;
      virtual HRESULT __stdcall get_LandingGap (
        /*[out,retval]*/ double * gap ) = 0;
      virtual HRESULT __stdcall put_LandingGap (
        /*[in]*/ double gap ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * gap ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double gap ) = 0;
      virtual HRESULT __stdcall get_TextFrameDisplay (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_TextFrameDisplay (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Latitude (
        /*[out,retval]*/ BSTR * Latitude ) = 0;
      virtual HRESULT __stdcall put_Latitude (
        /*[in]*/ BSTR Latitude ) = 0;
      virtual HRESULT __stdcall get_Longitude (
        /*[out,retval]*/ BSTR * Longitude ) = 0;
      virtual HRESULT __stdcall put_Longitude (
        /*[in]*/ BSTR Longitude ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * Altitude ) = 0;
      virtual HRESULT __stdcall put_Altitude (
        /*[in]*/ double Altitude ) = 0;
      virtual HRESULT __stdcall get_Notes (
        /*[out,retval]*/ BSTR * Notes ) = 0;
      virtual HRESULT __stdcall put_Notes (
        /*[in]*/ BSTR Notes ) = 0;
};

struct __declspec(uuid("0af8ab47-b44e-4e1c-92ef-20ec0202c3bd"))
IAcadGeomapImage : IAcadRasterImage
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GeoImageBrightness (
        /*[out,retval]*/ long * Brightness ) = 0;
      virtual HRESULT __stdcall put_GeoImageBrightness (
        /*[in]*/ long Brightness ) = 0;
      virtual HRESULT __stdcall get_GeoImageContrast (
        /*[out,retval]*/ long * Contrast ) = 0;
      virtual HRESULT __stdcall put_GeoImageContrast (
        /*[in]*/ long Contrast ) = 0;
      virtual HRESULT __stdcall get_GeoImageFade (
        /*[out,retval]*/ long * Fade ) = 0;
      virtual HRESULT __stdcall put_GeoImageFade (
        /*[in]*/ long Fade ) = 0;
      virtual HRESULT __stdcall get_GeoImagePosition (
        /*[out,retval]*/ VARIANT * Position ) = 0;
      virtual HRESULT __stdcall get_GeoImageWidth (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall get_GeoImageHeight (
        /*[out,retval]*/ double * Height ) = 0;
};

struct __declspec(uuid("9995941c-67e4-4c5b-a2c7-f6bc8a329648"))
IAcadPointCloud : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseEntityColor (
        /*[out,retval]*/ enum AcPointCloudColorType * val ) = 0;
      virtual HRESULT __stdcall put_UseEntityColor (
        /*[in]*/ enum AcPointCloudColorType val ) = 0;
      virtual HRESULT __stdcall get_ShowIntensity (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_ShowIntensity (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_IntensityColorScheme (
        /*[out,retval]*/ enum AcPointCloudIntensityStyle * val ) = 0;
      virtual HRESULT __stdcall put_IntensityColorScheme (
        /*[in]*/ enum AcPointCloudIntensityStyle val ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * EndPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT EndPoint ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * val ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE val ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ ACAD_DISTANCE * val ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ ACAD_DISTANCE val ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ ACAD_DISTANCE * val ) = 0;
      virtual HRESULT __stdcall put_Length (
        /*[in]*/ ACAD_DISTANCE val ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ ACAD_DISTANCE * val ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ ACAD_DISTANCE val ) = 0;
      virtual HRESULT __stdcall get_scale (
        /*[out,retval]*/ ACAD_NOUNITS * val ) = 0;
      virtual HRESULT __stdcall put_scale (
        /*[in]*/ ACAD_NOUNITS val ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * val ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * val ) = 0;
      virtual HRESULT __stdcall get_ShowClipped (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_ShowClipped (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_Stylization (
        /*[out,retval]*/ enum AcPointCloudStylizationType * val ) = 0;
      virtual HRESULT __stdcall put_Stylization (
        /*[in]*/ enum AcPointCloudStylizationType val ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * val ) = 0;
      virtual HRESULT __stdcall get_UnitFactor (
        /*[out,retval]*/ ACAD_NOUNITS * val ) = 0;
};

struct __declspec(uuid("22c5274e-dc1a-4b3f-a1f4-943af9bb7a46"))
IAcadPointCloudEx : IAcadEntity
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Stylization (
        /*[out,retval]*/ enum AcPointCloudExStylizationType * val ) = 0;
      virtual HRESULT __stdcall put_Stylization (
        /*[in]*/ enum AcPointCloudExStylizationType val ) = 0;
      virtual HRESULT __stdcall get_ColorScheme (
        /*[out,retval]*/ BSTR * val ) = 0;
      virtual HRESULT __stdcall put_ColorScheme (
        /*[in]*/ int val ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ VARIANT * EndPoint ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ VARIANT EndPoint ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ ACAD_ANGLE * val ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ ACAD_ANGLE val ) = 0;
      virtual HRESULT __stdcall get_scale (
        /*[out,retval]*/ ACAD_NOUNITS * val ) = 0;
      virtual HRESULT __stdcall put_scale (
        /*[in]*/ ACAD_NOUNITS val ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * val ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR val ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * val ) = 0;
      virtual HRESULT __stdcall get_ShowCropped (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_ShowCropped (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_Geolocate (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_Geolocate (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * val ) = 0;
      virtual HRESULT __stdcall get_UnitFactor (
        /*[out,retval]*/ ACAD_NOUNITS * val ) = 0;
};

struct __declspec(uuid("ffc368fe-bddf-4281-806a-aba65afad03e"))
IAcadPointCloudEx2 : IAcadPointCloudEx
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Segmentation (
        /*[out,retval]*/ BSTR * val ) = 0;
};

struct __declspec(uuid("6bdb570e-652b-4e06-9fa3-17266bc95414"))
IAcadDatabase : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ModelSpace (
        /*[out,retval]*/ struct IAcadModelSpace * * pMSpace ) = 0;
      virtual HRESULT __stdcall get_PaperSpace (
        /*[out,retval]*/ struct IAcadPaperSpace * * pPSpace ) = 0;
      virtual HRESULT __stdcall get_Blocks (
        /*[out,retval]*/ struct IAcadBlocks * * pBlocks ) = 0;
      virtual HRESULT __stdcall CopyObjects (
        /*[in]*/ VARIANT Objects,
        /*[in]*/ VARIANT Owner,
        /*[in,out]*/ VARIANT * IdPairs,
        /*[out,retval]*/ VARIANT * pNewObjects ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct IAcadGroups * * pGroups ) = 0;
      virtual HRESULT __stdcall get_DimStyles (
        /*[out,retval]*/ struct IAcadDimStyles * * pDimStyles ) = 0;
      virtual HRESULT __stdcall get_Layers (
        /*[out,retval]*/ struct IAcadLayers * * pLayers ) = 0;
      virtual HRESULT __stdcall get_Linetypes (
        /*[out,retval]*/ struct IAcadLineTypes * * pLinetypes ) = 0;
      virtual HRESULT __stdcall get_Dictionaries (
        /*[out,retval]*/ struct IAcadDictionaries * * pDictionaries ) = 0;
      virtual HRESULT __stdcall get_RegisteredApplications (
        /*[out,retval]*/ struct IAcadRegisteredApplications * * pRegApps ) = 0;
      virtual HRESULT __stdcall get_TextStyles (
        /*[out,retval]*/ struct IAcadTextStyles * * pTextStyles ) = 0;
      virtual HRESULT __stdcall get_UserCoordinateSystems (
        /*[out,retval]*/ struct IAcadUCSs * * pUCSs ) = 0;
      virtual HRESULT __stdcall get_Views (
        /*[out,retval]*/ struct IAcadViews * * pViews ) = 0;
      virtual HRESULT __stdcall get_Viewports (
        /*[out,retval]*/ struct IAcadViewports * * pViewports ) = 0;
      virtual HRESULT __stdcall get_ElevationModelSpace (
        /*[out,retval]*/ double * Elevation ) = 0;
      virtual HRESULT __stdcall put_ElevationModelSpace (
        /*[in]*/ double Elevation ) = 0;
      virtual HRESULT __stdcall get_ElevationPaperSpace (
        /*[out,retval]*/ double * Elevation ) = 0;
      virtual HRESULT __stdcall put_ElevationPaperSpace (
        /*[in]*/ double Elevation ) = 0;
      virtual HRESULT __stdcall get_Limits (
        /*[out,retval]*/ VARIANT * Limits ) = 0;
      virtual HRESULT __stdcall put_Limits (
        /*[in]*/ VARIANT Limits ) = 0;
      virtual HRESULT __stdcall HandleToObject (
        /*[in]*/ BSTR Handle,
        /*[out,retval]*/ IDispatch * * pObj ) = 0;
      virtual HRESULT __stdcall ObjectIdToObject (
        /*[in]*/ LONG_PTR ObjectID,
        /*[out,retval]*/ IDispatch * * pObj ) = 0;
      virtual HRESULT __stdcall get_Layouts (
        /*[out,retval]*/ struct IAcadLayouts * * pLayouts ) = 0;
      virtual HRESULT __stdcall get_PlotConfigurations (
        /*[out,retval]*/ struct IAcadPlotConfigurations * * pPlotConfigs ) = 0;
      virtual HRESULT __stdcall get_Preferences (
        /*[out,retval]*/ struct IAcadDatabasePreferences * * pPref ) = 0;
      virtual HRESULT __stdcall get_SummaryInfo (
        /*[out,retval]*/ struct IAcadSummaryInfo * * pSummaryInfo ) = 0;
      virtual HRESULT __stdcall get_SectionManager (
        /*[out,retval]*/ struct IAcadSectionManager * * pSecMgr ) = 0;
      virtual HRESULT __stdcall get_Materials (
        /*[out,retval]*/ struct IAcadMaterials * * pMaterials ) = 0;
};

struct __declspec(uuid("0cb51cb5-cc33-4ac0-9867-085eba3316a0"))
IAcadLayerStateManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetDatabase (
        /*[in]*/ struct IAcadDatabase * iHostDb ) = 0;
      virtual HRESULT __stdcall put_Mask (
        /*[in]*/ BSTR bsName,
        /*[in]*/ enum AcLayerStateMask eMask ) = 0;
      virtual HRESULT __stdcall get_Mask (
        /*[in]*/ BSTR bsName,
        /*[out,retval]*/ enum AcLayerStateMask * eMask ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ BSTR bsName,
        /*[in]*/ enum AcLayerStateMask eMask ) = 0;
      virtual HRESULT __stdcall Restore (
        /*[in]*/ BSTR bsName ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ BSTR bsName ) = 0;
      virtual HRESULT __stdcall Rename (
        /*[in]*/ BSTR bsName,
        /*[in]*/ BSTR bsNewName ) = 0;
      virtual HRESULT __stdcall Import (
        /*[in]*/ BSTR bsFilename ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR bsName,
        /*[in]*/ BSTR bsFilename ) = 0;
};

struct __declspec(uuid("181f4481-763e-4e58-ae89-cf4c003ef491"))
IAcadBlock : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadEntity * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Origin (
        /*[out,retval]*/ VARIANT * Origin ) = 0;
      virtual HRESULT __stdcall put_Origin (
        /*[in]*/ VARIANT Origin ) = 0;
      virtual HRESULT __stdcall AddCustomObject (
        /*[in]*/ BSTR ClassName,
        /*[out,retval]*/ IDispatch * * pObject ) = 0;
      virtual HRESULT __stdcall Add3DFace (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[in]*/ VARIANT point3,
        /*[in]*/ VARIANT Point4,
        /*[out,retval]*/ struct IAcad3DFace * * pFace3d ) = 0;
      virtual HRESULT __stdcall Add3DMesh (
        /*[in]*/ int M,
        /*[in]*/ int N,
        /*[in]*/ VARIANT PointsMatrix,
        /*[out,retval]*/ struct IAcadPolygonMesh * * pMesh3d ) = 0;
      virtual HRESULT __stdcall Add3DPoly (
        /*[in]*/ VARIANT PointsArray,
        /*[out,retval]*/ struct IAcad3DPolyline * * pPoly3d ) = 0;
      virtual HRESULT __stdcall AddArc (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double Radius,
        /*[in]*/ double StartAngle,
        /*[in]*/ double EndAngle,
        /*[out,retval]*/ struct IAcadArc * * pArc ) = 0;
      virtual HRESULT __stdcall AddAttribute (
        /*[in]*/ double Height,
        /*[in]*/ enum AcAttributeMode Mode,
        /*[in]*/ BSTR Prompt,
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ BSTR Tag,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ struct IAcadAttribute * * pAttr ) = 0;
      virtual HRESULT __stdcall AddBox (
        /*[in]*/ VARIANT Origin,
        /*[in]*/ double Length,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IAcad3DSolid * * pBox ) = 0;
      virtual HRESULT __stdcall AddCircle (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct IAcadCircle * * pCircle ) = 0;
      virtual HRESULT __stdcall AddCone (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double BaseRadius,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IAcad3DSolid * * pCone ) = 0;
      virtual HRESULT __stdcall AddCylinder (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double Radius,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IAcad3DSolid * * pCyl ) = 0;
      virtual HRESULT __stdcall AddDimAligned (
        /*[in]*/ VARIANT ExtLine1Point,
        /*[in]*/ VARIANT ExtLine2Point,
        /*[in]*/ VARIANT TextPosition,
        /*[out,retval]*/ struct IAcadDimAligned * * pDim ) = 0;
      virtual HRESULT __stdcall AddDimAngular (
        /*[in]*/ VARIANT AngleVertex,
        /*[in]*/ VARIANT FirstEndPoint,
        /*[in]*/ VARIANT SecondEndPoint,
        /*[in]*/ VARIANT TextPoint,
        /*[out,retval]*/ struct IAcadDimAngular * * pDim ) = 0;
      virtual HRESULT __stdcall AddDimDiametric (
        /*[in]*/ VARIANT ChordPoint,
        /*[in]*/ VARIANT FarChordPoint,
        /*[in]*/ double LeaderLength,
        /*[out,retval]*/ struct IAcadDimDiametric * * pDim ) = 0;
      virtual HRESULT __stdcall AddDimRotated (
        /*[in]*/ VARIANT ExtLine1Point,
        /*[in]*/ VARIANT ExtLine2Point,
        /*[in]*/ VARIANT DimLineLocation,
        /*[in]*/ double RotationAngle,
        /*[out,retval]*/ struct IAcadDimRotated * * pDim ) = 0;
      virtual HRESULT __stdcall AddDimOrdinate (
        /*[in]*/ VARIANT DefinitionPoint,
        /*[in]*/ VARIANT LeaderEndPoint,
        /*[in]*/ int UseXAxis,
        /*[out,retval]*/ struct IAcadDimOrdinate * * pDim ) = 0;
      virtual HRESULT __stdcall AddDimRadial (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT ChordPoint,
        /*[in]*/ double LeaderLength,
        /*[out,retval]*/ struct IAcadDimRadial * * pDim ) = 0;
      virtual HRESULT __stdcall AddEllipse (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT MajorAxis,
        /*[in]*/ double RadiusRatio,
        /*[out,retval]*/ struct IAcadEllipse * * pEllipse ) = 0;
      virtual HRESULT __stdcall AddEllipticalCone (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double MajorRadius,
        /*[in]*/ double MinorRadius,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IAcad3DSolid * * pEllipCone ) = 0;
      virtual HRESULT __stdcall AddEllipticalCylinder (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double MajorRadius,
        /*[in]*/ double MinorRadius,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IAcad3DSolid * * pEllipCyl ) = 0;
      virtual HRESULT __stdcall AddExtrudedSolid (
        /*[in]*/ struct IAcadRegion * Profile,
        /*[in]*/ double Height,
        /*[in]*/ double TaperAngle,
        /*[out,retval]*/ struct IAcad3DSolid * * pExtrSolid ) = 0;
      virtual HRESULT __stdcall AddExtrudedSolidAlongPath (
        /*[in]*/ struct IAcadRegion * Profile,
        /*[in]*/ IDispatch * Path,
        /*[out,retval]*/ struct IAcad3DSolid * * pExtrSolid ) = 0;
      virtual HRESULT __stdcall AddLeader (
        /*[in]*/ VARIANT PointsArray,
        /*[in]*/ struct IAcadEntity * Annotation,
        /*[in]*/ enum AcLeaderType Type,
        /*[out,retval]*/ struct IAcadLeader * * pLeader ) = 0;
      virtual HRESULT __stdcall AddMText (
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ double Width,
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ struct IAcadMText * * pMtext ) = 0;
      virtual HRESULT __stdcall AddPoint (
        /*[in]*/ VARIANT Point,
        /*[out,retval]*/ struct IAcadPoint * * pPoint ) = 0;
      virtual HRESULT __stdcall AddLightWeightPolyline (
        /*[in]*/ VARIANT VerticesList,
        /*[out,retval]*/ struct IAcadLWPolyline * * pLWPolyline ) = 0;
      virtual HRESULT __stdcall AddPolyline (
        /*[in]*/ VARIANT VerticesList,
        /*[out,retval]*/ struct IAcadPolyline * * pPolyline ) = 0;
      virtual HRESULT __stdcall AddRay (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[out,retval]*/ struct IAcadRay * * pRay ) = 0;
      virtual HRESULT __stdcall AddRegion (
        /*[in]*/ VARIANT ObjectList,
        /*[out,retval]*/ VARIANT * pRegions ) = 0;
      virtual HRESULT __stdcall AddRevolvedSolid (
        /*[in]*/ struct IAcadRegion * Profile,
        /*[in]*/ VARIANT AxisPoint,
        /*[in]*/ VARIANT AxisDir,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct IAcad3DSolid * * pRevolSolid ) = 0;
      virtual HRESULT __stdcall AddShape (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ double ScaleFactor,
        /*[in]*/ double RotationAngle,
        /*[out,retval]*/ struct IAcadShape * * pShape ) = 0;
      virtual HRESULT __stdcall AddSolid (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[in]*/ VARIANT point3,
        /*[in]*/ VARIANT Point4,
        /*[out,retval]*/ struct IAcadSolid * * pSolid ) = 0;
      virtual HRESULT __stdcall AddSphere (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct IAcad3DSolid * * pSphere ) = 0;
      virtual HRESULT __stdcall AddSpline (
        /*[in]*/ VARIANT PointsArray,
        /*[in]*/ VARIANT StartTangent,
        /*[in]*/ VARIANT EndTangent,
        /*[out,retval]*/ struct IAcadSpline * * pSpline ) = 0;
      virtual HRESULT __stdcall AddText (
        /*[in]*/ BSTR TextString,
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IAcadText * * pText ) = 0;
      virtual HRESULT __stdcall AddTolerance (
        /*[in]*/ BSTR Text,
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ VARIANT Direction,
        /*[out,retval]*/ struct IAcadTolerance * * pTolerance ) = 0;
      virtual HRESULT __stdcall AddTorus (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double TorusRadius,
        /*[in]*/ double TubeRadius,
        /*[out,retval]*/ struct IAcad3DSolid * * pTorus ) = 0;
      virtual HRESULT __stdcall AddTrace (
        /*[in]*/ VARIANT PointsArray,
        /*[out,retval]*/ struct IAcadTrace * * pTrace ) = 0;
      virtual HRESULT __stdcall AddWedge (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double Length,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IAcad3DSolid * * pWedge ) = 0;
      virtual HRESULT __stdcall AddXline (
        /*[in]*/ VARIANT Point1,
        /*[in]*/ VARIANT Point2,
        /*[out,retval]*/ struct IAcadXline * * pXline ) = 0;
      virtual HRESULT __stdcall InsertBlock (
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ BSTR Name,
        /*[in]*/ double Xscale,
        /*[in]*/ double Yscale,
        /*[in]*/ double Zscale,
        /*[in]*/ double Rotation,
        /*[in]*/ VARIANT Password,
        /*[out,retval]*/ struct IAcadBlockReference * * pBlkRef ) = 0;
      virtual HRESULT __stdcall AddHatch (
        /*[in]*/ int PatternType,
        /*[in]*/ BSTR PatternName,
        /*[in]*/ VARIANT_BOOL Associativity,
        /*[in]*/ VARIANT HatchObjectType,
        /*[out,retval]*/ struct IAcadHatch * * pHatch ) = 0;
      virtual HRESULT __stdcall AddRaster (
        /*[in]*/ BSTR imageFileName,
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ double ScaleFactor,
        /*[in]*/ double RotationAngle,
        /*[out,retval]*/ struct IAcadRasterImage * * pRaster ) = 0;
      virtual HRESULT __stdcall AddLine (
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ struct IAcadLine * * pLine ) = 0;
      virtual HRESULT __stdcall get_IsLayout (
        /*[out,retval]*/ VARIANT_BOOL * bIsLayout ) = 0;
      virtual HRESULT __stdcall get_Layout (
        /*[out,retval]*/ struct IAcadLayout * * pLayout ) = 0;
      virtual HRESULT __stdcall get_IsXRef (
        /*[out,retval]*/ VARIANT_BOOL * pIsXRref ) = 0;
      virtual HRESULT __stdcall AddMInsertBlock (
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ BSTR Name,
        /*[in]*/ double Xscale,
        /*[in]*/ double Yscale,
        /*[in]*/ double Zscale,
        /*[in]*/ double Rotation,
        /*[in]*/ long NumRows,
        /*[in]*/ long NumColumns,
        /*[in]*/ long RowSpacing,
        /*[in]*/ long ColumnSpacing,
        /*[in]*/ VARIANT Password,
        /*[out,retval]*/ struct IAcadMInsertBlock * * pMInsertBlk ) = 0;
      virtual HRESULT __stdcall AddPolyfaceMesh (
        /*[in]*/ VARIANT VertexList,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ struct IAcadPolyfaceMesh * * pPFMesh ) = 0;
      virtual HRESULT __stdcall AddMLine (
        /*[in]*/ VARIANT VertexList,
        /*[out,retval]*/ struct IAcadMLine * * pMLine ) = 0;
      virtual HRESULT __stdcall AddDim3PointAngular (
        /*[in]*/ VARIANT AngleVertex,
        /*[in]*/ VARIANT FirstEndPoint,
        /*[in]*/ VARIANT SecondEndPoint,
        /*[in]*/ VARIANT TextPoint,
        /*[out,retval]*/ struct IAcadDim3PointAngular * * pDim ) = 0;
      virtual HRESULT __stdcall get_XRefDatabase (
        /*[out,retval]*/ struct IAcadDatabase * * pDatabase ) = 0;
      virtual HRESULT __stdcall AttachExternalReference (
        /*[in]*/ BSTR PathName,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ double Xscale,
        /*[in]*/ double Yscale,
        /*[in]*/ double Zscale,
        /*[in]*/ double Rotation,
        /*[in]*/ VARIANT_BOOL bOverlay,
        /*[in]*/ VARIANT Password,
        /*[out,retval]*/ struct IAcadExternalReference * * pXRef ) = 0;
      virtual HRESULT __stdcall Unload ( ) = 0;
      virtual HRESULT __stdcall Reload ( ) = 0;
      virtual HRESULT __stdcall Bind (
        /*[in]*/ VARIANT_BOOL bPrefixName ) = 0;
      virtual HRESULT __stdcall Detach ( ) = 0;
      virtual HRESULT __stdcall AddTable (
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ int NumRows,
        /*[in]*/ int NumColumns,
        /*[in]*/ double RowHeight,
        /*[in]*/ double ColWidth,
        /*[out,retval]*/ struct IAcadTable * * pTable ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Path (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Comments (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Comments (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Units (
        /*[out,retval]*/ enum AcInsertUnits * pIU ) = 0;
      virtual HRESULT __stdcall put_Units (
        /*[in]*/ enum AcInsertUnits pIU ) = 0;
      virtual HRESULT __stdcall get_Explodable (
        /*[out,retval]*/ VARIANT_BOOL * bExplodable ) = 0;
      virtual HRESULT __stdcall put_Explodable (
        /*[in]*/ VARIANT_BOOL bExplodable ) = 0;
      virtual HRESULT __stdcall get_BlockScaling (
        /*[out,retval]*/ enum AcBlockScaling * pBS ) = 0;
      virtual HRESULT __stdcall put_BlockScaling (
        /*[in]*/ enum AcBlockScaling pBS ) = 0;
      virtual HRESULT __stdcall get_IsDynamicBlock (
        /*[out,retval]*/ VARIANT_BOOL * pDynamicBlock ) = 0;
      virtual HRESULT __stdcall AddDimArc (
        /*[in]*/ VARIANT ArcCenter,
        /*[in]*/ VARIANT FirstEndPoint,
        /*[in]*/ VARIANT SecondEndPoint,
        /*[in]*/ VARIANT ArcPoint,
        /*[out,retval]*/ struct IAcadDimArcLength * * pDim ) = 0;
      virtual HRESULT __stdcall AddDimRadialLarge (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT ChordPoint,
        /*[in]*/ VARIANT OverrideCenter,
        /*[in]*/ VARIANT JogPoint,
        /*[in]*/ double JogAngle,
        /*[out,retval]*/ struct IAcadDimRadialLarge * * pDim ) = 0;
      virtual HRESULT __stdcall AddSection (
        /*[in]*/ VARIANT FromPoint,
        /*[in]*/ VARIANT ToPoint,
        /*[in]*/ VARIANT planeVector,
        /*[out,retval]*/ struct IAcadSection * * ppSecPlane ) = 0;
      virtual HRESULT __stdcall AddMLeader (
        /*[in]*/ VARIANT PointsArray,
        /*[out]*/ int * leaderLineIndex,
        /*[out,retval]*/ struct IAcadMLeader * * pMLeader ) = 0;
};

struct __declspec(uuid("dd75d714-5662-44ea-bd50-3c48aa71e248"))
IAcadModelSpace : IAcadBlock
{};

struct __declspec(uuid("39642510-ece5-4620-a0ee-5ec5c6382c15"))
IAcadLayout : IAcadPlotConfiguration
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Block (
        /*[out,retval]*/ struct IAcadBlock * * pBlock ) = 0;
      virtual HRESULT __stdcall get_TabOrder (
        /*[out,retval]*/ long * pOrder ) = 0;
      virtual HRESULT __stdcall put_TabOrder (
        /*[in]*/ long pOrder ) = 0;
};

struct __declspec(uuid("655a39a8-041f-4156-9f02-f9180a0468a5"))
IAcadPaperSpace : IAcadBlock
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddPViewport (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IAcadPViewport * * pPViewport ) = 0;
};

struct __declspec(uuid("16effb20-32ce-494d-982c-373a53968a40"))
IAcadBlocks : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadBlock * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadBlock * * pBlock ) = 0;
};

struct __declspec(uuid("a1bd1006-20ed-48c4-9180-1ee5b26f6848"))
IAcadLayouts : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadLayout * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadLayout * * pLayout ) = 0;
};

struct __declspec(uuid("f24a1ea1-ca8e-4a39-a23c-a28d3423ae5e"))
IAcadSortentsTable : IAcadObject
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall MoveToBottom (
        /*[in]*/ VARIANT Objects ) = 0;
      virtual HRESULT __stdcall MoveToTop (
        /*[in]*/ VARIANT Objects ) = 0;
      virtual HRESULT __stdcall MoveBelow (
        /*[in]*/ VARIANT Objects,
        /*[in]*/ struct IAcadEntity * Target ) = 0;
      virtual HRESULT __stdcall MoveAbove (
        /*[in]*/ VARIANT Objects,
        /*[in]*/ struct IAcadEntity * Target ) = 0;
      virtual HRESULT __stdcall SwapOrder (
        /*[in]*/ struct IAcadEntity * Object1,
        /*[in]*/ struct IAcadEntity * Object2 ) = 0;
      virtual HRESULT __stdcall Block (
        /*[out,retval]*/ struct IAcadBlock * * pBlock ) = 0;
      virtual HRESULT __stdcall GetFullDrawOrder (
        /*[out]*/ VARIANT * Objects,
        /*[in]*/ VARIANT_BOOL honorSortentsSysvar ) = 0;
      virtual HRESULT __stdcall GetRelativeDrawOrder (
        /*[out]*/ VARIANT * Objects,
        /*[in]*/ VARIANT_BOOL honorSortentsSysvar ) = 0;
      virtual HRESULT __stdcall SetRelativeDrawOrder (
        /*[in]*/ VARIANT Objects ) = 0;
};

struct __declspec(uuid("1c6e41bb-3441-477c-bcc0-6e05a3d487fd"))
IAcadDocument : IAcadDatabase
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Plot (
        /*[out,retval]*/ struct IAcadPlot * * pPlot ) = 0;
      virtual HRESULT __stdcall get_ActiveLayer (
        /*[out,retval]*/ struct IAcadLayer * * pActLayer ) = 0;
      virtual HRESULT __stdcall put_ActiveLayer (
        /*[in]*/ struct IAcadLayer * pActLayer ) = 0;
      virtual HRESULT __stdcall get_ActiveLinetype (
        /*[out,retval]*/ struct IAcadLineType * * pActLinetype ) = 0;
      virtual HRESULT __stdcall put_ActiveLinetype (
        /*[in]*/ struct IAcadLineType * pActLinetype ) = 0;
      virtual HRESULT __stdcall get_ActiveDimStyle (
        /*[out,retval]*/ struct IAcadDimStyle * * pActDimStyle ) = 0;
      virtual HRESULT __stdcall put_ActiveDimStyle (
        /*[in]*/ struct IAcadDimStyle * pActDimStyle ) = 0;
      virtual HRESULT __stdcall get_ActiveTextStyle (
        /*[out,retval]*/ struct IAcadTextStyle * * pActTextStyle ) = 0;
      virtual HRESULT __stdcall put_ActiveTextStyle (
        /*[in]*/ struct IAcadTextStyle * pActTextStyle ) = 0;
      virtual HRESULT __stdcall get_ActiveUCS (
        /*[out,retval]*/ struct IAcadUCS * * pActUCS ) = 0;
      virtual HRESULT __stdcall put_ActiveUCS (
        /*[in]*/ struct IAcadUCS * pActUCS ) = 0;
      virtual HRESULT __stdcall get_ActiveViewport (
        /*[out,retval]*/ struct IAcadViewport * * pActView ) = 0;
      virtual HRESULT __stdcall put_ActiveViewport (
        /*[in]*/ struct IAcadViewport * pActView ) = 0;
      virtual HRESULT __stdcall get_ActivePViewport (
        /*[out,retval]*/ struct IAcadPViewport * * pActView ) = 0;
      virtual HRESULT __stdcall put_ActivePViewport (
        /*[in]*/ struct IAcadPViewport * pActView ) = 0;
      virtual HRESULT __stdcall get_ActiveSpace (
        /*[out,retval]*/ enum AcActiveSpace * ActSpace ) = 0;
      virtual HRESULT __stdcall put_ActiveSpace (
        /*[in]*/ enum AcActiveSpace ActSpace ) = 0;
      virtual HRESULT __stdcall get_SelectionSets (
        /*[out,retval]*/ struct IAcadSelectionSets * * pSelSets ) = 0;
      virtual HRESULT __stdcall get_ActiveSelectionSet (
        /*[out,retval]*/ struct IAcadSelectionSet * * pSelSet ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * FullName ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall get_ObjectSnapMode (
        /*[out,retval]*/ VARIANT_BOOL * fSnapMode ) = 0;
      virtual HRESULT __stdcall put_ObjectSnapMode (
        /*[in]*/ VARIANT_BOOL fSnapMode ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * bReadOnly ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * bSaved ) = 0;
      virtual HRESULT __stdcall get_MSpace (
        /*[out,retval]*/ VARIANT_BOOL * Mode ) = 0;
      virtual HRESULT __stdcall put_MSpace (
        /*[in]*/ VARIANT_BOOL Mode ) = 0;
      virtual HRESULT __stdcall get_Utility (
        /*[out,retval]*/ struct IAcadUtility * * pUtil ) = 0;
      virtual HRESULT __stdcall Open (
        /*[in]*/ BSTR FullName,
        /*[in]*/ VARIANT Password,
        /*[out,retval]*/ struct IAcadDocument * * pDocObj ) = 0;
      virtual HRESULT __stdcall AuditInfo (
        /*[in]*/ VARIANT_BOOL FixErr ) = 0;
      virtual HRESULT __stdcall Import (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT InsertionPoint,
        /*[in]*/ double ScaleFactor,
        /*[out,retval]*/ IDispatch * * pObj ) = 0;
      virtual HRESULT __stdcall Export (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Extension,
        /*[in]*/ struct IAcadSelectionSet * SelectionSet ) = 0;
      virtual HRESULT __stdcall New (
        /*[in]*/ BSTR TemplateFileName,
        /*[out,retval]*/ struct IAcadDocument * * pDocObj ) = 0;
      virtual HRESULT __stdcall Save ( ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR FullFileName,
        /*[in]*/ VARIANT SaveAsType = vtMissing,
        /*[in]*/ VARIANT vSecurityParams = vtMissing ) = 0;
      virtual HRESULT __stdcall Wblock (
        /*[in]*/ BSTR FileName,
        /*[in]*/ struct IAcadSelectionSet * SelectionSet ) = 0;
      virtual HRESULT __stdcall PurgeAll ( ) = 0;
      virtual HRESULT __stdcall GetVariable (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall SetVariable (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall LoadShapeFile (
        /*[in]*/ BSTR FullName ) = 0;
      virtual HRESULT __stdcall Regen (
        /*[in]*/ enum AcRegenType WhichViewports ) = 0;
      virtual HRESULT __stdcall get_PickfirstSelectionSet (
        /*[out,retval]*/ struct IAcadSelectionSet * * pSelSet ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * pvbActive ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Close (
        /*[in]*/ VARIANT SaveChanges = vtMissing,
        /*[in]*/ VARIANT FileName = vtMissing ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum AcWindowState pWinState ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum AcWindowState * pWinState ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ int pWidth ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ int * pWidth ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ int pHeight ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ int * pHeight ) = 0;
      virtual HRESULT __stdcall put_ActiveLayout (
        /*[in]*/ struct IAcadLayout * pLayout ) = 0;
      virtual HRESULT __stdcall get_ActiveLayout (
        /*[out,retval]*/ struct IAcadLayout * * pLayout ) = 0;
      virtual HRESULT __stdcall SendCommand (
        /*[in]*/ BSTR Command ) = 0;
      virtual HRESULT __stdcall get_HWND (
        /*[out,retval]*/ LONG_PTR * HWND ) = 0;
      virtual HRESULT __stdcall get_WindowTitle (
        /*[out,retval]*/ BSTR * Title ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Database (
        /*[out,retval]*/ struct IAcadDatabase * * pDatabase ) = 0;
      virtual HRESULT __stdcall StartUndoMark ( ) = 0;
      virtual HRESULT __stdcall EndUndoMark ( ) = 0;
      virtual HRESULT __stdcall get_ActiveMaterial (
        /*[out,retval]*/ struct IAcadMaterial * * pActMaterial ) = 0;
      virtual HRESULT __stdcall put_ActiveMaterial (
        /*[in]*/ struct IAcadMaterial * pActMaterial ) = 0;
      virtual HRESULT __stdcall PostCommand (
        /*[in]*/ BSTR Command ) = 0;
};

struct __declspec(uuid("2761aa3f-0da6-4203-836e-fd0a0fc168c6"))
IAcadPlot : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_QuietErrorMode (
        /*[out,retval]*/ VARIANT_BOOL * bErrorMode ) = 0;
      virtual HRESULT __stdcall put_QuietErrorMode (
        /*[in]*/ VARIANT_BOOL bErrorMode ) = 0;
      virtual HRESULT __stdcall get_NumberOfCopies (
        /*[out,retval]*/ long * numCopies ) = 0;
      virtual HRESULT __stdcall put_NumberOfCopies (
        /*[in]*/ long numCopies ) = 0;
      virtual HRESULT __stdcall get_BatchPlotProgress (
        /*[out,retval]*/ VARIANT_BOOL * bProgressStatus ) = 0;
      virtual HRESULT __stdcall put_BatchPlotProgress (
        /*[in]*/ VARIANT_BOOL bProgressStatus ) = 0;
      virtual HRESULT __stdcall DisplayPlotPreview (
        /*[in]*/ enum AcPreviewMode Preview ) = 0;
      virtual HRESULT __stdcall PlotToFile (
        /*[in]*/ BSTR plotFile,
        /*[in]*/ VARIANT plotConfig,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall PlotToDevice (
        /*[in]*/ VARIANT plotConfig,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall SetLayoutsToPlot (
        /*[in]*/ VARIANT layoutList ) = 0;
      virtual HRESULT __stdcall StartBatchMode (
        /*[in]*/ long entryCount ) = 0;
};

struct __declspec(uuid("2007dd78-b05a-422e-af97-cd08d8dcd8e0"))
IAcadApplication : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pAppName ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * bstrCaption ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_ActiveDocument (
        /*[out,retval]*/ struct IAcadDocument * * pActiveDoc ) = 0;
      virtual HRESULT __stdcall put_ActiveDocument (
        /*[in]*/ struct IAcadDocument * pActiveDoc ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * FullName ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ int * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ int Height ) = 0;
      virtual HRESULT __stdcall get_WindowLeft (
        /*[out,retval]*/ int * left ) = 0;
      virtual HRESULT __stdcall put_WindowLeft (
        /*[in]*/ int left ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * bstrPath ) = 0;
      virtual HRESULT __stdcall get_LocaleId (
        /*[out,retval]*/ long * lcid ) = 0;
      virtual HRESULT __stdcall get_WindowTop (
        /*[out,retval]*/ int * top ) = 0;
      virtual HRESULT __stdcall put_WindowTop (
        /*[in]*/ int top ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * bstrVer ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ int * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ int Width ) = 0;
      virtual HRESULT __stdcall get_Preferences (
        /*[out,retval]*/ struct IAcadPreferences * * pPreferences ) = 0;
      virtual HRESULT __stdcall get_StatusId (
        /*[in]*/ IDispatch * VportObj,
        /*[out,retval]*/ VARIANT_BOOL * bStatus ) = 0;
      virtual HRESULT __stdcall ListArx (
        /*[out,retval]*/ VARIANT * pVarListArray ) = 0;
      virtual HRESULT __stdcall LoadArx (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall GetInterfaceObject (
        /*[in]*/ BSTR ProgID,
        /*[out,retval]*/ IDispatch * * pObj ) = 0;
      virtual HRESULT __stdcall UnloadArx (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall Zoom (
        /*[in]*/ int Type,
        /*[in]*/ VARIANT * vParams ) = 0;
      virtual HRESULT __stdcall get_VBE (
        /*[out,retval]*/ IDispatch * * pDispVBE ) = 0;
      virtual HRESULT __stdcall get_MenuGroups (
        /*[out,retval]*/ struct IAcadMenuGroups * * pMenuGroups ) = 0;
      virtual HRESULT __stdcall get_MenuBar (
        /*[out,retval]*/ struct IAcadMenuBar * * pMenuBar ) = 0;
      virtual HRESULT __stdcall LoadDVB (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall UnloadDVB (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Documents (
        /*[out,retval]*/ struct IAcadDocuments * * pDocuments ) = 0;
      virtual HRESULT __stdcall Eval (
        /*[in]*/ BSTR Expression ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum AcWindowState * eWinState ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum AcWindowState eWinState ) = 0;
      virtual HRESULT __stdcall RunMacro (
        /*[in]*/ BSTR MacroPath ) = 0;
      virtual HRESULT __stdcall ZoomExtents ( ) = 0;
      virtual HRESULT __stdcall ZoomAll ( ) = 0;
      virtual HRESULT __stdcall ZoomCenter (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double Magnify ) = 0;
      virtual HRESULT __stdcall ZoomScaled (
        /*[in]*/ double scale,
        /*[in]*/ enum AcZoomScaleType ScaleType ) = 0;
      virtual HRESULT __stdcall ZoomWindow (
        /*[in]*/ VARIANT LowerLeft,
        /*[in]*/ VARIANT UpperRight ) = 0;
      virtual HRESULT __stdcall ZoomPickWindow ( ) = 0;
      virtual HRESULT __stdcall GetAcadState (
        /*[out,retval]*/ struct IAcadState * * pVal ) = 0;
      virtual HRESULT __stdcall ZoomPrevious ( ) = 0;
      virtual HRESULT __stdcall get_HWND (
        /*[out,retval]*/ LONG_PTR * HWND ) = 0;
};

struct __declspec(uuid("cfd2d9a8-bdda-455a-93ad-8d47ed6cd9cb"))
IAcadPreferencesFiles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_SupportPath (
        /*[in]*/ BSTR orient ) = 0;
      virtual HRESULT __stdcall get_SupportPath (
        /*[out,retval]*/ BSTR * orient ) = 0;
      virtual HRESULT __stdcall put_DriversPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_DriversPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_MenuFile (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_MenuFile (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_EnterpriseMenuFile (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_EnterpriseMenuFile (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_CustomIconPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_CustomIconPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_HelpFilePath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_HelpFilePath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_DefaultInternetURL (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_DefaultInternetURL (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall get_ConfigFile (
        /*[out,retval]*/ BSTR * ConfigFile ) = 0;
      virtual HRESULT __stdcall get_LicenseServer (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_TextEditor (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_TextEditor (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_MainDictionary (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_MainDictionary (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_CustomDictionary (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_CustomDictionary (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_AltFontFile (
        /*[in]*/ BSTR fontFile ) = 0;
      virtual HRESULT __stdcall get_AltFontFile (
        /*[out,retval]*/ BSTR * fontFile ) = 0;
      virtual HRESULT __stdcall put_FontFileMap (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_FontFileMap (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_PrintFile (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_PrintFile (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_PrintSpoolExecutable (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_PrintSpoolExecutable (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_PostScriptPrologFile (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_PostScriptPrologFile (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_PrintSpoolerPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_PrintSpoolerPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_AutoSavePath (
        /*[in]*/ BSTR AutoSavePath ) = 0;
      virtual HRESULT __stdcall get_AutoSavePath (
        /*[out,retval]*/ BSTR * AutoSavePath ) = 0;
      virtual HRESULT __stdcall put_TemplateDwgPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_TemplateDwgPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_LogFilePath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_LogFilePath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_TempFilePath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_TempFilePath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_TempXrefPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_TempXrefPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_TextureMapPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_TextureMapPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_AltTabletMenuFile (
        /*[in]*/ BSTR MenuFile ) = 0;
      virtual HRESULT __stdcall get_AltTabletMenuFile (
        /*[out,retval]*/ BSTR * MenuFile ) = 0;
      virtual HRESULT __stdcall SetProjectFilePath (
        /*[in]*/ BSTR ProjectName,
        /*[in]*/ BSTR ProjectFilePath ) = 0;
      virtual HRESULT __stdcall GetProjectFilePath (
        /*[in]*/ BSTR ProjectName,
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_PrinterConfigPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_PrinterConfigPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_PrinterDescPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_PrinterDescPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_PrinterStyleSheetPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_PrinterStyleSheetPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_WorkspacePath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_WorkspacePath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_ObjectARXPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_ObjectARXPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_ColorBookPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_ColorBookPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_ToolPalettePath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_ToolPalettePath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_QNewTemplateFile (
        /*[in]*/ BSTR templateFile ) = 0;
      virtual HRESULT __stdcall get_QNewTemplateFile (
        /*[out,retval]*/ BSTR * templateFile ) = 0;
      virtual HRESULT __stdcall put_PlotLogFilePath (
        /*[in]*/ BSTR templateFile ) = 0;
      virtual HRESULT __stdcall get_PlotLogFilePath (
        /*[out,retval]*/ BSTR * templateFile ) = 0;
      virtual HRESULT __stdcall put_PageSetupOverridesTemplateFile (
        /*[in]*/ BSTR templateFile ) = 0;
      virtual HRESULT __stdcall get_PageSetupOverridesTemplateFile (
        /*[out,retval]*/ BSTR * templateFile ) = 0;
      virtual HRESULT __stdcall put_ActiveInvProject (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_ActiveInvProject (
        /*[out,retval]*/ BSTR * Path ) = 0;
};

struct __declspec(uuid("bf71abf6-0878-493d-b7ec-f221797c41db"))
IAcadPreferencesDisplay : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_LayoutDisplayMargins (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_LayoutDisplayMargins (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_LayoutDisplayPaper (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_LayoutDisplayPaper (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_LayoutDisplayPaperShadow (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_LayoutDisplayPaperShadow (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_LayoutShowPlotSetup (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_LayoutShowPlotSetup (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_LayoutCreateViewport (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_LayoutCreateViewport (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_DisplayScrollBars (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_DisplayScrollBars (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_DisplayScreenMenu (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_DisplayScreenMenu (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_CursorSize (
        /*[in]*/ int Path ) = 0;
      virtual HRESULT __stdcall get_CursorSize (
        /*[out,retval]*/ int * Path ) = 0;
      virtual HRESULT __stdcall put_DockedVisibleLines (
        /*[in]*/ int Path ) = 0;
      virtual HRESULT __stdcall get_DockedVisibleLines (
        /*[out,retval]*/ int * Path ) = 0;
      virtual HRESULT __stdcall put_ShowRasterImage (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_ShowRasterImage (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_GraphicsWinModelBackgrndColor (
        /*[in]*/ OLE_COLOR color ) = 0;
      virtual HRESULT __stdcall get_GraphicsWinModelBackgrndColor (
        /*[out,retval]*/ OLE_COLOR * color ) = 0;
      virtual HRESULT __stdcall put_ModelCrosshairColor (
        /*[in]*/ OLE_COLOR crossHairColor ) = 0;
      virtual HRESULT __stdcall get_ModelCrosshairColor (
        /*[out,retval]*/ OLE_COLOR * crossHairColor ) = 0;
      virtual HRESULT __stdcall put_GraphicsWinLayoutBackgrndColor (
        /*[in]*/ OLE_COLOR color ) = 0;
      virtual HRESULT __stdcall get_GraphicsWinLayoutBackgrndColor (
        /*[out,retval]*/ OLE_COLOR * color ) = 0;
      virtual HRESULT __stdcall put_TextWinBackgrndColor (
        /*[in]*/ OLE_COLOR Path ) = 0;
      virtual HRESULT __stdcall get_TextWinBackgrndColor (
        /*[out,retval]*/ OLE_COLOR * Path ) = 0;
      virtual HRESULT __stdcall put_TextWinTextColor (
        /*[in]*/ OLE_COLOR Path ) = 0;
      virtual HRESULT __stdcall get_TextWinTextColor (
        /*[out,retval]*/ OLE_COLOR * Path ) = 0;
      virtual HRESULT __stdcall put_LayoutCrosshairColor (
        /*[in]*/ OLE_COLOR crossHairColor ) = 0;
      virtual HRESULT __stdcall get_LayoutCrosshairColor (
        /*[out,retval]*/ OLE_COLOR * crossHairColor ) = 0;
      virtual HRESULT __stdcall put_AutoTrackingVecColor (
        /*[in]*/ OLE_COLOR AutoTrackingVecColor ) = 0;
      virtual HRESULT __stdcall get_AutoTrackingVecColor (
        /*[out,retval]*/ OLE_COLOR * AutoTrackingVecColor ) = 0;
      virtual HRESULT __stdcall put_TextFont (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_TextFont (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_TextFontStyle (
        /*[in]*/ enum AcTextFontStyle Path ) = 0;
      virtual HRESULT __stdcall get_TextFontStyle (
        /*[out,retval]*/ enum AcTextFontStyle * Path ) = 0;
      virtual HRESULT __stdcall put_TextFontSize (
        /*[in]*/ int Path ) = 0;
      virtual HRESULT __stdcall get_TextFontSize (
        /*[out,retval]*/ int * Path ) = 0;
      virtual HRESULT __stdcall put_HistoryLines (
        /*[in]*/ int Path ) = 0;
      virtual HRESULT __stdcall get_HistoryLines (
        /*[out,retval]*/ int * Path ) = 0;
      virtual HRESULT __stdcall put_MaxAutoCADWindow (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_MaxAutoCADWindow (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_DisplayLayoutTabs (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_DisplayLayoutTabs (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_ImageFrameHighlight (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_ImageFrameHighlight (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_TrueColorImages (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_TrueColorImages (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_XRefFadeIntensity (
        /*[in]*/ long Path ) = 0;
      virtual HRESULT __stdcall get_XRefFadeIntensity (
        /*[out,retval]*/ long * Path ) = 0;
};

struct __declspec(uuid("dbb44995-7728-499e-8273-2ab30ac17794"))
IAcadPreferencesOpenSave : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_SavePreviewThumbnail (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_SavePreviewThumbnail (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_IncrementalSavePercent (
        /*[in]*/ int Path ) = 0;
      virtual HRESULT __stdcall get_IncrementalSavePercent (
        /*[out,retval]*/ int * Path ) = 0;
      virtual HRESULT __stdcall put_AutoSaveInterval (
        /*[in]*/ int Path ) = 0;
      virtual HRESULT __stdcall get_AutoSaveInterval (
        /*[out,retval]*/ int * Path ) = 0;
      virtual HRESULT __stdcall put_CreateBackup (
        /*[in]*/ VARIANT_BOOL CreateBackup ) = 0;
      virtual HRESULT __stdcall get_CreateBackup (
        /*[out,retval]*/ VARIANT_BOOL * CreateBackup ) = 0;
      virtual HRESULT __stdcall put_FullCRCValidation (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_FullCRCValidation (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_LogFileOn (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_LogFileOn (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_TempFileExtension (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_TempFileExtension (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_XrefDemandLoad (
        /*[in]*/ enum AcXRefDemandLoad Path ) = 0;
      virtual HRESULT __stdcall get_XrefDemandLoad (
        /*[out,retval]*/ enum AcXRefDemandLoad * Path ) = 0;
      virtual HRESULT __stdcall put_DemandLoadARXApp (
        /*[in]*/ enum AcARXDemandLoad Path ) = 0;
      virtual HRESULT __stdcall get_DemandLoadARXApp (
        /*[out,retval]*/ enum AcARXDemandLoad * Path ) = 0;
      virtual HRESULT __stdcall put_ProxyImage (
        /*[in]*/ enum AcProxyImage Path ) = 0;
      virtual HRESULT __stdcall get_ProxyImage (
        /*[out,retval]*/ enum AcProxyImage * Path ) = 0;
      virtual HRESULT __stdcall put_ShowProxyDialogBox (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_ShowProxyDialogBox (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_AutoAudit (
        /*[in]*/ VARIANT_BOOL bAudit ) = 0;
      virtual HRESULT __stdcall get_AutoAudit (
        /*[out,retval]*/ VARIANT_BOOL * bAudit ) = 0;
      virtual HRESULT __stdcall put_SaveAsType (
        /*[in]*/ enum AcSaveAsType Path ) = 0;
      virtual HRESULT __stdcall get_SaveAsType (
        /*[out,retval]*/ enum AcSaveAsType * Path ) = 0;
      virtual HRESULT __stdcall get_MRUNumber (
        /*[out,retval]*/ long * Path ) = 0;
};

struct __declspec(uuid("bc4af42a-d51e-4936-962d-1adbddfd6090"))
IAcadPreferencesOutput : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_DefaultOutputDevice (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_DefaultOutputDevice (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_PrinterSpoolAlert (
        /*[in]*/ enum AcPrinterSpoolAlert Path ) = 0;
      virtual HRESULT __stdcall get_PrinterSpoolAlert (
        /*[out,retval]*/ enum AcPrinterSpoolAlert * Path ) = 0;
      virtual HRESULT __stdcall put_PrinterPaperSizeAlert (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_PrinterPaperSizeAlert (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_PlotLegacy (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_PlotLegacy (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_OLEQuality (
        /*[in]*/ enum AcOleQuality Path ) = 0;
      virtual HRESULT __stdcall get_OLEQuality (
        /*[out,retval]*/ enum AcOleQuality * Path ) = 0;
      virtual HRESULT __stdcall put_UseLastPlotSettings (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_UseLastPlotSettings (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_PlotPolicy (
        /*[in]*/ enum AcPlotPolicy Path ) = 0;
      virtual HRESULT __stdcall get_PlotPolicy (
        /*[out,retval]*/ enum AcPlotPolicy * Path ) = 0;
      virtual HRESULT __stdcall put_DefaultPlotStyleTable (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_DefaultPlotStyleTable (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_DefaultPlotStyleForObjects (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_DefaultPlotStyleForObjects (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_DefaultPlotStyleForLayer (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_DefaultPlotStyleForLayer (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_ContinuousPlotLog (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_ContinuousPlotLog (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_AutomaticPlotLog (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_AutomaticPlotLog (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_DefaultPlotToFilePath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_DefaultPlotToFilePath (
        /*[out,retval]*/ BSTR * Path ) = 0;
};

struct __declspec(uuid("daf7bc7c-a60a-4ca7-bbd9-a6ded455682e"))
IAcadPreferencesSystem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_SingleDocumentMode (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_SingleDocumentMode (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_DisplayOLEScale (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_DisplayOLEScale (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_StoreSQLIndex (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_StoreSQLIndex (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_TablesReadOnly (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_TablesReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_EnableStartupDialog (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_EnableStartupDialog (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_BeepOnError (
        /*[in]*/ VARIANT_BOOL BeepOnError ) = 0;
      virtual HRESULT __stdcall get_BeepOnError (
        /*[out,retval]*/ VARIANT_BOOL * BeepOnError ) = 0;
      virtual HRESULT __stdcall put_ShowWarningMessages (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_ShowWarningMessages (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_LoadAcadLspInAllDocuments (
        /*[in]*/ VARIANT_BOOL pALID ) = 0;
      virtual HRESULT __stdcall get_LoadAcadLspInAllDocuments (
        /*[out,retval]*/ VARIANT_BOOL * pALID ) = 0;
};

struct __declspec(uuid("65651c0f-4381-452b-a8d7-a01f1a8efc9d"))
IAcadPreferencesUser : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_KeyboardAccelerator (
        /*[in]*/ enum AcKeyboardAccelerator Path ) = 0;
      virtual HRESULT __stdcall get_KeyboardAccelerator (
        /*[out,retval]*/ enum AcKeyboardAccelerator * Path ) = 0;
      virtual HRESULT __stdcall put_KeyboardPriority (
        /*[in]*/ enum AcKeyboardPriority Path ) = 0;
      virtual HRESULT __stdcall get_KeyboardPriority (
        /*[out,retval]*/ enum AcKeyboardPriority * Path ) = 0;
      virtual HRESULT __stdcall put_HyperlinkDisplayCursor (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_HyperlinkDisplayCursor (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_ADCInsertUnitsDefaultSource (
        /*[in]*/ enum AcInsertUnits pIU ) = 0;
      virtual HRESULT __stdcall get_ADCInsertUnitsDefaultSource (
        /*[out,retval]*/ enum AcInsertUnits * pIU ) = 0;
      virtual HRESULT __stdcall put_ADCInsertUnitsDefaultTarget (
        /*[in]*/ enum AcInsertUnits pSUunits ) = 0;
      virtual HRESULT __stdcall get_ADCInsertUnitsDefaultTarget (
        /*[out,retval]*/ enum AcInsertUnits * pSUunits ) = 0;
      virtual HRESULT __stdcall put_ShortCutMenuDisplay (
        /*[in]*/ VARIANT_BOOL pSCM ) = 0;
      virtual HRESULT __stdcall get_ShortCutMenuDisplay (
        /*[out,retval]*/ VARIANT_BOOL * pSCM ) = 0;
      virtual HRESULT __stdcall put_SCMDefaultMode (
        /*[in]*/ enum AcDrawingAreaSCMDefault pSCM ) = 0;
      virtual HRESULT __stdcall get_SCMDefaultMode (
        /*[out,retval]*/ enum AcDrawingAreaSCMDefault * pSCM ) = 0;
      virtual HRESULT __stdcall put_SCMEditMode (
        /*[in]*/ enum AcDrawingAreaSCMEdit pSCM ) = 0;
      virtual HRESULT __stdcall get_SCMEditMode (
        /*[out,retval]*/ enum AcDrawingAreaSCMEdit * pSCM ) = 0;
      virtual HRESULT __stdcall put_SCMCommandMode (
        /*[in]*/ enum AcDrawingAreaSCMCommand pSCM ) = 0;
      virtual HRESULT __stdcall get_SCMCommandMode (
        /*[out,retval]*/ enum AcDrawingAreaSCMCommand * pSCM ) = 0;
      virtual HRESULT __stdcall put_SCMTimeMode (
        /*[in]*/ VARIANT_BOOL time ) = 0;
      virtual HRESULT __stdcall get_SCMTimeMode (
        /*[out,retval]*/ VARIANT_BOOL * time ) = 0;
      virtual HRESULT __stdcall put_SCMTimeValue (
        /*[in]*/ int time ) = 0;
      virtual HRESULT __stdcall get_SCMTimeValue (
        /*[out,retval]*/ int * time ) = 0;
};

struct __declspec(uuid("1f8ebfdf-587c-473d-ae11-330cda3c669f"))
IAcadPreferencesDrafting : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_AutoSnapMarker (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_AutoSnapMarker (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_AutoSnapMagnet (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_AutoSnapMagnet (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_AutoSnapTooltip (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_AutoSnapTooltip (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_AutoSnapAperture (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_AutoSnapAperture (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_AutoSnapApertureSize (
        /*[in]*/ long Path ) = 0;
      virtual HRESULT __stdcall get_AutoSnapApertureSize (
        /*[out,retval]*/ long * Path ) = 0;
      virtual HRESULT __stdcall put_AutoSnapMarkerColor (
        /*[in]*/ enum AcColor Path ) = 0;
      virtual HRESULT __stdcall get_AutoSnapMarkerColor (
        /*[out,retval]*/ enum AcColor * Path ) = 0;
      virtual HRESULT __stdcall put_AutoSnapMarkerSize (
        /*[in]*/ long Path ) = 0;
      virtual HRESULT __stdcall get_AutoSnapMarkerSize (
        /*[out,retval]*/ long * Path ) = 0;
      virtual HRESULT __stdcall put_PolarTrackingVector (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_PolarTrackingVector (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_FullScreenTrackingVector (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_FullScreenTrackingVector (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_AutoTrackTooltip (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_AutoTrackTooltip (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_AlignmentPointAcquisition (
        /*[in]*/ enum AcAlignmentPointAcquisition Path ) = 0;
      virtual HRESULT __stdcall get_AlignmentPointAcquisition (
        /*[out,retval]*/ enum AcAlignmentPointAcquisition * Path ) = 0;
};

struct __declspec(uuid("16dc76bd-ed63-45e5-a967-19df2f7d3020"))
IAcadPreferencesSelection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_PickFirst (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_PickFirst (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_PickAdd (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_PickAdd (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_PickDrag (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_PickDrag (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_PickAuto (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_PickAuto (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_PickBoxSize (
        /*[in]*/ long Path ) = 0;
      virtual HRESULT __stdcall get_PickBoxSize (
        /*[out,retval]*/ long * Path ) = 0;
      virtual HRESULT __stdcall put_DisplayGrips (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_DisplayGrips (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_DisplayGripsWithinBlocks (
        /*[in]*/ VARIANT_BOOL Path ) = 0;
      virtual HRESULT __stdcall get_DisplayGripsWithinBlocks (
        /*[out,retval]*/ VARIANT_BOOL * Path ) = 0;
      virtual HRESULT __stdcall put_GripColorSelected (
        /*[in]*/ enum AcColor Path ) = 0;
      virtual HRESULT __stdcall get_GripColorSelected (
        /*[out,retval]*/ enum AcColor * Path ) = 0;
      virtual HRESULT __stdcall put_GripColorUnselected (
        /*[in]*/ enum AcColor Path ) = 0;
      virtual HRESULT __stdcall get_GripColorUnselected (
        /*[out,retval]*/ enum AcColor * Path ) = 0;
      virtual HRESULT __stdcall put_GripSize (
        /*[in]*/ long Path ) = 0;
      virtual HRESULT __stdcall get_GripSize (
        /*[out,retval]*/ long * Path ) = 0;
      virtual HRESULT __stdcall put_PickGroup (
        /*[in]*/ VARIANT_BOOL pick ) = 0;
      virtual HRESULT __stdcall get_PickGroup (
        /*[out,retval]*/ VARIANT_BOOL * pick ) = 0;
};

struct __declspec(uuid("873b8ce1-8b8a-4d5a-8c07-63fd9cd6ba6c"))
IAcadPreferencesProfiles : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall put_ActiveProfile (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_ActiveProfile (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall ImportProfile (
        /*[in]*/ BSTR ProfileName,
        /*[in]*/ BSTR RegFile,
        /*[in]*/ VARIANT_BOOL IncludePathInfo ) = 0;
      virtual HRESULT __stdcall ExportProfile (
        /*[in]*/ BSTR ProfileName,
        /*[in]*/ BSTR RegFile ) = 0;
      virtual HRESULT __stdcall DeleteProfile (
        /*[in]*/ BSTR ProfileName ) = 0;
      virtual HRESULT __stdcall ResetProfile (
        /*[in]*/ BSTR Profile ) = 0;
      virtual HRESULT __stdcall RenameProfile (
        /*[in]*/ BSTR origProfileName,
        /*[in]*/ BSTR newProfileName ) = 0;
      virtual HRESULT __stdcall CopyProfile (
        /*[in]*/ BSTR oldProfileName,
        /*[in]*/ BSTR newProfileName ) = 0;
      virtual HRESULT __stdcall GetAllProfileNames (
        /*[out]*/ VARIANT * pNames ) = 0;
};

struct __declspec(uuid("c8fba802-6ff6-46bb-a29b-96f46e09ea4f"))
IAcadPreferences : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Files (
        /*[out,retval]*/ struct IAcadPreferencesFiles * * pObj ) = 0;
      virtual HRESULT __stdcall get_Display (
        /*[out,retval]*/ struct IAcadPreferencesDisplay * * pObj ) = 0;
      virtual HRESULT __stdcall get_OpenSave (
        /*[out,retval]*/ struct IAcadPreferencesOpenSave * * pObj ) = 0;
      virtual HRESULT __stdcall get_Output (
        /*[out,retval]*/ struct IAcadPreferencesOutput * * pObj ) = 0;
      virtual HRESULT __stdcall get_System (
        /*[out,retval]*/ struct IAcadPreferencesSystem * * pObj ) = 0;
      virtual HRESULT __stdcall get_User (
        /*[out,retval]*/ struct IAcadPreferencesUser * * pObj ) = 0;
      virtual HRESULT __stdcall get_Drafting (
        /*[out,retval]*/ struct IAcadPreferencesDrafting * * pObj ) = 0;
      virtual HRESULT __stdcall get_Selection (
        /*[out,retval]*/ struct IAcadPreferencesSelection * * pObj ) = 0;
      virtual HRESULT __stdcall get_Profiles (
        /*[out,retval]*/ struct IAcadPreferencesProfiles * * pObj ) = 0;
};

struct __declspec(uuid("cf9b7f19-1488-4bfe-a94a-5c2afc337694"))
IAcadDocuments : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadDocument * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnumVariant ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT TemplateName,
        /*[out,retval]*/ struct IAcadDocument * * pDispDoc ) = 0;
      virtual HRESULT __stdcall Open (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT ReadOnly,
        /*[in]*/ VARIANT Password,
        /*[out,retval]*/ struct IAcadDocument * * pDispDoc ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
};

struct __declspec(uuid("533c7ec0-df22-4932-af1a-dc3bee5738ff"))
IAcadState : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_IsQuiescent (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("1d771106-2777-4623-a067-a3df340f5b04"))
IAcadSelectionSet : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadEntity * * pEntity ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall Highlight (
        /*[in]*/ VARIANT_BOOL bFlag ) = 0;
      virtual HRESULT __stdcall Erase ( ) = 0;
      virtual HRESULT __stdcall Update ( ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall AddItems (
        /*[in]*/ VARIANT pSelSet ) = 0;
      virtual HRESULT __stdcall RemoveItems (
        /*[in]*/ VARIANT Objects ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ enum AcSelect Mode,
        /*[in]*/ VARIANT Point1 = vtMissing,
        /*[in]*/ VARIANT Point2 = vtMissing,
        /*[in]*/ VARIANT FilterType = vtMissing,
        /*[in]*/ VARIANT FilterData = vtMissing ) = 0;
      virtual HRESULT __stdcall SelectAtPoint (
        /*[in]*/ VARIANT Point,
        /*[in]*/ VARIANT FilterType = vtMissing,
        /*[in]*/ VARIANT FilterData = vtMissing ) = 0;
      virtual HRESULT __stdcall SelectByPolygon (
        /*[in]*/ enum AcSelect Mode,
        /*[in]*/ VARIANT PointsList,
        /*[in]*/ VARIANT FilterType = vtMissing,
        /*[in]*/ VARIANT FilterData = vtMissing ) = 0;
      virtual HRESULT __stdcall SelectOnScreen (
        /*[in]*/ VARIANT FilterType = vtMissing,
        /*[in]*/ VARIANT FilterData = vtMissing ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
};

struct __declspec(uuid("05a76357-f243-4dcb-9252-13cc350b860a"))
IAcadSelectionSets : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadSelectionSet * * pItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAcadSelectionSet * * pSet ) = 0;
};

struct __declspec(uuid("938efd49-a1f8-47bc-b190-512513cde0e9"))
IAcadMenuGroups : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadMenuGroup * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnumVariant ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IAcadApplication * * pParent ) = 0;
      virtual HRESULT __stdcall Load (
        /*[in]*/ BSTR MenuFileName,
        /*[in]*/ VARIANT BaseMenu,
        /*[out,retval]*/ struct IAcadMenuGroup * * pMenuGroup ) = 0;
};

struct __declspec(uuid("04809366-ad70-4f50-b1bf-c4c0f6a7b9fb"))
IAcadMenuGroup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IAcadMenuGroups * * pParent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AcMenuGroupType * menuType ) = 0;
      virtual HRESULT __stdcall get_MenuFileName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Menus (
        /*[out,retval]*/ struct IAcadPopupMenus * * pMenus ) = 0;
      virtual HRESULT __stdcall get_Toolbars (
        /*[out,retval]*/ struct IAcadToolbars * * pToolbars ) = 0;
      virtual HRESULT __stdcall Unload ( ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ enum AcMenuFileType MenuFileType ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR MenuFileName,
        /*[in]*/ enum AcMenuFileType MenuFileType ) = 0;
};

struct __declspec(uuid("d550a209-e331-4ec9-9ff8-2f61b2e34894"))
IAcadPopupMenus : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadPopupMenu * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnumVariant ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IAcadMenuGroup * * pParent ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR MenuName,
        /*[out,retval]*/ struct IAcadPopupMenu * * pMenu ) = 0;
      virtual HRESULT __stdcall InsertMenuInMenuBar (
        /*[in]*/ BSTR MenuName,
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall RemoveMenuFromMenuBar (
        /*[in]*/ VARIANT Index ) = 0;
};

struct __declspec(uuid("43dc6ffa-aeb4-48a4-b5af-9fd8a00062f1"))
IAcadPopupMenu : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadPopupMenuItem * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnumVariant ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_NameNoMnemonic (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall get_ShortcutMenu (
        /*[out,retval]*/ VARIANT_BOOL * bFlag ) = 0;
      virtual HRESULT __stdcall get_OnMenuBar (
        /*[out,retval]*/ VARIANT_BOOL * bFlag ) = 0;
      virtual HRESULT __stdcall AddMenuItem (
        /*[in]*/ VARIANT Index,
        /*[in]*/ BSTR Label,
        /*[in]*/ BSTR Macro,
        /*[out,retval]*/ struct IAcadPopupMenuItem * * pItem ) = 0;
      virtual HRESULT __stdcall AddSubMenu (
        /*[in]*/ VARIANT Index,
        /*[in]*/ BSTR Label,
        /*[out,retval]*/ struct IAcadPopupMenu * * pMenu ) = 0;
      virtual HRESULT __stdcall AddSeparator (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadPopupMenuItem * * pItem ) = 0;
      virtual HRESULT __stdcall InsertInMenuBar (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall RemoveFromMenuBar ( ) = 0;
      virtual HRESULT __stdcall get_TagString (
        /*[out,retval]*/ BSTR * bstrTag ) = 0;
};

struct __declspec(uuid("1b1eaf6b-11f1-41bc-9f67-b678a9b4ee02"))
IAcadPopupMenuItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IAcadPopupMenu * * pParent ) = 0;
      virtual HRESULT __stdcall get_Label (
        /*[out,retval]*/ BSTR * bstrLabel ) = 0;
      virtual HRESULT __stdcall put_Label (
        /*[in]*/ BSTR bstrLabel ) = 0;
      virtual HRESULT __stdcall get_TagString (
        /*[out,retval]*/ BSTR * bstrTag ) = 0;
      virtual HRESULT __stdcall put_TagString (
        /*[in]*/ BSTR bstrTag ) = 0;
      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ VARIANT_BOOL * bFlag ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ VARIANT_BOOL bFlag ) = 0;
      virtual HRESULT __stdcall get_Check (
        /*[out,retval]*/ VARIANT_BOOL * bFlag ) = 0;
      virtual HRESULT __stdcall put_Check (
        /*[in]*/ VARIANT_BOOL bFlag ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AcMenuItemType * itemType ) = 0;
      virtual HRESULT __stdcall get_SubMenu (
        /*[out,retval]*/ struct IAcadPopupMenu * * pMenu ) = 0;
      virtual HRESULT __stdcall get_Macro (
        /*[out,retval]*/ BSTR * bstrMacro ) = 0;
      virtual HRESULT __stdcall put_Macro (
        /*[in]*/ BSTR bstrMacro ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ int * nIndex ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * bstrCaption ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[out,retval]*/ BSTR * bstrHelp ) = 0;
      virtual HRESULT __stdcall put_HelpString (
        /*[in]*/ BSTR bstrHelp ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_EndSubMenuLevel (
        /*[out,retval]*/ int * level ) = 0;
      virtual HRESULT __stdcall put_EndSubMenuLevel (
        /*[in]*/ int level ) = 0;
};

struct __declspec(uuid("a3b67312-1dd6-40b7-b00f-9015491261ec"))
IAcadMenuBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadPopupMenu * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnumVariant ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IAcadApplication * * pParent ) = 0;
};

struct __declspec(uuid("9fe35c7f-8487-45ab-bf73-f69bbf400224"))
IAcadToolbars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadToolbar * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnumVariant ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IAcadMenuGroup * * pParent ) = 0;
      virtual HRESULT __stdcall get_LargeButtons (
        /*[out,retval]*/ VARIANT_BOOL * bFlag ) = 0;
      virtual HRESULT __stdcall put_LargeButtons (
        /*[in]*/ VARIANT_BOOL bFlag ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR ToolbarName,
        /*[out,retval]*/ struct IAcadToolbar * * pTlbar ) = 0;
};

struct __declspec(uuid("cc174f04-f9ea-44a1-9ea1-3a403d86727e"))
IAcadToolbar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadToolbarItem * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnumVariant ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bFlag ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bFlag ) = 0;
      virtual HRESULT __stdcall get_DockStatus (
        /*[out,retval]*/ enum AcToolbarDockStatus * nStatus ) = 0;
      virtual HRESULT __stdcall get_LargeButtons (
        /*[out,retval]*/ VARIANT_BOOL * bFlag ) = 0;
      virtual HRESULT __stdcall get_left (
        /*[out,retval]*/ int * nLeft ) = 0;
      virtual HRESULT __stdcall put_left (
        /*[in]*/ int nLeft ) = 0;
      virtual HRESULT __stdcall get_top (
        /*[out,retval]*/ int * nTop ) = 0;
      virtual HRESULT __stdcall put_top (
        /*[in]*/ int nTop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ int * nWidth ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ int * nHeight ) = 0;
      virtual HRESULT __stdcall get_FloatingRows (
        /*[out,retval]*/ int * nRows ) = 0;
      virtual HRESULT __stdcall put_FloatingRows (
        /*[in]*/ int nRows ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[out,retval]*/ BSTR * bstrHelp ) = 0;
      virtual HRESULT __stdcall put_HelpString (
        /*[in]*/ BSTR bstrHelp ) = 0;
      virtual HRESULT __stdcall AddToolbarButton (
        /*[in]*/ VARIANT Index,
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR HelpString,
        /*[in]*/ BSTR Macro,
        /*[in]*/ VARIANT FlyoutButton,
        /*[out,retval]*/ struct IAcadToolbarItem * * pItem ) = 0;
      virtual HRESULT __stdcall AddSeparator (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct IAcadToolbarItem * * pItem ) = 0;
      virtual HRESULT __stdcall Dock (
        /*[in]*/ enum AcToolbarDockStatus Side ) = 0;
      virtual HRESULT __stdcall Float (
        /*[in]*/ int top,
        /*[in]*/ int left,
        /*[in]*/ int NumberFloatRows ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_TagString (
        /*[out,retval]*/ BSTR * bstrTag ) = 0;
};

struct __declspec(uuid("8c8f63d0-35a7-4d29-9c4d-9886f164fd5d"))
IAcadToolbarItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IAcadApplication * * pAppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IAcadToolbar * * pParent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * bstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR bstrName ) = 0;
      virtual HRESULT __stdcall get_TagString (
        /*[out,retval]*/ BSTR * bstrTag ) = 0;
      virtual HRESULT __stdcall put_TagString (
        /*[in]*/ BSTR bstrTag ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AcToolbarItemType * itemType ) = 0;
      virtual HRESULT __stdcall get_Flyout (
        /*[out,retval]*/ struct IAcadToolbar * * pTlbar ) = 0;
      virtual HRESULT __stdcall get_Macro (
        /*[out,retval]*/ BSTR * bstrMacro ) = 0;
      virtual HRESULT __stdcall put_Macro (
        /*[in]*/ BSTR bstrMacro ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ int * nIndex ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[out,retval]*/ BSTR * bstrHelp ) = 0;
      virtual HRESULT __stdcall put_HelpString (
        /*[in]*/ BSTR bstrHelp ) = 0;
      virtual HRESULT __stdcall GetBitmaps (
        /*[out]*/ BSTR * SmallIconName,
        /*[out]*/ BSTR * LargeIconName ) = 0;
      virtual HRESULT __stdcall SetBitmaps (
        /*[in]*/ BSTR SmallIconName,
        /*[in]*/ BSTR LargeIconName ) = 0;
      virtual HRESULT __stdcall AttachToolbarToFlyout (
        /*[in]*/ BSTR MenuGroupName,
        /*[in]*/ BSTR ToolbarName ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall get_CommandDisplayName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_CommandDisplayName (
        /*[in]*/ BSTR Name ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_AutoCAD =
    {0x644614d2,0x93dc,0x48c6,{0xa0,0x61,0x21,0xab,0xce,0x65,0xa4,0xc0}};
extern "C" const GUID __declspec(selectany) IID_IAcadAcCmColor =
    {0x82174a4a,0x973d,0x4fc5,{0xb3,0xe7,0x5d,0x00,0x99,0x36,0xae,0x57}};
extern "C" const GUID __declspec(selectany) IID_IAcadHyperlink =
    {0xb4db8063,0xdf62,0x413b,{0xa3,0x00,0x88,0x47,0xf8,0xa1,0xfb,0x86}};
extern "C" const GUID __declspec(selectany) IID_IAcadHyperlinks =
    {0xd803123c,0x9777,0x47a8,{0xa7,0xb4,0x60,0xc0,0x97,0x62,0xae,0x0d}};
extern "C" const GUID __declspec(selectany) IID_IAcadSectionTypeSettings =
    {0x4e77067c,0x83ba,0x4446,{0x86,0xde,0x11,0x36,0xe0,0x75,0x42,0xa7}};
extern "C" const GUID __declspec(selectany) IID_IAcadDatabasePreferences =
    {0x5b478006,0xbeed,0x4daa,{0xac,0x97,0x3b,0xf8,0x47,0xc1,0x3c,0x72}};
extern "C" const GUID __declspec(selectany) IID_IAcadSummaryInfo =
    {0x37d2d493,0xcbfb,0x474b,{0xb9,0xb9,0x4b,0xac,0x8c,0xf7,0x96,0x78}};
extern "C" const GUID __declspec(selectany) IID_IAcadSectionTypeSettings2 =
    {0x72e04115,0x1905,0x4dfa,{0xb6,0x5c,0x1e,0x94,0x1c,0x46,0xa1,0x14}};
extern "C" const GUID __declspec(selectany) CLSID_AcadHyperlink =
    {0xba1617e9,0xbec7,0x4b20,{0xb2,0x27,0x8f,0x49,0x0b,0x76,0x12,0x42}};
extern "C" const GUID __declspec(selectany) IID_IAcadDynamicBlockReferenceProperty =
    {0x723b19d6,0x1957,0x41ed,{0xb6,0xa3,0x5a,0x4d,0x2d,0xe4,0x05,0xbb}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDynamicBlockReferenceProperty =
    {0x7eb86ce8,0xdfae,0x4cd3,{0xa0,0x54,0xd2,0xeb,0xf2,0xd9,0x82,0x1c}};
extern "C" const GUID __declspec(selectany) CLSID_AcadAcCmColor =
    {0x125bb201,0xd62c,0x4e2d,{0x92,0x43,0x33,0x9f,0x8c,0xd8,0x69,0x15}};
extern "C" const GUID __declspec(selectany) CLSID_AcadObject =
    {0x5125a948,0x7cd1,0x46be,{0xb8,0xcc,0x9f,0xaf,0x2d,0x28,0x6e,0x65}};
extern "C" const GUID __declspec(selectany) CLSID_AcadXRecord =
    {0xf18bce66,0xea85,0x4e1b,{0x98,0xae,0xb5,0xd5,0x78,0x51,0x18,0x5f}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSortentsTable =
    {0x9a79b8bf,0xa4d2,0x47c3,{0xb1,0xee,0x88,0xe0,0x2e,0xea,0x55,0x3a}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimStyle =
    {0x8910e3ec,0xd81a,0x465c,{0x9c,0x7b,0xab,0x03,0x6c,0x51,0xd7,0x1e}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLayer =
    {0x375af0d2,0x075a,0x42e2,{0xa0,0xfb,0x3d,0xb6,0xc8,0xe8,0xc1,0x1c}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLineType =
    {0x3b284fb8,0xd186,0x4180,{0x89,0x4e,0xf0,0x47,0x69,0x32,0xc3,0x26}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMaterial =
    {0xebca2ef7,0x59d6,0x4e5d,{0xb6,0xfe,0x0f,0x8a,0xc6,0x04,0x35,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_AcadRegisteredApplication =
    {0x02b67ebf,0xa132,0x4933,{0xac,0x54,0xab,0xdb,0x2b,0x29,0xb0,0xef}};
extern "C" const GUID __declspec(selectany) CLSID_AcadTextStyle =
    {0x51d16155,0x25db,0x47f6,{0x8f,0x4c,0x88,0x8b,0x00,0x37,0xa1,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_AcadUCS =
    {0x5b85ebf4,0x7548,0x40d3,{0x84,0xf5,0x8a,0x63,0x83,0x0f,0x16,0x89}};
extern "C" const GUID __declspec(selectany) CLSID_AcadView =
    {0x5ed51c8a,0xbdaa,0x4528,{0xae,0xb1,0x15,0x80,0xa5,0xfe,0xea,0xef}};
extern "C" const GUID __declspec(selectany) CLSID_AcadViewport =
    {0xdddb9583,0xd227,0x461b,{0x95,0xc4,0x61,0x11,0x52,0x81,0xcb,0x16}};
extern "C" const GUID __declspec(selectany) CLSID_AcadGroup =
    {0xd344e9a2,0xc7ad,0x4c14,{0x92,0xce,0x84,0xe4,0x75,0x0c,0x02,0xe1}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPlotConfiguration =
    {0x7853f100,0x4610,0x4a0d,{0xae,0xcd,0x6c,0x3d,0x57,0x41,0x21,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLayout =
    {0x2e3519e8,0x3a7e,0x46bb,{0xb4,0x20,0x63,0xe6,0x21,0x06,0x80,0x18}};
extern "C" const GUID __declspec(selectany) IID_IAcadIdPair =
    {0x96a0858a,0xafbd,0x4922,{0x8f,0xf4,0x06,0xbd,0xd2,0x02,0xe2,0x29}};
extern "C" const GUID __declspec(selectany) CLSID_AcadIdPair =
    {0x0ff3c6da,0x7aa8,0x4875,{0xa6,0xb4,0xc8,0xcc,0xcf,0x3b,0xa8,0x2f}};
extern "C" const GUID __declspec(selectany) CLSID_AcadTableStyle =
    {0xd3f1b5a8,0xef2a,0x4a98,{0xba,0x38,0x0c,0x45,0x6d,0x46,0xdf,0x0e}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSectionSettings =
    {0xee62e6b0,0x39a0,0x426b,{0xa7,0x11,0xfa,0x3e,0xf1,0x9a,0x62,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSectionTypeSettings =
    {0xe90a9883,0xf596,0x4d6e,{0xa0,0x06,0xf4,0xea,0xd1,0xbd,0x5d,0x33}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMLeaderStyle =
    {0xb1705001,0x3175,0x414d,{0xa4,0xdb,0x54,0x45,0x10,0x08,0xb9,0xdc}};
extern "C" const GUID __declspec(selectany) CLSID_AcadHyperlinks =
    {0x457bcf6d,0xbfd4,0x400e,{0x93,0x2e,0x89,0x0c,0x6d,0x3d,0xd0,0x1b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDictionary =
    {0x833d327e,0xf7d8,0x44ea,{0x8b,0xe7,0x88,0x1c,0x15,0x2d,0x7b,0xa8}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLayers =
    {0xa7b347f4,0xda20,0x4ce9,{0x99,0x9c,0xb9,0x1a,0x9a,0xab,0x8b,0xb2}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimStyles =
    {0x9cb88c70,0x6f5d,0x4b07,{0x97,0xcf,0x6f,0x21,0x62,0x00,0x4e,0x3c}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDictionaries =
    {0x01a30270,0x908f,0x4771,{0xbc,0x60,0xc2,0xc7,0xb9,0x1e,0x05,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLineTypes =
    {0x15ef95bb,0x28b9,0x4a7a,{0xb5,0x48,0x7f,0x82,0x4b,0x95,0x00,0xeb}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMaterials =
    {0xcdc8fe2e,0x2ee7,0x474d,{0xa4,0x40,0xe9,0x0a,0x9d,0x2e,0xdf,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_AcadTextStyles =
    {0x48f3753a,0xac72,0x4e68,{0x91,0xda,0x54,0x9d,0xc3,0x94,0x9a,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_AcadUCSs =
    {0xf0491dd1,0x27c5,0x4a66,{0xa9,0xf7,0x1e,0xf8,0x34,0x0c,0xe3,0x11}};
extern "C" const GUID __declspec(selectany) CLSID_AcadRegisteredApplications =
    {0xc5c157d2,0x67ff,0x4133,{0xab,0x97,0x25,0x65,0x81,0xdf,0x0f,0xef}};
extern "C" const GUID __declspec(selectany) CLSID_AcadViews =
    {0xa4eff110,0xce17,0x4d60,{0xb6,0xf6,0x4e,0x33,0x9a,0x66,0xa5,0x26}};
extern "C" const GUID __declspec(selectany) CLSID_AcadViewports =
    {0x10cd632f,0x39b4,0x4a1a,{0x99,0x4d,0x69,0x1a,0xb5,0x27,0x44,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_AcadGroups =
    {0x49dcb9b7,0x357d,0x4c54,{0x8e,0x50,0xa5,0xea,0xc0,0xcb,0x2c,0x9a}};
extern "C" const GUID __declspec(selectany) CLSID_AcadBlocks =
    {0x08b1f0c3,0x7649,0x4ea6,{0xa0,0x26,0x64,0x1d,0x1a,0xa4,0x8d,0xb7}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLayouts =
    {0x379e15d6,0x92ba,0x4434,{0xb6,0x43,0x74,0xb5,0xbf,0x94,0x43,0x6b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPlotConfigurations =
    {0x8dd0d1db,0x0301,0x49a2,{0xa5,0x94,0x1f,0x91,0xfd,0x87,0xde,0xae}};
extern "C" const GUID __declspec(selectany) CLSID_AcadEntity =
    {0xa9932fd5,0x5009,0x4436,{0x93,0x47,0x09,0x28,0xe5,0xa6,0xca,0x4b}};
extern "C" const GUID __declspec(selectany) IID_IAcadShadowDisplay =
    {0xc476dbac,0x1c07,0x4cf1,{0xa8,0x4b,0x38,0xad,0x1e,0xd8,0xfe,0x2e}};
extern "C" const GUID __declspec(selectany) CLSID_AcadRasterImage =
    {0x1dd039bf,0x4222,0x4cae,{0xa2,0x6e,0x0e,0x90,0x4b,0xa1,0x02,0x8d}};
extern "C" const GUID __declspec(selectany) CLSID_Acad3DFace =
    {0xf9102229,0x7424,0x4cf6,{0x89,0x68,0x47,0x4e,0x67,0xf7,0xec,0xb7}};
extern "C" const GUID __declspec(selectany) CLSID_Acad3DPolyline =
    {0x301b32f7,0xc4bb,0x4fa4,{0x87,0x15,0xd7,0x66,0xca,0xae,0x7d,0xd9}};
extern "C" const GUID __declspec(selectany) CLSID_AcadRegion =
    {0xe1405564,0xaccd,0x4198,{0x8b,0xf5,0x3f,0x46,0x69,0xdb,0x88,0x84}};
extern "C" const GUID __declspec(selectany) CLSID_Acad3DSolid =
    {0xecf42d7a,0x110e,0x4805,{0x8f,0x12,0x7d,0x39,0xd3,0xb8,0x01,0x03}};
extern "C" const GUID __declspec(selectany) CLSID_AcadArc =
    {0x3fc23b9f,0x54c2,0x418e,{0x9e,0xe5,0x62,0xc6,0x98,0x5a,0xb3,0xb4}};
extern "C" const GUID __declspec(selectany) CLSID_AcadAttribute =
    {0xc7daa988,0x04ea,0x4f19,{0x9e,0x71,0xd0,0x73,0x3a,0xe1,0x2b,0xe5}};
extern "C" const GUID __declspec(selectany) CLSID_AcadAttributeReference =
    {0xc35e52d8,0x2d92,0x4241,{0xb9,0x92,0x5d,0xe9,0xfd,0xd1,0x72,0x5d}};
extern "C" const GUID __declspec(selectany) CLSID_AcadBlockReference =
    {0xd16d583d,0x89d1,0x4cab,{0x84,0x3d,0x40,0x4a,0x14,0x33,0xe7,0x43}};
extern "C" const GUID __declspec(selectany) CLSID_AcadCircle =
    {0x0d5b7d85,0x38b7,0x449f,{0x9c,0xb6,0x48,0xbc,0x4e,0x85,0x20,0xb0}};
extern "C" const GUID __declspec(selectany) CLSID_AcadEllipse =
    {0xd0e738c2,0x7182,0x4040,{0xb9,0x35,0xa6,0xaf,0xbe,0x8d,0xfd,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_AcadHatch =
    {0xc373ea27,0xd0de,0x4b87,{0xb2,0x39,0x8a,0x83,0x5e,0x8c,0x82,0x85}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLeader =
    {0xf6fa0699,0x1fa0,0x494b,{0x97,0x86,0xd0,0x9d,0xe5,0xa5,0x16,0x1e}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubEntity =
    {0xd4623034,0x9d02,0x475d,{0xb8,0x49,0xfc,0x2e,0x9d,0x94,0xa1,0xa1}};
extern "C" const GUID __declspec(selectany) IID_IAcadMLeaderLeader =
    {0xfd5750fe,0xc24d,0x4556,{0xbe,0x06,0xd3,0x7f,0x5a,0x1f,0x82,0x1a}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMLeaderLeader =
    {0x9ead6c8f,0xb595,0x4a4f,{0xb3,0x15,0x46,0x54,0x0d,0x37,0xd0,0x70}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMLeader =
    {0x0e20cfaf,0xc21a,0x4ac3,{0xbd,0xd0,0x46,0x3b,0x30,0x72,0x15,0xb6}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLWPolyline =
    {0x1004d324,0xe19d,0x4ed5,{0x99,0xac,0x25,0x60,0x96,0xea,0x63,0x44}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLine =
    {0x23bd224b,0x6952,0x4c1f,{0xa1,0x14,0x65,0x10,0x73,0x4d,0x6a,0x90}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMText =
    {0xa02afbce,0x8fb5,0x442c,{0xa3,0x38,0x47,0xd0,0x15,0x42,0x53,0x31}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPoint =
    {0x99b15887,0x2265,0x48bf,{0xa2,0x78,0xdd,0x81,0xd9,0x3e,0x00,0xd1}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPolyline =
    {0xca657076,0xec7e,0x46bc,{0xa2,0x9d,0xa9,0x15,0x65,0x4c,0xe6,0xf7}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPolygonMesh =
    {0x24798d46,0xe5e6,0x4cef,{0x9b,0x5c,0x6f,0x1c,0x91,0xb8,0x64,0x16}};
extern "C" const GUID __declspec(selectany) CLSID_AcadRay =
    {0x21e9cc83,0x64dd,0x4340,{0xbd,0x9b,0x93,0x37,0x58,0x1a,0x19,0x0c}};
extern "C" const GUID __declspec(selectany) CLSID_AcadShape =
    {0xb8e67790,0x850a,0x473f,{0x9b,0x1a,0x6e,0x1a,0xbe,0x68,0x6d,0x31}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSolid =
    {0xfa2ec09b,0xac70,0x4514,{0xaa,0xae,0x68,0xd6,0x3f,0x99,0x4f,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSpline =
    {0x502ebf0d,0xd4a9,0x41d0,{0xac,0xdc,0x8e,0x17,0x23,0xf2,0x4a,0x56}};
extern "C" const GUID __declspec(selectany) CLSID_AcadText =
    {0x723bcc26,0x00d2,0x4536,{0x8a,0xc2,0xc3,0x74,0xfa,0xbb,0x05,0x14}};
extern "C" const GUID __declspec(selectany) CLSID_AcadTolerance =
    {0x11b2a176,0xf9d6,0x421b,{0x83,0x74,0xdc,0xed,0xdf,0x9e,0x1d,0xf3}};
extern "C" const GUID __declspec(selectany) CLSID_AcadTrace =
    {0xdc2e4629,0xb7d9,0x4169,{0xac,0xf7,0xbf,0x24,0x9e,0x6e,0x4a,0x82}};
extern "C" const GUID __declspec(selectany) CLSID_AcadXline =
    {0x52822f4a,0xdb41,0x4bad,{0x8e,0x24,0x7e,0xb7,0x49,0xaa,0xa1,0xc0}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPViewport =
    {0xcd903474,0xf5d9,0x4717,{0xa5,0x3a,0x97,0x0b,0x98,0x81,0x1c,0x6c}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMInsertBlock =
    {0x7e3c5fb6,0x6651,0x4c00,{0x9a,0x27,0x92,0x59,0x14,0xa8,0x6f,0x99}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPolyfaceMesh =
    {0x12a0e456,0xb9c9,0x4516,{0xb3,0x89,0x5f,0xe1,0x26,0x9d,0xcf,0xc8}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMLine =
    {0xe1401960,0xffa0,0x425a,{0xb7,0xf9,0xbb,0x10,0x64,0x53,0x25,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_AcadExternalReference =
    {0x323bc6eb,0x3f64,0x4c02,{0x8f,0x8a,0xc6,0x97,0x0b,0xe3,0x14,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadTable =
    {0xf9e28a62,0x2115,0x4784,{0x91,0x0e,0x99,0x9a,0x42,0x83,0xf4,0x9a}};
extern "C" const GUID __declspec(selectany) CLSID_AcadOle =
    {0x3bfa2118,0x0236,0x4801,{0xb7,0xb2,0xe3,0xda,0xd6,0x77,0x78,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_AcadHelix =
    {0xe9a86537,0xdd8a,0x46a2,{0xb6,0x5e,0x02,0xe6,0xf3,0x64,0xef,0x59}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSurface =
    {0x38c88e2f,0xd908,0x47a8,{0xab,0xc4,0x37,0x8a,0x4f,0x4b,0x67,0x6a}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPlaneSurface =
    {0x6cf03bcd,0xc149,0x453b,{0xb9,0xf0,0x93,0xfc,0xec,0x67,0xe3,0xbe}};
extern "C" const GUID __declspec(selectany) CLSID_AcadExtrudedSurface =
    {0x3fe41eb8,0x1cbd,0x4ace,{0xa4,0x1e,0xeb,0x3b,0xf4,0xe2,0x6b,0x11}};
extern "C" const GUID __declspec(selectany) CLSID_AcadRevolvedSurface =
    {0xf9d140eb,0xfb37,0x4922,{0x8a,0x8d,0x8c,0x52,0x2b,0x94,0x35,0x86}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSweptSurface =
    {0x062a3e5b,0xd821,0x4ae0,{0xb4,0xb7,0x87,0x3e,0xbc,0x51,0xe6,0xe3}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLoftedSurface =
    {0xf69a1c36,0xd019,0x49ea,{0x99,0x22,0xc2,0x9a,0x79,0xe2,0x73,0x4b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSection =
    {0xfca3b245,0x8eab,0x48ba,{0xbd,0x2a,0x60,0x75,0xce,0x1d,0x65,0xb8}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSectionManager =
    {0xa02c2829,0x2703,0x44a5,{0x92,0x98,0xc1,0xf4,0xcd,0x7d,0xb7,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDwfUnderlay =
    {0x728a5356,0x0d14,0x4db8,{0x96,0x7b,0x17,0xdb,0x00,0x0f,0x5f,0xd0}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDgnUnderlay =
    {0x97da9cd9,0x7890,0x4c56,{0xaa,0xe8,0xbe,0x8c,0xb7,0x71,0xff,0x72}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPdfUnderlay =
    {0x6b32612a,0x1a18,0x4bbf,{0xb5,0xab,0x3d,0xda,0xf8,0xa0,0xd5,0xbc}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubEntity =
    {0x6396720f,0xad15,0x4142,{0xa3,0xd2,0xfb,0xde,0xb8,0x8d,0xde,0x0f}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubEntSolidFace =
    {0x09d386fe,0xc2ca,0x499c,{0xb5,0xc8,0x04,0x66,0x9d,0x31,0xb0,0x4b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubEntSolidFace =
    {0xa6ead076,0x9a07,0x4d60,{0xb0,0x4b,0xb3,0xf1,0x58,0x3d,0x5e,0x08}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubEntSolidEdge =
    {0x8fa9f8d0,0xd221,0x406c,{0xb9,0x0d,0x14,0x8d,0xf7,0xe0,0x54,0x54}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubEntSolidEdge =
    {0x1d600df1,0xc0d4,0x44f1,{0x91,0x4b,0xcd,0xfa,0xc0,0x6a,0xc8,0x2b}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubEntSolidVertex =
    {0xa616de10,0x4b03,0x4ba8,{0xa2,0x13,0x6a,0x48,0x5e,0xda,0x0f,0x68}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubEntSolidVertex =
    {0xb64cfc7c,0x4ae0,0x4ecd,{0xb5,0x30,0x15,0xf5,0xff,0x68,0x1e,0x99}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubEntSolidNode =
    {0x9c40da30,0x7619,0x4c91,{0xa6,0x5f,0xc7,0x14,0xce,0x7c,0x91,0x79}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubEntSolidNode =
    {0x496c8f4b,0xdeb2,0x40e5,{0x82,0x25,0x4e,0xed,0x2e,0x23,0x6c,0xc2}};
extern "C" const GUID __declspec(selectany) CLSID_AcadWipeout =
    {0x18c48794,0x22fa,0x4c45,{0xb5,0x7c,0xb1,0x6b,0xe1,0xcd,0xa8,0x50}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubDMesh =
    {0x36fb54b5,0xef94,0x4583,{0xb2,0xf4,0x0e,0x61,0x2a,0x13,0x35,0xd9}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubDMeshFace =
    {0xcd70ef32,0x6207,0x4e70,{0xbb,0x30,0xb0,0x98,0x8c,0x7f,0xb0,0x89}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubDMeshFace =
    {0x34872d3b,0xe551,0x4fd7,{0xb3,0x9f,0x89,0x7b,0x2d,0x50,0x50,0x21}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubDMeshEdge =
    {0xb8e2ef9f,0x2d35,0x433e,{0xa2,0x78,0x1d,0xc5,0x69,0x5c,0x4b,0x5d}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubDMeshEdge =
    {0x1bb02970,0x8912,0x418a,{0x8f,0x32,0x74,0xfa,0x95,0x81,0xdf,0x07}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubDMeshVertex =
    {0xa3fddd7e,0x946b,0x48e9,{0x98,0xc3,0xc2,0x3a,0xa1,0x5e,0x83,0xfc}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSubDMeshVertex =
    {0xf1da93a7,0xc0fc,0x4350,{0x9e,0xf0,0x06,0xb3,0x0c,0xc4,0xa8,0xe0}};
extern "C" const GUID __declspec(selectany) CLSID_AcadNurbSurface =
    {0x2057af3f,0x932e,0x4f07,{0x8c,0xcc,0x6e,0x96,0x38,0x27,0xe8,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_AcadGeoPositionMarker =
    {0x7093f7cb,0x516b,0x4d7a,{0x99,0xd7,0x77,0xd7,0xa5,0x78,0x2c,0x4e}};
extern "C" const GUID __declspec(selectany) CLSID_AcadGeomapImage =
    {0xd4e9fe63,0x1c48,0x4d39,{0xb1,0x31,0xf5,0x63,0x61,0xf5,0x8a,0x7e}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimension =
    {0xce9595d7,0x1ee6,0x4bb6,{0xa3,0x4f,0xff,0x9a,0x28,0x21,0x8c,0x3f}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimAligned =
    {0x96e9c35c,0x0f22,0x4cfb,{0x97,0x67,0xde,0xb9,0x47,0x17,0x84,0xb8}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimAngular =
    {0x4a539245,0x2d16,0x405f,{0x9e,0x60,0xab,0xe7,0x03,0x45,0xe2,0xbd}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimDiametric =
    {0x79e01344,0x0dcd,0x4024,{0xb8,0xca,0x9e,0xd3,0x10,0xb6,0xaa,0xfc}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimOrdinate =
    {0x7aaa3e2e,0x6170,0x4917,{0xa4,0x67,0xfb,0xc9,0x91,0xec,0x75,0xf7}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimRadial =
    {0xa7481c1c,0x93f5,0x4104,{0xb3,0x84,0xb2,0x5d,0x94,0x71,0x5f,0xdc}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimRotated =
    {0x9870e5f9,0xd0b0,0x49ab,{0x92,0xd9,0xbd,0x75,0x23,0xc1,0x6b,0x62}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDim3PointAngular =
    {0x723c51dd,0x9592,0x44c6,{0xa1,0x09,0x09,0xe8,0x1c,0xee,0xa8,0x3c}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimArcLength =
    {0xd75efd10,0x3a2b,0x4302,{0x94,0xb2,0x7e,0x32,0x5d,0xbb,0x0e,0x26}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDimRadialLarge =
    {0x6ea5fb73,0xa8d0,0x460e,{0x8d,0x5b,0x5f,0x49,0x4e,0x6e,0x32,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_AcadBlock =
    {0xd3c339b4,0x90b3,0x430e,{0x8f,0xfe,0x26,0x0f,0xe1,0xf8,0x3b,0x6f}};
extern "C" const GUID __declspec(selectany) CLSID_AcadModelSpace =
    {0xa8182e51,0xf166,0x4dd3,{0xbc,0x15,0xdf,0xe0,0xaf,0x6c,0xf5,0x5b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPaperSpace =
    {0x557aecba,0xfd45,0x400e,{0xbd,0x83,0xb8,0xbe,0x23,0x30,0x3a,0xb0}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPointCloud =
    {0x4c1cb0cc,0xe804,0x44f7,{0x8e,0xb5,0x61,0xd2,0x71,0xbd,0xec,0xf7}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPointCloudEx =
    {0x36dd8cc6,0x0474,0x4eb5,{0x9a,0x04,0x4b,0x0d,0xf4,0x9a,0xc5,0x16}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSummaryInfo =
    {0x5ddc42fb,0xdddb,0x4bee,{0x88,0x39,0x9b,0x41,0x89,0x87,0x78,0x29}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDatabasePreferences =
    {0xe7315013,0x98ca,0x401b,{0xaa,0x9b,0x59,0xe4,0xc7,0x00,0x0e,0xae}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDatabase =
    {0x4aff1852,0xa87e,0x44d7,{0x8a,0xd6,0x9e,0x26,0x55,0x3f,0x92,0x1d}};
extern "C" const GUID __declspec(selectany) IID_IAcadSecurityParams =
    {0xa5c61cc3,0xdaf1,0x47f8,{0xa7,0x74,0x42,0xff,0xdd,0x9b,0x79,0x8b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSecurityParams =
    {0x0603026a,0xdd66,0x4758,{0x9f,0x2d,0x6b,0xe2,0xc8,0xb4,0xb2,0x9a}};
extern "C" const GUID __declspec(selectany) CLSID_AcadLayerStateManager =
    {0x619bee9f,0x50d5,0x4bae,{0x9a,0x2b,0x44,0x0c,0x97,0xf9,0x5f,0x6e}};
extern "C" const GUID __declspec(selectany) DIID__DAcadApplicationEvents =
    {0xd523cb7c,0x30b6,0x4a7a,{0x8c,0x2d,0x79,0xb2,0x3b,0x48,0x78,0xa9}};
extern "C" const GUID __declspec(selectany) IID_IAcadUtility =
    {0x2ce54bf2,0x0376,0x4aa5,{0xba,0x88,0x1b,0xff,0x47,0xb1,0xc7,0x0d}};
extern "C" const GUID __declspec(selectany) CLSID_AcadState =
    {0x0e96437e,0x2ff3,0x4269,{0xb6,0x46,0x9e,0xce,0xc2,0x80,0x11,0x04}};
extern "C" const GUID __declspec(selectany) CLSID_AcadApplication =
    {0x9aaf0eb6,0x42d8,0x46c1,{0xa2,0xef,0x67,0x95,0x11,0xb3,0x7a,0x0d}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSelectionSet =
    {0xf74a776c,0xfd6f,0x4557,{0xad,0x00,0xe7,0x8e,0x7a,0xc6,0x42,0xab}};
extern "C" const GUID __declspec(selectany) CLSID_AcadSelectionSets =
    {0x1d6e89ca,0x8632,0x44f2,{0x8a,0x96,0xf8,0x01,0x4e,0x58,0x66,0x9b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPlot =
    {0xdd5c71f1,0x3da4,0x4572,{0x9a,0x62,0x07,0x32,0xcd,0x98,0x68,0xb9}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferences =
    {0xd927173f,0x16e1,0x4bfa,{0x90,0xf1,0xf7,0xe3,0xc3,0x47,0xcc,0x87}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesDrafting =
    {0x9ac42ff5,0xbdd1,0x4f8c,{0x8f,0x47,0x9d,0x71,0x84,0x71,0x43,0xd0}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesDisplay =
    {0xd3adb94c,0xc51c,0x41ed,{0x90,0xb1,0x8e,0xd7,0x5b,0x99,0x06,0xa2}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesFiles =
    {0xbc0436ef,0xff41,0x40fe,{0x86,0xd6,0x8b,0x06,0x5b,0x8d,0x79,0x59}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesOpenSave =
    {0x5640bd23,0x2caf,0x4637,{0x83,0x94,0xb0,0xb8,0x29,0x15,0xbe,0x01}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesOutput =
    {0x6a15d096,0x4f73,0x4cea,{0xb0,0x8d,0x20,0x0a,0x85,0x1d,0x40,0x92}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesProfiles =
    {0x936c9608,0x9843,0x42f0,{0xb7,0x91,0xf5,0x5a,0xb3,0x16,0x48,0xb7}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesSelection =
    {0x6b391a7e,0x3bea,0x4f33,{0x97,0x7b,0xc0,0x91,0xb6,0xd9,0x14,0x39}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesSystem =
    {0x623c3614,0x7401,0x4a89,{0xab,0x74,0x89,0x22,0xdb,0xaa,0x25,0x9d}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPreferencesUser =
    {0x8e54a093,0x2176,0x401b,{0x9e,0xbb,0xaf,0x87,0x4d,0xd0,0x13,0xb5}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMenuGroups =
    {0x4db714a5,0x5f58,0x4872,{0xbb,0x4a,0x69,0xee,0x0d,0x28,0x5d,0x66}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMenuGroup =
    {0x8075e929,0x1ff1,0x4d5d,{0xbd,0x6b,0x6f,0xe3,0xb8,0x49,0xf9,0x06}};
extern "C" const GUID __declspec(selectany) CLSID_AcadMenuBar =
    {0x30872ee1,0x93c6,0x4a80,{0x9c,0xa1,0x80,0x64,0xba,0xe2,0x40,0xdb}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPopupMenus =
    {0x2dcc7dd1,0xdde3,0x4199,{0x91,0xba,0x69,0xc3,0x72,0x1f,0x6c,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPopupMenu =
    {0xf6e25e03,0xb9ae,0x4a88,{0x84,0x1b,0xed,0xfd,0x9c,0x75,0xaa,0x5b}};
extern "C" const GUID __declspec(selectany) CLSID_AcadPopupMenuItem =
    {0xb52bd1ce,0xb63c,0x4b80,{0x94,0xc9,0xd2,0xb2,0xb7,0x79,0xc5,0xce}};
extern "C" const GUID __declspec(selectany) CLSID_AcadUtility =
    {0x2211978f,0x48ae,0x4293,{0xaa,0xea,0x88,0xce,0x6a,0xd0,0x0d,0x28}};
extern "C" const GUID __declspec(selectany) DIID__DAcadDocumentEvents =
    {0xe701e4a8,0x5e93,0x49a3,{0x8a,0x5b,0x69,0x27,0xdd,0x32,0x2b,0xd6}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDocument =
    {0xb6eb585b,0xb467,0x4e46,{0xa9,0xc7,0x48,0xd7,0xd6,0xfd,0x26,0xcb}};
extern "C" const GUID __declspec(selectany) CLSID_AcadDocuments =
    {0x2cc4c41c,0xe9d1,0x4650,{0x81,0x66,0xb7,0xad,0x86,0xb8,0xfa,0xbc}};
extern "C" const GUID __declspec(selectany) CLSID_AcadToolbars =
    {0x196dbede,0xb2d9,0x466c,{0x86,0xbf,0xab,0x95,0x5f,0x3d,0xef,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_AcadToolbar =
    {0x0235fb3a,0x89f6,0x403b,{0x91,0xf3,0x74,0x3a,0x16,0x80,0x82,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_AcadToolbarItem =
    {0xb5ab7be5,0x3aee,0x486d,{0x8e,0x7d,0xcf,0x9a,0xbf,0xc0,0xc0,0x8d}};
extern "C" const GUID __declspec(selectany) IID_IAcadObject =
    {0xaeb8d2e2,0xb3e1,0x499b,{0xa3,0x57,0x7b,0x3f,0x51,0xce,0xc1,0x47}};
extern "C" const GUID __declspec(selectany) IID_IAcadEntity =
    {0xacf0aa82,0xffec,0x402b,{0x9b,0x87,0x15,0x68,0xf6,0xc2,0x4f,0x82}};
extern "C" const GUID __declspec(selectany) IID_IAcad3DFace =
    {0x1759387a,0x60a3,0x41e5,{0xa8,0xc5,0x90,0xa0,0x82,0xb3,0x2b,0xb2}};
extern "C" const GUID __declspec(selectany) IID_IAcadPolygonMesh =
    {0x039b9382,0xf2e7,0x4ab6,{0x94,0x61,0xcf,0x2e,0x76,0x3e,0x7a,0x57}};
extern "C" const GUID __declspec(selectany) IID_IAcad3DPolyline =
    {0x4fee5511,0x1bd7,0x4ec7,{0x90,0x27,0xa9,0x11,0x3a,0x01,0x63,0x45}};
extern "C" const GUID __declspec(selectany) IID_IAcadArc =
    {0x64dc9029,0xfd27,0x48de,{0x85,0xb8,0xa4,0x71,0xf6,0x54,0xc2,0x0b}};
extern "C" const GUID __declspec(selectany) IID_IAcadAttribute =
    {0x99b991ad,0x2222,0x48dd,{0xbe,0x16,0x59,0xe4,0x0d,0x03,0xb5,0x61}};
extern "C" const GUID __declspec(selectany) IID_IAcadRegion =
    {0x60f904e0,0x3634,0x4cc3,{0xb4,0xcd,0xb1,0x59,0x40,0x06,0x3b,0xf1}};
extern "C" const GUID __declspec(selectany) IID_IAcad3DSolid =
    {0x9af5dc27,0xd177,0x4810,{0xb5,0x24,0xa6,0x3c,0x9f,0x59,0x93,0xc2}};
extern "C" const GUID __declspec(selectany) IID_IAcadCircle =
    {0x4a749d26,0x4d00,0x4ea1,{0xa1,0x21,0xa4,0x57,0xc3,0x0e,0x6f,0x57}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimension =
    {0x397baf06,0x05cd,0x44dd,{0xa5,0x6a,0x11,0x78,0x4c,0x4f,0xb7,0xb5}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimAligned =
    {0x52729d26,0x9908,0x469d,{0xa8,0x7c,0xb3,0x31,0x05,0x9b,0x94,0xea}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimAngular =
    {0xeb3c91ca,0x7d5a,0x42cd,{0x92,0xdc,0x6a,0x78,0xc5,0x0b,0x2e,0xdb}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimDiametric =
    {0x896feaf5,0x0ad9,0x4414,{0xaa,0xc8,0x0a,0x1a,0xe6,0x72,0xac,0x83}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimRotated =
    {0x3e6efac3,0x4495,0x43de,{0xa2,0x5f,0x02,0x59,0xff,0xab,0x40,0x15}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimOrdinate =
    {0x671d6427,0xd2e8,0x4637,{0x98,0xcc,0xe5,0xe2,0xb6,0x04,0x09,0xe5}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimRadial =
    {0x18da8524,0x1491,0x4cc7,{0xaf,0xc7,0x26,0xd1,0xde,0xcc,0xd6,0xbf}};
extern "C" const GUID __declspec(selectany) IID_IAcadEllipse =
    {0xa35236d3,0xc2f2,0x482d,{0xb2,0x72,0xcc,0xe9,0xf2,0x36,0xfa,0xd2}};
extern "C" const GUID __declspec(selectany) IID_IAcadLeader =
    {0xaa112a3d,0xc9da,0x4851,{0x81,0x99,0xa4,0x65,0x58,0x4d,0x9d,0x98}};
extern "C" const GUID __declspec(selectany) IID_IAcadMText =
    {0x95a24d69,0x4531,0x4083,{0x92,0x5e,0x69,0x86,0x5f,0xbb,0x9a,0x03}};
extern "C" const GUID __declspec(selectany) IID_IAcadPoint =
    {0x52485ac7,0x5e0d,0x4da4,{0xb6,0x42,0x07,0x96,0x83,0x1a,0xa5,0x92}};
extern "C" const GUID __declspec(selectany) IID_IAcadLWPolyline =
    {0x0f3fb243,0x2494,0x4bac,{0xbf,0xc9,0x30,0x44,0x66,0xf1,0x27,0x11}};
extern "C" const GUID __declspec(selectany) IID_IAcadPolyline =
    {0xbbc9e18d,0x538f,0x43ad,{0xa9,0x63,0xa2,0x9e,0x87,0x99,0x3c,0xbb}};
extern "C" const GUID __declspec(selectany) IID_IAcadRay =
    {0x81989cda,0x342d,0x4634,{0xb2,0x29,0x8a,0xce,0x12,0xc2,0x7c,0xc3}};
extern "C" const GUID __declspec(selectany) IID_IAcadShape =
    {0x504f080d,0x45d3,0x4bfc,{0xbd,0x95,0x68,0x1b,0x11,0x94,0xec,0x1d}};
extern "C" const GUID __declspec(selectany) IID_IAcadSolid =
    {0xa2f91ead,0xd307,0x4465,{0xb7,0x0e,0xec,0xf9,0xfb,0x71,0x03,0xe3}};
extern "C" const GUID __declspec(selectany) IID_IAcadSpline =
    {0x75a55bac,0x3e9c,0x47d0,{0x89,0xf6,0x76,0xfa,0x61,0xbc,0x53,0x66}};
extern "C" const GUID __declspec(selectany) IID_IAcadText =
    {0xca2dd247,0xd133,0x4646,{0xba,0x49,0xee,0x3d,0xd4,0x75,0xa3,0xbc}};
extern "C" const GUID __declspec(selectany) IID_IAcadTolerance =
    {0x6779b954,0x8464,0x496a,{0x84,0x58,0x53,0x40,0x5f,0x03,0x53,0x58}};
extern "C" const GUID __declspec(selectany) IID_IAcadTrace =
    {0xd295da05,0xd626,0x4b03,{0x8f,0xf3,0x83,0x6d,0xa9,0xb9,0x7d,0xe4}};
extern "C" const GUID __declspec(selectany) IID_IAcadXline =
    {0xd70f5268,0xbe6d,0x4ba6,{0xa2,0x89,0x13,0xfb,0xa9,0x6c,0x30,0x84}};
extern "C" const GUID __declspec(selectany) IID_IAcadBlockReference =
    {0x1d43bc6f,0x2a8e,0x4ab4,{0xa1,0x71,0xe0,0x5e,0xc8,0x27,0x95,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IAcadHatch =
    {0x53eb1a05,0x9449,0x466f,{0x8e,0x62,0xa3,0x40,0x06,0xba,0x9d,0x3c}};
extern "C" const GUID __declspec(selectany) IID_IAcadRasterImage =
    {0x98faf084,0xfebc,0x425b,{0xb3,0xbc,0x5d,0x5e,0xc5,0xfe,0xe5,0x4e}};
extern "C" const GUID __declspec(selectany) IID_IAcadLine =
    {0xa02d3284,0xe931,0x40ff,{0xa9,0x53,0x0f,0xa6,0x55,0xb0,0x79,0x80}};
extern "C" const GUID __declspec(selectany) IID_IAcadPlotConfiguration =
    {0x0c6a8b60,0x415e,0x4625,{0x81,0xa9,0xef,0x84,0x21,0x6f,0xd3,0xb4}};
extern "C" const GUID __declspec(selectany) IID_IAcadMInsertBlock =
    {0x1ff467d1,0x2ef7,0x4426,{0xa0,0xdb,0xf9,0x65,0x72,0xc2,0x6b,0x13}};
extern "C" const GUID __declspec(selectany) IID_IAcadPolyfaceMesh =
    {0x4647dce6,0xd132,0x4edd,{0x94,0x47,0x11,0xb5,0x23,0xaf,0x4c,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IAcadMLine =
    {0x5f26c199,0x3259,0x4a39,{0x8f,0xd9,0x60,0x28,0x5d,0xb2,0xf7,0x65}};
extern "C" const GUID __declspec(selectany) IID_IAcadDim3PointAngular =
    {0x0ae304c8,0x61ef,0x4d52,{0xbe,0x60,0x7a,0x87,0xde,0xdc,0x2c,0x4e}};
extern "C" const GUID __declspec(selectany) IID_IAcadExternalReference =
    {0xa3aa22e3,0x7b15,0x4bda,{0x83,0xfa,0x80,0x33,0x69,0x89,0x01,0x0d}};
extern "C" const GUID __declspec(selectany) IID_IAcadTable =
    {0x84fed720,0x777d,0x479e,{0x9b,0x15,0x13,0xcd,0x56,0xf9,0x61,0x73}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimArcLength =
    {0x84618c65,0x48f9,0x450e,{0xbb,0xeb,0x71,0x49,0x90,0x9c,0x0c,0xe4}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimRadialLarge =
    {0xfbd4807f,0xe100,0x4326,{0xae,0x79,0xff,0x93,0xf5,0xdf,0xc2,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IAcadSectionSettings =
    {0xa240ec7f,0x14cf,0x4da1,{0xb3,0xd4,0x74,0xb9,0x06,0x28,0x95,0xda}};
extern "C" const GUID __declspec(selectany) IID_IAcadSection =
    {0x23ab4987,0xf991,0x408c,{0xa2,0xe9,0x1c,0x77,0xb5,0x0b,0xef,0xc3}};
extern "C" const GUID __declspec(selectany) IID_IAcadMLeader =
    {0x8ee08989,0x6f86,0x4685,{0x99,0xc4,0x3f,0x48,0xa1,0x24,0x2b,0xd8}};
extern "C" const GUID __declspec(selectany) IID_IAcadView =
    {0xd886f48c,0x94ab,0x4240,{0x87,0x7b,0xa2,0x24,0x28,0xd6,0xff,0xcd}};
extern "C" const GUID __declspec(selectany) IID_IAcadPViewport =
    {0xd71870d2,0xe2fe,0x43c5,{0x90,0xfa,0x8f,0xf4,0x71,0x1f,0xc9,0x84}};
extern "C" const GUID __declspec(selectany) IID_IAcadGroup =
    {0x9f470d4d,0x44b7,0x4d3c,{0x82,0xe5,0x49,0x3d,0xa2,0xe9,0x42,0x15}};
extern "C" const GUID __declspec(selectany) IID_IAcadGroups =
    {0x15f4cd6c,0x78c7,0x4e34,{0x97,0xbb,0x88,0x86,0x6a,0xb7,0x23,0x4c}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimStyle =
    {0x5f64b0a6,0x1728,0x41c4,{0x93,0xe6,0x24,0xc2,0xda,0xa4,0x8e,0x93}};
extern "C" const GUID __declspec(selectany) IID_IAcadDimStyles =
    {0xddae1905,0xb805,0x4444,{0x8c,0x99,0x0d,0xb4,0xae,0x89,0xf5,0x17}};
extern "C" const GUID __declspec(selectany) IID_IAcadLayer =
    {0x7abc3225,0x0845,0x44cd,{0x96,0xe3,0xdc,0x73,0xe2,0x80,0xac,0xa0}};
extern "C" const GUID __declspec(selectany) IID_IAcadLayers =
    {0x713e7af3,0x1517,0x49fc,{0xb6,0xb4,0x42,0x9b,0xdc,0xd8,0x3b,0x40}};
extern "C" const GUID __declspec(selectany) IID_IAcadLineType =
    {0x545d3abe,0x3b77,0x45c3,{0xaf,0xcc,0x0a,0xff,0x39,0xd2,0x5d,0xd5}};
extern "C" const GUID __declspec(selectany) IID_IAcadLineTypes =
    {0x122c5869,0x568a,0x4df0,{0x9b,0x0d,0xfb,0x11,0x3e,0x8d,0xef,0xce}};
extern "C" const GUID __declspec(selectany) IID_IAcadXRecord =
    {0x67433105,0x639d,0x42fb,{0xab,0xc4,0x1a,0x4e,0x70,0xb6,0x38,0xb5}};
extern "C" const GUID __declspec(selectany) IID_IAcadDictionary =
    {0x42828358,0x7505,0x416b,{0x9a,0x56,0x98,0xf4,0xe9,0xbb,0x35,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IAcadDictionaries =
    {0xc2521948,0xf0c1,0x4af7,{0x85,0x07,0xba,0xea,0x76,0xbe,0x36,0x87}};
extern "C" const GUID __declspec(selectany) IID_IAcadRegisteredApplication =
    {0x553652d5,0x2c7e,0x4e81,{0xbb,0xeb,0x65,0x57,0x9e,0xc5,0x84,0x71}};
extern "C" const GUID __declspec(selectany) IID_IAcadRegisteredApplications =
    {0x97beb443,0x7259,0x4377,{0x87,0xfa,0x1a,0x3e,0x5e,0x88,0x2b,0x3c}};
extern "C" const GUID __declspec(selectany) IID_IAcadTextStyle =
    {0x3b4c686e,0xd760,0x4b2e,{0x97,0x37,0x0c,0xfd,0x0a,0x43,0x4d,0x5d}};
extern "C" const GUID __declspec(selectany) IID_IAcadTextStyles =
    {0x49ed276a,0x716c,0x4700,{0x99,0x9f,0xe4,0x4f,0x1d,0x10,0xdd,0x8c}};
extern "C" const GUID __declspec(selectany) IID_IAcadUCS =
    {0x27ca935e,0xe9c4,0x44e9,{0x88,0xfb,0xe6,0xd2,0x2e,0xed,0x3f,0x64}};
extern "C" const GUID __declspec(selectany) IID_IAcadUCSs =
    {0x1da18452,0xee21,0x4ba4,{0x83,0xf8,0x80,0xc5,0x2f,0xb7,0x81,0xfc}};
extern "C" const GUID __declspec(selectany) IID_IAcadViews =
    {0x692a60f2,0x6e56,0x41be,{0xac,0x25,0x05,0x4a,0xa8,0xb4,0xdd,0x2d}};
extern "C" const GUID __declspec(selectany) IID_IAcadViewport =
    {0x6fe5c544,0x2694,0x48fc,{0x9c,0x50,0x5b,0x32,0xe3,0x8f,0x6e,0xa2}};
extern "C" const GUID __declspec(selectany) IID_IAcadViewports =
    {0x8caaf247,0xa4ae,0x486a,{0xa8,0x86,0x37,0xf0,0x7a,0xa4,0x61,0xa0}};
extern "C" const GUID __declspec(selectany) IID_IAcadPlotConfigurations =
    {0xb863a2f4,0x4fcd,0x4269,{0x9f,0x67,0x14,0xed,0x9e,0x75,0xa7,0xce}};
extern "C" const GUID __declspec(selectany) IID_IAcadSectionManager =
    {0x38d109f9,0x00b7,0x47bf,{0x89,0xbd,0x27,0x20,0x84,0x47,0x82,0x31}};
extern "C" const GUID __declspec(selectany) IID_IAcadMaterial =
    {0x0c755ca3,0x0d6a,0x493a,{0x8a,0x3a,0xcf,0x00,0x55,0x0d,0x7a,0x3c}};
extern "C" const GUID __declspec(selectany) IID_IAcadMaterials =
    {0x0f9a3916,0xcc82,0x4177,{0xaa,0xbd,0x74,0xd2,0x43,0xa1,0x5a,0x04}};
extern "C" const GUID __declspec(selectany) IID_IAcadObjectEvents =
    {0xa0df146c,0x6a67,0x4497,{0xb5,0x46,0x85,0xaf,0x42,0xb6,0x02,0x44}};
extern "C" const GUID __declspec(selectany) IID_IAcadTableStyle =
    {0x0978b906,0x02e7,0x42d8,{0xa0,0x14,0x28,0xea,0x9d,0x61,0x08,0x4e}};
extern "C" const GUID __declspec(selectany) IID_IAcadMLeaderStyle =
    {0x67388466,0xa056,0x4740,{0x97,0xc6,0xd8,0x18,0x37,0xfc,0x81,0x99}};
extern "C" const GUID __declspec(selectany) IID_IAcadAttributeReference =
    {0xd867a88e,0xe78d,0x4eca,{0x86,0x37,0x74,0xa3,0x42,0xfa,0x32,0xb2}};
extern "C" const GUID __declspec(selectany) IID_IAcadOle =
    {0x5be299ec,0x70bb,0x4fe3,{0x86,0x09,0xd7,0x4e,0xc8,0xff,0x0e,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IAcadHelix =
    {0xbe461951,0xc77e,0x4c70,{0xbd,0x83,0xc3,0x92,0x82,0x0c,0x11,0xfc}};
extern "C" const GUID __declspec(selectany) IID_IAcadSurface =
    {0x3d3962e2,0xe12b,0x4559,{0x96,0xcf,0xf3,0x21,0x34,0xa0,0x57,0x7b}};
extern "C" const GUID __declspec(selectany) IID_IAcadPlaneSurface =
    {0xfb3fac8e,0x4f36,0x4a96,{0xae,0x22,0x19,0x4b,0x9b,0x68,0x6d,0x9f}};
extern "C" const GUID __declspec(selectany) IID_IAcadExtrudedSurface =
    {0x813198dd,0xef1c,0x4838,{0x95,0xf4,0x13,0xa4,0x84,0xca,0xe9,0x32}};
extern "C" const GUID __declspec(selectany) IID_IAcadRevolvedSurface =
    {0x60834ece,0x8e4a,0x4aec,{0xa2,0x17,0xd0,0xdd,0x2d,0xe1,0xb4,0x5f}};
extern "C" const GUID __declspec(selectany) IID_IAcadSweptSurface =
    {0xb4ad389f,0x2624,0x4670,{0xa4,0x80,0xdc,0x8b,0x29,0xfb,0xc3,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IAcadLoftedSurface =
    {0xa501529b,0xd232,0x42a5,{0x91,0xc1,0x71,0x47,0x91,0x87,0x90,0x0e}};
extern "C" const GUID __declspec(selectany) IID_IAcadSection2 =
    {0x010c960c,0xb734,0x4c93,{0xa5,0x0c,0xe7,0x3d,0x8f,0x29,0xd6,0xde}};
extern "C" const GUID __declspec(selectany) IID_IAcadUnderlay =
    {0x92f36a6f,0x7faf,0x49de,{0x93,0xf0,0x93,0xe9,0xbc,0xb8,0xaa,0x6c}};
extern "C" const GUID __declspec(selectany) IID_IAcadDwfUnderlay =
    {0x9e607850,0xb9bd,0x4516,{0x88,0x65,0x58,0xd1,0xec,0x3d,0x21,0x33}};
extern "C" const GUID __declspec(selectany) IID_IAcadWipeout =
    {0x03be17b5,0x89b0,0x4341,{0xa5,0xfc,0x31,0x93,0x4b,0xdb,0x54,0x82}};
extern "C" const GUID __declspec(selectany) IID_IAcadSubDMesh =
    {0x7b142040,0x0b30,0x4e59,{0x96,0x6d,0xfa,0x12,0x77,0x60,0x40,0x17}};
extern "C" const GUID __declspec(selectany) IID_IAcadNurbSurface =
    {0xbe4e6da9,0x6602,0x4f83,{0xb4,0x58,0xdf,0x0f,0xe7,0x60,0x2c,0xc8}};
extern "C" const GUID __declspec(selectany) IID_IAcadGeoPositionMarker =
    {0x030fbed4,0x476a,0x4db5,{0x84,0xc0,0x6f,0x2c,0xd8,0x56,0xfc,0xc3}};
extern "C" const GUID __declspec(selectany) IID_IAcadGeomapImage =
    {0x0af8ab47,0xb44e,0x4e1c,{0x92,0xef,0x20,0xec,0x02,0x02,0xc3,0xbd}};
extern "C" const GUID __declspec(selectany) IID_IAcadPointCloud =
    {0x9995941c,0x67e4,0x4c5b,{0xa2,0xc7,0xf6,0xbc,0x8a,0x32,0x96,0x48}};
extern "C" const GUID __declspec(selectany) IID_IAcadPointCloudEx =
    {0x22c5274e,0xdc1a,0x4b3f,{0xa1,0xf4,0x94,0x3a,0xf9,0xbb,0x7a,0x46}};
extern "C" const GUID __declspec(selectany) IID_IAcadPointCloudEx2 =
    {0xffc368fe,0xbddf,0x4281,{0x80,0x6a,0xab,0xa6,0x5a,0xfa,0xd0,0x3e}};
extern "C" const GUID __declspec(selectany) IID_IAcadDatabase =
    {0x6bdb570e,0x652b,0x4e06,{0x9f,0xa3,0x17,0x26,0x6b,0xc9,0x54,0x14}};
extern "C" const GUID __declspec(selectany) IID_IAcadLayerStateManager =
    {0x0cb51cb5,0xcc33,0x4ac0,{0x98,0x67,0x08,0x5e,0xba,0x33,0x16,0xa0}};
extern "C" const GUID __declspec(selectany) IID_IAcadBlock =
    {0x181f4481,0x763e,0x4e58,{0xae,0x89,0xcf,0x4c,0x00,0x3e,0xf4,0x91}};
extern "C" const GUID __declspec(selectany) IID_IAcadModelSpace =
    {0xdd75d714,0x5662,0x44ea,{0xbd,0x50,0x3c,0x48,0xaa,0x71,0xe2,0x48}};
extern "C" const GUID __declspec(selectany) IID_IAcadLayout =
    {0x39642510,0xece5,0x4620,{0xa0,0xee,0x5e,0xc5,0xc6,0x38,0x2c,0x15}};
extern "C" const GUID __declspec(selectany) IID_IAcadPaperSpace =
    {0x655a39a8,0x041f,0x4156,{0x9f,0x02,0xf9,0x18,0x0a,0x04,0x68,0xa5}};
extern "C" const GUID __declspec(selectany) IID_IAcadBlocks =
    {0x16effb20,0x32ce,0x494d,{0x98,0x2c,0x37,0x3a,0x53,0x96,0x8a,0x40}};
extern "C" const GUID __declspec(selectany) IID_IAcadLayouts =
    {0xa1bd1006,0x20ed,0x48c4,{0x91,0x80,0x1e,0xe5,0xb2,0x6f,0x68,0x48}};
extern "C" const GUID __declspec(selectany) IID_IAcadSortentsTable =
    {0xf24a1ea1,0xca8e,0x4a39,{0xa2,0x3c,0xa2,0x8d,0x34,0x23,0xae,0x5e}};
extern "C" const GUID __declspec(selectany) IID_IAcadDocument =
    {0x1c6e41bb,0x3441,0x477c,{0xbc,0xc0,0x6e,0x05,0xa3,0xd4,0x87,0xfd}};
extern "C" const GUID __declspec(selectany) IID_IAcadPlot =
    {0x2761aa3f,0x0da6,0x4203,{0x83,0x6e,0xfd,0x0a,0x0f,0xc1,0x68,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IAcadApplication =
    {0x2007dd78,0xb05a,0x422e,{0xaf,0x97,0xcd,0x08,0xd8,0xdc,0xd8,0xe0}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesFiles =
    {0xcfd2d9a8,0xbdda,0x455a,{0x93,0xad,0x8d,0x47,0xed,0x6c,0xd9,0xcb}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesDisplay =
    {0xbf71abf6,0x0878,0x493d,{0xb7,0xec,0xf2,0x21,0x79,0x7c,0x41,0xdb}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesOpenSave =
    {0xdbb44995,0x7728,0x499e,{0x82,0x73,0x2a,0xb3,0x0a,0xc1,0x77,0x94}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesOutput =
    {0xbc4af42a,0xd51e,0x4936,{0x96,0x2d,0x1a,0xdb,0xdd,0xfd,0x60,0x90}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesSystem =
    {0xdaf7bc7c,0xa60a,0x4ca7,{0xbb,0xd9,0xa6,0xde,0xd4,0x55,0x68,0x2e}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesUser =
    {0x65651c0f,0x4381,0x452b,{0xa8,0xd7,0xa0,0x1f,0x1a,0x8e,0xfc,0x9d}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesDrafting =
    {0x1f8ebfdf,0x587c,0x473d,{0xae,0x11,0x33,0x0c,0xda,0x3c,0x66,0x9f}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesSelection =
    {0x16dc76bd,0xed63,0x45e5,{0xa9,0x67,0x19,0xdf,0x2f,0x7d,0x30,0x20}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferencesProfiles =
    {0x873b8ce1,0x8b8a,0x4d5a,{0x8c,0x07,0x63,0xfd,0x9c,0xd6,0xba,0x6c}};
extern "C" const GUID __declspec(selectany) IID_IAcadPreferences =
    {0xc8fba802,0x6ff6,0x46bb,{0xa2,0x9b,0x96,0xf4,0x6e,0x09,0xea,0x4f}};
extern "C" const GUID __declspec(selectany) IID_IAcadDocuments =
    {0xcf9b7f19,0x1488,0x4bfe,{0xa9,0x4a,0x5c,0x2a,0xfc,0x33,0x76,0x94}};
extern "C" const GUID __declspec(selectany) IID_IAcadState =
    {0x533c7ec0,0xdf22,0x4932,{0xaf,0x1a,0xdc,0x3b,0xee,0x57,0x38,0xff}};
extern "C" const GUID __declspec(selectany) IID_IAcadSelectionSet =
    {0x1d771106,0x2777,0x4623,{0xa0,0x67,0xa3,0xdf,0x34,0x0f,0x5b,0x04}};
extern "C" const GUID __declspec(selectany) IID_IAcadSelectionSets =
    {0x05a76357,0xf243,0x4dcb,{0x92,0x52,0x13,0xcc,0x35,0x0b,0x86,0x0a}};
extern "C" const GUID __declspec(selectany) IID_IAcadMenuGroups =
    {0x938efd49,0xa1f8,0x47bc,{0xb1,0x90,0x51,0x25,0x13,0xcd,0xe0,0xe9}};
extern "C" const GUID __declspec(selectany) IID_IAcadMenuGroup =
    {0x04809366,0xad70,0x4f50,{0xb1,0xbf,0xc4,0xc0,0xf6,0xa7,0xb9,0xfb}};
extern "C" const GUID __declspec(selectany) IID_IAcadPopupMenus =
    {0xd550a209,0xe331,0x4ec9,{0x9f,0xf8,0x2f,0x61,0xb2,0xe3,0x48,0x94}};
extern "C" const GUID __declspec(selectany) IID_IAcadPopupMenu =
    {0x43dc6ffa,0xaeb4,0x48a4,{0xb5,0xaf,0x9f,0xd8,0xa0,0x00,0x62,0xf1}};
extern "C" const GUID __declspec(selectany) IID_IAcadPopupMenuItem =
    {0x1b1eaf6b,0x11f1,0x41bc,{0x9f,0x67,0xb6,0x78,0xa9,0xb4,0xee,0x02}};
extern "C" const GUID __declspec(selectany) IID_IAcadMenuBar =
    {0xa3b67312,0x1dd6,0x40b7,{0xb0,0x0f,0x90,0x15,0x49,0x12,0x61,0xec}};
extern "C" const GUID __declspec(selectany) IID_IAcadToolbars =
    {0x9fe35c7f,0x8487,0x45ab,{0xbf,0x73,0xf6,0x9b,0xbf,0x40,0x02,0x24}};
extern "C" const GUID __declspec(selectany) IID_IAcadToolbar =
    {0xcc174f04,0xf9ea,0x44a1,{0x9e,0xa1,0x3a,0x40,0x3d,0x86,0x72,0x7e}};
extern "C" const GUID __declspec(selectany) IID_IAcadToolbarItem =
    {0x8c8f63d0,0x35a7,0x4d29,{0x9c,0x4d,0x98,0x86,0xf1,0x64,0xfd,0x5d}};

} // namespace AutoCAD

#pragma pack(pop)
